Script started on 2019-06-30 23:43:13+10:00 [TERM="screen" TTY="/dev/pts/4" COLUMNS="123" LINES="39"]
[01;32mpi@raspberrypi[00m:[01;34m~/docker_images $[00m sudo ./install-and-configure-docker.sh 

Install necessary softwares for adding docker-ce apt source with gpg key
[33m0% [Working][0mm[33m0% [Connecting to raspbian.raspberrypi.org (2a00:1098:0:80:1000:75:0:3)] [Waiting for headers][0m                                                                                              Hit:1 http://archive.raspberrypi.org/debian buster InRelease
[33m                                                                                              0% [Waiting for headers][0m                        Hit:2 http://raspbian.raspberrypi.org/raspbian buster InRelease
[33m                        0% [Working][0m[33m0% [Working][0m[33m20% [Working][0m             Reading package lists... 0%Reading package lists... 0%Reading package lists... 0%Reading package lists... 44%Reading package lists... 72%Reading package lists... 97%Reading package lists... 97%Reading package lists... 97%Reading package lists... 97%Reading package lists... 98%Reading package lists... 98%Reading package lists... 98%Reading package lists... 98%Reading package lists... 99%Reading package lists... 99%Reading package lists... 99%Reading package lists... Done
Building dependency tree... 0%Building dependency tree... 0%Building dependency tree... 0%Building dependency tree... 50%Building dependency tree... 50%Building dependency tree       
Reading state information... 0%Reading state information... 0%Reading state information... Done
All packages are up to date.
Reading package lists... 0%Reading package lists... 100%Reading package lists... Done
scw erBuilding dependency tree... 0%Building dependency tree... 0%Building dependency tree... 50%Building dependency tree... 50%sBuilding dependency tree... 97%Building dependency tree       
Reading state information... 0%Reading state information... 0%Reading state information... Done
apt-transport-https is already the newest version (1.8.2).
ca-certificates is already the newest version (20190110).
curl is already the newest version (7.64.0-4).
gnupg2 is already the newest version (2.2.12-1+rpi1).
software-properties-common is already the newest version (0.96.20.2-2).
0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.

Installing fingerprint for docker-ce source
OK

Verifing fingerprint of the key

Adding docker-ce apt source
Traceback (most recent call last):
  File "/usr/bin/add-apt-repository", line 95, in <module>
    sp = SoftwareProperties(options=options)
  File "/usr/lib/python3/dist-packages/softwareproperties/SoftwareProperties.py", line 109, in __init__
    self.reload_sourceslist()
  File "/usr/lib/python3/dist-packages/softwareproperties/SoftwareProperties.py", line 599, in reload_sourceslist
    self.distro.get_sources(self.sourceslist)    
  File "/usr/lib/python3/dist-packages/aptsources/distro.py", line 93, in get_sources
    (self.id, self.codename))
aptsources.distro.NoDistroTemplateException: Error: could not find a distribution template for Raspbian/buster
Failed to add the docker debian source

Installing docker-ce
[33m0% [Working][0m[33m0% [Connecting to raspbian.raspberrypi.org (2a00:1098:0:80:1000:75:0:3)] [Waiting for headers][0m                                                                                              Hit:1 http://archive.raspberrypi.org/debian buster InRelease
[33m                                                                                              0% [Waiting for headers][0m                        Hit:2 http://raspbian.raspberrypi.org/raspbian buster InRelease
[33m                        0% [Working][0m[33m0% [Working][0m[33m20% [Working][0m             Reading package lists... 0%Reading package lists... 0%Reading package lists... 0%Reading package lists... 37%Reading package lists... 65%Reading package lists... 94%Reading package lists... 97%Reading package lists... 97%Reading package lists... 97%Reading package lists... 97%Reading package lists... 98%Reading package lists... 98%Reading package lists... 98%Reading package lists... 98%Reading package lists... 99%Reading package lists... 99%Reading package lists... Done
Building dependency tree... 0%Building dependency tree... 0%Building dependency tree... 0%Building dependency tree... 50%Building dependency tree... 50%Building dependency tree       
Reading state information... 0%Reading state information... 0%Reading state information... Done
All packages are up to date.
Reading package lists... 0%Reading package lists... 100%Reading package lists... Done
Building dependency tree... 0%Building dependency tree... 0%Building dependency tree... 50%Building dependency tree... 50%Building dependency tree       
Reading state information... 0%Reading state information... 0%Reading state information... Done
Package docker-ce is not available, but is referred to by another package.
This may mean that the package is missing, has been obsoleted, or
is only available from another source

E: Package 'docker-ce' has no installation candidate
E: Unable to locate package docker-ce-cli
E: Unable to locate package containerd.io
E: Couldn't find any package by glob 'containerd.io'
E: Couldn't find any package by regex 'containerd.io'
Failed to install docker-ce

Install completed

Verifing docker install
./func_collection.sh: line 3: docker: command not found
./func_collection.sh: line 5: docker: command not found

Docker is not installed properly, something went wrong
[01;32mpi@raspberrypi[00m:[01;34m~/docker_images $[00m mscw ers[K[K[K[K[K[K[K[Ki[Kvi install-and-configure-docker.sh 
[?1049h[?1h=[1;39r[23m[24m[0m[H[J[?25l[39;1H"install-and-configure-docker.sh" 68 lines, 898964 characters[1;1H#!/usr/bin/env bash

source ./func_collection.sh

if [ $UID -ne 0 ]; then
    echo "Does not have enough permission, please run as root"
    exit 1
fi

# Install docker-ce using distro's software manager
if grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[16;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[19;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    if [ $? -eq 1 ]; then[22;9Hecho "Failed to verify the fingerprint"[23;9Hexit 1
    fi[26;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable" || \
    (echo "Failed to add the docker debian source" && exit 1)[30;5Hecho -e "\nInstalling docker-ce"
    (apt update && apt install docker-ce docker-ce-cli containerd.io) || \
    (echo "Failed to install docker-ce" && exit 1)[34;5Hecho -e "\nInstall completed"
else
    echo "Distribution not supported"
    exit 1
fi[1;1H[34h[?25h

























[26;1H

[27;100H[?25l|| \[27;100H[K[27;96H[34h[?25h[?25l| \[27;99H[K[27;96H[34h[?25h[?25l \[27;98H[K[27;96H[34h[?25h[?25l\[27;97H[K[27;96H[34h[?25h[?25l[27;96H[K[27;95H[34h[?25h[28;61H    [?25l[28;38r[28;1H[L[1;39r[39;1H[K[28;1H[34h[?25h[?25l[8C[34h[?25h[?25l[34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25li[34h[?25h[?25lf[34h[?25h[?25l [34h[?25h[?25l[[34h[?25h[?25l [34h[?25h[?25l#[34h[?25h[?25l[34h[?25h[?25l$[34h[?25h[?25l?[34h[?25h[?25l [34h[?25h[?25l-[34h[?25h[?25ln[34h[?25h[?25le[34h[?25h[?25l [34h[?25h[?25l0[34h[?25h[?25l][34h[?25h[?25l[34h[?25h[?25l [34h[?25h[?25l][34h[?25h[?25l;[34h[?25h[?25l [34h[?25h[?25lt[34h[?25h[?25lh[34h[?25h[?25le[34h[?25h[?25ln[34h[?25h[29;25H[?25l[30;38r[30;1H[L[1;39r[30;1H[34h[?25h[?25lf[34h[?25h[?25l[34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25lf[34h[?25h[?25li[34h[?25h[?25l[30;38r[30;1H[L[1;39r[30;1HA[34h[?25h[?25l[30;38r[38;1H
[1;39r[38;5Hecho "Distribution not supported"[30;5H[34h[?25h[29;5H[?25lecho "Failed to add the docker debian source" && exit 1)[29;61H[K[29;5H[34h[?25h[?25l echo "Failed to add the docker debian source" && exit 1)     [34h[?25h[?25l echo "Failed to add the docker debian source" && exit 1)[29;7H[34h[?25h[?25l echo "Failed to add the docker debian source" && exit 1)[29;8H[34h[?25h[?25l echo "Failed to add the docker debian source" && exit 1)[29;9H[34h[?25h[30;6H[29;64H[?25l[29;64H[K[29;63H[34h[?25h[?25l&& exit 1[29;63H[K[29;54H[34h[?25h[?25l& exit 1[29;62H[K[29;54H[34h[?25h[?25l exit 1[29;61H[K[29;54H[34h[?25h[?25lexit 1[29;60H[K[29;54H[34h[?25h[?25l[30;38r[30;1H[L[1;39r[29;54H[K[30;1Hexit 1[34h[?25h[?25l exit 1 [34h[?25h[?25l exit 1  [34h[?25h[?25l exit 1   [34h[?25h[?25l exit 1    [34h[?25h[?25l exit 1[34h[?25h[?25l exit 1[34h[?25h[?25l exit 1[34h[?25h[?25l exit 1[34h[?25h[?25l[39;1H:[34h[?25hw[?25l"install-and-configure-docker.sh" 71 lines, 898964 characters written[30;8H[34h[?25h[29;8H[28;8H[27;8H[26;8H[25;1H[24;6H[23;8H[22;8H[21;8H[20;8H[19;8H[18;1H[17;8H[16;8H[15;1H[14;8H[13;8H[12;8H[11;8H[10;8H[9;1H[8;2H[7;8H[6;8H[5;8H[4;1H[23m[24m[0m[H[J[?25l[1;1H#!/usr/bin/env bash

source ./func_collection.sh

if [ $UID -ne 0 ]; then
    echo "Does not have enough permission, please run as root"
    exit 1
fi

# Install docker-ce using distro's software manager
if grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[16;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[19;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    if [ $? -eq 1 ]; then[22;9Hecho "Failed to verify the fingerprint"[23;9Hexit 1
    fi[26;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    if [ $? -ne 0 ]; then[29;9Hecho "Failed to add the docker debian source"[30;9Hexit 1
    fi[33;5Hecho -e "\nInstalling docker-ce"
    (apt update && apt install docker-ce docker-ce-cli containerd.io) || \
    (echo "Failed to install docker-ce" && exit 1)[37;5Hecho -e "\nInstall completed"
else
    echo "Distribution not supported"[4;1H[34h[?25h[23m[24m[0m[H[J[?25l[1;1H#!/usr/bin/env bash

source ./func_collection.sh

if [ $UID -ne 0 ]; then
    echo "Does not have enough permission, please run as root"
    exit 1
fi

# Install docker-ce using distro's software manager
if grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[16;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[19;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    if [ $? -eq 1 ]; then[22;9Hecho "Failed to verify the fingerprint"[23;9Hexit 1
    fi[26;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    if [ $? -ne 0 ]; then[29;9Hecho "Failed to add the docker debian source"[30;9Hexit 1
    fi[33;5Hecho -e "\nInstalling docker-ce"
    (apt update && apt install docker-ce docker-ce-cli containerd.io) || \
    (echo "Failed to install docker-ce" && exit 1)[37;5Hecho -e "\nInstall completed"
else[4;1H[34h[?25h[5;8H[6;8H[7;8H
f
[10;8H[11;8H[23m[24m[0m[H[J[?25l[1;1H#!/usr/bin/env bash

source ./func_collection.sh

if [ $UID -ne 0 ]; then
    echo "Does not have enough permission, please run as root"
    exit 1
fi

# Install docker-ce using distro's software manager
if grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[16;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[19;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    if [ $? -eq 1 ]; then[22;9Hecho "Failed to verify the fingerprint"[23;9Hexit 1
    fi[26;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    if [ $? -ne 0 ]; then[29;9Hecho "Failed to add the docker debian source"[30;9Hexit 1
    fi[33;5Hecho -e "\nInstalling docker-ce"
    (apt update && apt install docker-ce docker-ce-cli containerd.io) || \
    (echo "Failed to install docker-ce" && exit 1)[37;5Hecho -e "\nInstall completed"
else
    echo "Distribution not supported"
    exit 1
fi[11;8H[34h[?25h[12;8H[13;8H[14;8H
[16;8H[17;8H
[17;8H[16;8H[15;1H[14;8H[13;8H[12;8H[11;8H[10;8H[9;1H[8;2H[7;8H[6;8H[5;8H[?25l[42;1H:[34h[?25hsp func_c[34m^I[?25l[0m[42;11H[K[42;11H[34h[?25hollection.sh[?25l"func_collection.sh" [42;22H[K[42;22H15 lines, 898964 characters[1;1Hverify_docker_install() {
    echo -e "\nVerifing docker install"
    docker run --rm hello-world
    exit_status=$?
    docker rmi hello-world
    if [ $exit_status -ne 0 ]; then[6;36H[K[7;5H    echo -e "\nDocker is not installed properly, something went wrong"
        exit 1
    fi
}[10;3H[K[11;1H[K[12;1Hrestart_docker() {[12;19H[K[13;5Hecho -e "\nRestarting docker"
    /etc/init.d/docker restart[14;31H[K[15;1H}
[1m[34m~                                                                                                                          [17;1H~                                                                                                                          [18;1H~                                                                                                                          [19;1H~                                                                                                                          [20;1H~                                                                                                                          [0m[21;1H[1m[7mfunc_collection.sh                                                                                                         [0m[22;1Hsource ./func_collection.sh[22;28H[K[23;9H[K[24;1Hif [ $UID -ne 0 ]; then
    echo "Does not have enough permission, please run as root"[26;6Hxit 1[26;11H[K[27;1Hfi[27;5H[K[28;5H[K[29;1H# Install docker-ce using distro's software manager[29;52H[K[30;1Hif grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[34;5H[K[35;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[37;5H[K[38;1H    echo -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    if [ $? -eq 1 ]; then
[7minstall-and-configure-docker.sh                                                                                            [1;1H[34h[?25h













[?25l[0m[16;1H[K[21;20H[1m[7m[+][16;1H[34h[?25h[?25l[0m[17;1H[K[17;1H[34h[?25h[?25l[42;1H[K[42;1H:[34h[?25hw[?25l"func_collection.sh" 17 lines, 898964 characters written[21;20H[1m[7m   [17;1H[34h[?25h[0m[21;1H[7mfunc_collection.sh                                                                                                         [0m[41;1H[1m[7minstall-and-configure-docker.sh                                                                                            [24;8H[?25l[22;40r[0m[22;1H[9M[1;42r[32;9Hecho "Failed to verify the fingerprint"[33;9Hexit 1
    fi[36;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    if [ $? -ne 0 ]; then[39;9Hecho "Failed to add the docker debian source"[40;9Hexit 1[42;1H[K[24;5H[34h[?25h[?25l[22;40r[22;1H[9M[1;42r[32;5Hfi[34;5Hecho -e "\nInstalling docker-ce"
    (apt update && apt install docker-ce docker-ce-cli containerd.io) || \
    (echo "Failed to install docker-ce" && exit 1)[38;5Hecho -e "\nInstall completed"
else
    echo "Distribution not supported"[24;9H[34h[?25h[25;6H
[27;9H[28;9H[29;9H[30;9H[31;9H[32;6H
[34;9H[35;9H[?25l[22;40r[22;1H[9M[1;42r[32;5Hexit 1
fi

verify_docker_install

echo -e "\nStart to configure docker\nEnable usernamespace first"
sysctl >/dev/null 2>&1
if [ $? -eq 127 ]; then
    echo -e "\nCommand 'sysctl' not found and thus cannot enable user namespace"[35;1H[34h[?25h




[?25l[22;40r[40;1H
[1;42r[40;5Hexit 1[34h[?25h[?25l[22;40r[40;1H
[1;42r[40;1Hfi[34h[?25h[?25l[22;40r[40;1H
[1;42r[40;1Hsysctl -w kernel.unprivileged_userns_clone=1[34h[?25h[?25l[22;40r[40;1H
[1;42r[40;1H[34h[?25h[?25l[22;40r[40;1H
[1;42r[40;1Hecho -e "\nEnabling user remap feature in docker using user namespace"[34h[?25h[?25l[22;40r[40;1H
[1;42r[40;1Hecho -e '{\n    "userns-remap": "default"\n}'>/etc/docker/daemon.json[34h[?25h[?25l[22;40r[40;1H
[1;42r[40;1H[34h[?25h[?25l[22;40r[40;1H
[1;42r[40;1Hrestart_docker[34h[?25h[?25l[22;40r[40;1H
[1;42r[40;1H[34h[?25h[?25l[22;40r[40;1H
[1;42r[40;1Hecho -e "Verifing the user remap feature"[34h[?25h[?25l[22;40r[40;1H
[1;42r[40;1Hid dockremap[34h[?25h[?25l[22;40r[40;1H
[1;42r[40;1Hif [ $? -ne 0 ]; then[34h[?25h[?25l[22;40r[40;1H
[1;42r[40;5Hecho -e "\nDockerd failed to create dockremap user"[34h[?25h[?25l[22;40r[40;1H
[1;42r[40;5Hexit 1[34h[?25h[?25l[22;40r[40;1H
[1;42r[40;1Hfi[34h[?25h[?25l[22;40r[40;1H
[1;42r[40;1H[34h[?25h[39;1H[38;1H[37;1H[36;1H[35;1H[34;1H[33;1H[32;1H[31;1H[30;1H[29;1H[28;1H[27;1H[26;1H[25;1H[24;1H[23;1H[22;1H[?25l[22;40r[22;1H[L[1;42r[22;1Hecho -e "\nStart to configure docker\nEnable usernamespace first"[34h[?25h[?25l[22;40r[22;1H[L[1;42r[22;1H[34h[?25h[?25l[22;40r[22;1H[L[1;42r[22;1Hverify_docker_install[34h[?25h

















[?25l[22;40r[40;1H
[1;42r[40;5Hexit 1[34h[?25h[?25l[22;40r[40;1H
[1;42r[40;1Hfi[34h[?25h[?25l[22;40r[40;1H
[1;42r[40;1H[34h[?25h[21;1H[1m[7mfunc_collection.sh                                                                                                         [0m[41;1H[7minstall-and-configure-docker.sh                                                                                            [17;1H[16;1H[15;1H

[16;1H[15;1H[14;1H[13;1H[12;1H[11;1H[10;1H[9;1H[8;1H[7;1H[6;1H[5;1H[4;1H[3;1H[2;1H[1;1H















[16;1H[15;1H[14;1H


[?25l[0mE[21;20H[1m[7m[+][17;2H[34h[?25h[?25l[0mx[34h[?25h[?25li[34h[?25h[?25lt[34h[?25h[?25l_[34h[?25h[?25li[34h[?25h[?25lf[34h[?25h[?25l([34h[?25h[?25l)[34h[?25h[?25l [34h[?25h[?25l{[34h[?25h[?25l[18;1H[K[18;1H[34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25li[34h[?25h[?25lf[34h[?25h[?25l [34h[?25h[?25lA[18;5H[K[19;1H    if [19;8H[K[18;2H[34h[?25h[?25l
A[19;5H[K[20;1H    if [20;8H[K[18;2H[34h[?25h[?25l
    if
[1m[34m~                                                                                                                          [18;1H[34h[?25h[?25l[0m    if
[1m[34m~                                                                                                                          [18;5H[34h[?25h[17;5H[?25l[17;20r[0m[17;1H[L[1;42r[17;1H[34h[?25h[?25l#[34h[?25h[?25l [34h[?25h[?25lI[34h[?25h[?25lf[34h[?25h[?25l [34h[?25h[?25lm[34h[?25h[?25l[34h[?25h[?25l[[34h[?25h[?25l [34h[?25h[?25l$[34h[?25h[?25l1[34h[?25h[?25l [34h[?25h[?25l-[34h[?25h[?25ln[34h[?25h[?25le[34h[?25h[?25l [34h[?25h[?25l0[34h[?25h[?25l [34h[?25h[?25l][34h[?25h[?25l,[34h[?25h[?25l [34h[?25h[?25le[34h[?25h[?25lx[34h[?25h[?25li[34h[?25h[?25lt[34h[?25h[?25l [34h[?25h[?25lw[34h[?25h[?25li[34h[?25h[?25lt[34h[?25h[?25lh[34h[?25h[?25l [34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25le[34h[?25h[?25lc[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25lp[34h[?25h[?25lr[34h[?25h[?25li[34h[?25h[?25ln[34h[?25h[?25lt[34h[?25h[?25l [34h[?25h[?25l$[34h[?25h[?25l2[34h[?25h[?25l [34h[?25h[?25la[34h[?25h[?25ln[34h[?25h[?25ld[34h[?25h[?25l [34h[?25h[?25le[34h[?25h[?25lx[34h[?25h[?25li[34h[?25h[?25lt[34h[?25h[?25l.[34h[?25h[?25l[42;1H:[34h[?25hw[?25l"func_collection.sh" 19 lines, 898964 characters written[21;20H[1m[7m   [17;37H[34h[?25h[18;11H[19;7H[0m [?25l[[21;20H[1m[7m[+][19;9H[34h[?25h[?25l[0m [34h[?25h[?25l$[34h[?25h[?25l1[34h[?25h[?25l [34h[?25h[?25l-[34h[?25h[?25ln[34h[?25h[?25le[34h[?25h[?25l [34h[?25h[?25l0[34h[?25h[?25l [34h[?25h[?25l][34h[?25h[?25l;[34h[?25h[?25l [34h[?25h[?25lt[34h[?25h[?25lh[34h[?25h[?25le[34h[?25h[?25ln[34h[?25h[?25l[20;1H[K[20;1H[34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25le[34h[?25h[?25lc[34h[?25h[?25lh[34h[?25h[?25lo[34h[?25h[?25l [34h[?25h[?25l-[34h[?25h[?25le[34h[?25h[?25l [34h[?25h[?25l"[34h[?25h[?25l$[34h[?25h[?25l2[34h[?25h[?25l"[34h[?25h[?25l[1;20r[20;1H
[1;42r[42;1H[K[20;1H[34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25le[34h[?25h[?25lx[34h[?25h[?25li[34h[?25h[?25lt[34h[?25h[?25l [34h[?25h[?25l1[34h[?25h[?25l[1;20r[20;1H
[1;42r[20;1H[34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25lf[34h[?25h[?25li[34h[?25h[?25l[1;20r[20;1H
[1;42r[20;1H[34h[?25h[?25l}[34h[?25h[?25l[42;1H:[34h[?25hw[?25l"func_collection.sh" 23 lines, 898964 characters written[21;20H[1m[7m   [20;1H[34h[?25h[0m
[7mfunc_collection.sh                                                                                                         [0m[41;1H[1m[7minstall-and-configure-docker.sh                                                                                            [40;1H[?25l[0m[22;1H#!/usr/bin/env bash[22;20H[K[23;1H[K[24;1Hsource ./func_collection.sh[24;28H[K[25;5H[K[26;1Hif [ $UID -ne 0 ]; then
    echo "Does not have enough permission, please run as root"
    exit 1
fi[29;3H[K[30;1H[K[31;1H# Install docker-ce using distro's software manager
if grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \[34;20H[K[35;1H    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[36;1H[K[37;16HInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[39;1H[K[40;5Hecho -e "\nVerifing fingerprint of the key"[22;1H[34h[?25h









[31;1H[30;1H[29;1H[28;1H[27;1H[26;1H[25;1H[?25l[26;40r[26;1H[L[1;42r[41;33H[1m[7m[+][0m[42;1H[K[26;1H[34h[?25h[?25lE[34h[?25h[?25lx[34h[?25h[?25li[34h[?25h[?25lt[34h[?25h[?25l_[34h[?25h[?25li[34h[?25h[?25lf[34h[?25h[?25l [34h[?25h[?25l$[34h[?25h[?25lU[34h[?25h[?25lI[34h[?25h[?25lD[34h[?25h[?25l [34h[?25h[27;13H[28;13H[?25l[34h[?25h[?25l[7m"Does not have enough permission, please run as root" 
    exit [34h[?25h[?25l1 
fi[34h[?25h[?25l[0mfi[34h[?25h[?25l[29;10H1[29;11H[K[29;10H[34h[?25h[?25lexit [34h[?25h[?25l[28;62H"[28;63H[K[29;1H    [28;62H[34h[?25h[?25l[28;10H"Does not have enough permission, please run as root[28;10H[34h[?25h[27;10H[26;10HUID [?25l "Does not have enough permission, please run as root"[34h[?25h[27;23H[?25l[34h[?25h[?25l[7mi
[34h[?25h[?25l 
[34h[?25h[?25l 
[34h[?25h[?25l[0m[27;1Hi
 
 [27;1H[34h[?25h[?25l#if [ $UID -ne 0 ]; then#[34h[?25h[?25l
#    echo "Does not have enough permission, please run as root"
#    exit 1
#fi[27;1H[34h[?25h[?25l[42;1H:[34h[?25hwq[?25l"install-and-configure-docker.sh" 72 lines, 898964 characters written[1;1Hverify_docker_install() {
    echo -e "\nVerifing docker install"
    docker run --rm hello-world[3;32H[K[4;5Hexit_status=$?[4;19H[K[5;5Hdocker rmi hello-world
    if [ $exit_status -ne 0 ]; then
 [7Cecho -e "\nDocker is not installed properly, something went wrong"[8;9Hexit 1
    fi[9;7H[K[10;1H}[10;5H[K[11;5H[K[12;1Hrestart_docker() {
    echo -e "\nRestarting docker"
    /etc/init.d/docker restart[14;31H[K[15;1H}[15;2H[K[16;5H[K[17;1H# If [ $1 -ne 0 ], print $2 and exit.
Exit_if() {[18;12H[K[19;5Hif [ $1 -ne 0 ]; then
 [7Cecho -e "$2"
        exit 1[21;15H[K[22;1H    fi[22;7H[K[23;1H}
[1m[34m~                                                                                                                          [25;1H~                                                                                                                          [26;1H~                                                                                                                          [27;1H~                                                                                                                          [28;1H~                                                                                                                          [29;1H~                                                                                                                          [30;1H~                                                                                                                          [31;1H~                                                                                                                          [32;1H~                                                                                                                          [33;1H~                                                                                                                          [34;1H~                                                                                                                          [35;1H~                                                                                                                          [36;1H~                                                                                                                          [37;1H~                                                                                                                          [38;1H~                                                                                                                          [39;1H~                                                                                                                          [40;1H~                                                                                                                          [41;1H~                                                                                                                          [23;1H[34h[?25h[?25l[0m[42;1H[K[42;1H:[34h[?25hq[?25l[42;1H[K[42;1H[?1l>[34h[?25h[?1049l[01;32mpi@raspberrypi[00m:[01;34m~/docker_images $[00m scrip[K[K[K[K[K./install-and-configure-docker.sh 
Does not have enough permission, please run as root
[01;32mpi@raspberrypi[00m:[01;34m~/docker_images $[00m vi install-and-configure-docker.sh 
[?1049h[?1h=[1;42r[23m[24m[0m[H[J[?25l[42;1H"install-and-configure-docker.sh" 72 lines, 898964 characters[1;1H#!/usr/bin/env bash

source ./func_collection.sh

Exit_if $UID "Does not have enough permission, please run as root"
#if [ $UID -ne 0 ]; then
#    echo "Does not have enough permission, please run as root"
#    exit 1
#fi

# Install docker-ce using distro's software manager
if grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[17;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[20;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    if [ $? -eq 1 ]; then[23;9Hecho "Failed to verify the fingerprint"[24;9Hexit 1
    fi[27;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    if [ $? -ne 0 ]; then[30;9Hecho "Failed to add the docker debian source"[31;9Hexit 1
    fi[34;5Hecho -e "\nInstalling docker-ce"
    (apt update && apt install docker-ce docker-ce-cli containerd.io) || \
    (echo "Failed to install docker-ce" && exit 1)[38;5Hecho -e "\nInstall completed"
else
    echo "Distribution not supported"
    exit 1[1;1H[34h[?25h



















[?25l[42;1H[K[42;1H:[34h[?25hsp fu[34m^I[?25l[0m[42;7H[K[42;7H[34h[?25hnc[34m^I[?25l[0m[42;9H[K[42;9H[34h[?25h_collection.sh[?25l"func_collection.sh" [42;22H[K[42;22H23 lines, 898964 characters[1;1Hverify_docker_install() {
    echo -e "\nVerifing docker install"
    docker run --rm hello-world
    exit_status=$?
    docker rmi hello-world[5;27H[K[6;1H    if [ $exit_status -ne 0 ]; then
        echo -e "\nDocker is not installed properly, something went wrong"
        exit 1
    fi
}[11;1H[K[12;1Hrestart_docker() {[12;19H[K[13;16HRestarting docker"[13;34H[K[14;5H/etc/init.d/docker restart
}[15;5H[K[17;1H# If [ $1 -ne 0 ], print $2 and exit.[17;39H[K[18;1HExit_if() {[18;12H[K[19;5Hif [ $1 -ne 0 ]; then
        echo -e "$2"[20;21H[K[21;1H[1m[7mfunc_collection.sh                                                                                                         [0m[22;1Hif grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[27;16HInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[28;76H[K[29;5H[K[30;5Hecho -e "\nVerifing fingerprint of the key"[30;48H[K[31;5Hapt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    if [ $? -eq 1 ]; then[33;9Hecho "Failed to verify the fingerprint"
        exit 1[34;15H[K[35;5Hfi[35;7H[K[36;5H[K[37;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    if [ $? -ne 0 ]; then
        echo "Failed to add the docker debian source"
[7minstall-and-configure-docker.sh                                                                                            [1;1H[34h[?25h


[?25l[1;20r[0m[1;1H[3M[1;42r[18;9Hexit 1
    fi
}[42;1H[K[20;1H[34h[?25h[19;1H[18;1H[17;1H[16;1H[15;11H[7C[?25l_() {[21;20H[1m[7m[+][15;9H[34h[?25h[?25l[0mf() {[34h[?25h[?25la() {[34h[?25h[?25li() {[34h[?25h[?25ll() {[34h[?25h[?25le() {[34h[?25h[?25ld() {[34h[?25h[?25l[42;1H:[34h[?25hw[?25l"func_collection.sh" 23 lines, 898964 characters written[21;20H[1m[7m   [15;14H[34h[?25h[16;14H[15;14H[14;14H[13;1H[?25l[0m[42;1H[K[42;1H:[34h[?25hwq[?25l"func_collection.sh" 23 lines, 898964 characters written[1;1H#!/usr/bin/env bash[2;5H[K[3;1Hsource ./func_collection.sh[3;29H[K[4;9H[K[5;1HExit_if $UID "Does not have enough permission, please run as root"
#if [ $UID -ne 0 ]; then
#    echo "Does not have enough permission, please run as root"
#    exit 1
#fi[9;4H[K[10;5H[K[11;1H# Install docker-ce using distro's software manager
if grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \[14;20H[K[15;1H    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[16;5H[K[17;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[19;5H[K[20;1H    echo -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"[21;108H[K[22;1H    if [ $? -eq 1 ]; then[22;27H[K[23;5H    echo "Failed to verify the fingerprint"[23;48H[K[24;5H    exit 1[24;16H[K[25;5Hfi[25;7H[K[27;16HAdding docker-ce apt source"[27;44H[K[28;5Hadd-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    if [ $? -ne 0 ]; then
        echo "Failed to add the docker debian source"
        exit 1[31;15H[K[32;5Hfi[32;8H[K[33;9H[K[34;5Hecho -e "\nInstalling docker-ce"
    (apt update && apt install docker-ce docker-ce-cli containerd.io) || \
    (echo "Failed to install docker-ce" && exit 1)[37;5H[K[38;5Hecho -e "\nInstall completed"[38;34H[K[39;1Helse[39;5H[K[40;5Hecho "Distribution not supported"[40;38H[K[41;1H    exit 1[41;11H[K[21;1H[34h[?25h
[21;1H[20;1H[19;1H[18;1H[17;1H[16;1H[15;1H[14;1H[13;1H[12;1H[11;1H[10;1H[9;1H[8;1H[7;1H[6;1H[5;1H[8C[?25l_ $UID "Does not have enough permission, please run as root"[5;9H[34h[?25h[?25lf $UID "Does not have enough permission, please run as root"[5;10H[34h[?25h[?25la $UID "Does not have enough permission, please run as root"[5;11H[34h[?25h[?25li $UID "Does not have enough permission, please run as root"[5;12H[34h[?25h[?25ll $UID "Does not have enough permission, please run as root"[5;13H[34h[?25h[?25le $UID "Does not have enough permission, please run as root"[5;14H[34h[?25h[?25ld $UID "Does not have enough permission, please run as root"[5;15H[34h[?25h[?25l[42;1H[K[42;1H:[34h[?25hw[?25l"install-and-configure-docker.sh" 72 lines, 898964 characters written[5;14H[34h[?25h[?25l[42;1H[K[42;1H:[34h[?25hsp[?25l[42;3H[K[42;3H[34h[?25h[?25l[42;2H[K[42;2H[34h[?25hsp[?25l[42;3H[K[42;3H[34h[?25h[?25l[42;2H[K[42;2H[34h[?25hsp func_collection.sh[?25l"func_collection.sh" [42;22H[K[42;22H23 lines, 898964 characters[1;1Hverify_docker_install() {
    echo -e "\nVerifing docker install"
    docker run --rm hello-world
    exit_status=$?
    docker rmi hello-world[5;27H[K[6;1H    if [ $exit_status -ne 0 ]; then
        echo -e "\nDocker is not installed properly, something went wrong"
        exit 1
    fi
}[11;1H[K[12;1Hrestart_docker() {[12;19H[K[13;16HRestarting docker"[13;34H[K[14;5H/etc/init.d/docker restart
}[15;5H[K[17;1H# If [ $1 -ne 0 ], print $2 and exit.[17;39H[K[18;1HExit_if_failed() {[18;19H[K[19;5Hif [ $1 -ne 0 ]; then
        echo -e "$2"[20;21H[K[21;1H[1m[7mfunc_collection.sh                                                                                                         [0m[22;1Hsource ./func_collection.sh[23;9H[K[24;1HExit_if_failed $UID "Does not have enough permission, please run as root"
#if [ $UID -ne 0 ]; then
#    echo "Does not have enough permission, please run as root"
#    exit 1[27;13H[K[28;1H#fi[28;5H[K[29;5H[K[30;1H# Install docker-ce using distro's software manager[30;52H[K[31;1Hif grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[35;5H[K[36;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[38;5H[K[39;1H    echo -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
[7minstall-and-configure-docker.sh                                                                                            [1;1H[34h[?25h[?25l[0m[42;1H[K[42;1H:[34h[?25hq[?25l[1;1H#!/usr/bin/env bash[1;20H[K[2;5H[K[3;1Hsource ./func_collection.sh[3;28H[K[4;5H[K[5;1HExit_if_failed $UID "Does not have enough permission, please run as root"
#if [ $UID -ne 0 ]; the[6;25H[K[7;1H#    echo "Does not have enough permission, please run as root"[7;64H[K[8;1H#    exit 1[8;12H[K[9;1H#fi[9;5H[K[10;1H[K[11;1H# Install docker-ce using distro's software manager
if grep -q -e "Debian" -e "debian" /etc/*-release; then[13;16HInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \[14;20H[K[15;1H    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common

    echo -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[19;5H[K[20;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"[21;108H[K[22;1H    if [ $? -eq 1 ]; then[22;26H[K[23;9Hecho "Failed to verify the fingerprint"
        exit 1[24;16H[K[25;1H    fi[25;7H[K[26;1H[K[27;1H    echo -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    if [ $? -ne 0 ]; then
        echo "Failed to add the docker debian source"
        exit 1[31;15H[K[32;5Hfi[32;7H[K[33;5H[K[34;5Hecho -e "\nInstalling docker-ce"[34;37H[K[35;5H(apt update && apt install docker-ce docker-ce-cli containerd.io) || \
    (echo "Failed to install docker-ce" && exit 1)[36;51H[K[37;5H[K[38;5Hecho -e "\nInstall completed"
else[39;5H[K[40;5Hecho "Distribution not supported"[40;38H[K[41;1H    exit 1[41;11H[K[5;14H[34h[?25h[6;14H[7;14H[8;11H
#f[?25l[42;1H[K[42;1H:[34h[?25hq[?25l[42;1H[K[42;1H[?1l>[34h[?25h[?1049l[01;32mpi@raspberrypi[00m:[01;34m~/docker_images $[00m ./install-and-configure-docker.sh 
Does not have enough permission, please run as root
[01;32mpi@raspberrypi[00m:[01;34m~/docker_images $[00m ./install-and-configure-docker.sh [1@vi [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
[?1049h[?1h=[1;42r[23m[24m[0m[H[J[?25l[42;1H"install-and-configure-docker.sh" 72 lines, 898964 characters[1;1H#!/usr/bin/env bash

source ./func_collection.sh

Exit_if_failed $UID "Does not have enough permission, please run as root"
#if [ $UID -ne 0 ]; then
#    echo "Does not have enough permission, please run as root"
#    exit 1
#fi

# Install docker-ce using distro's software manager
if grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[17;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[20;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    if [ $? -eq 1 ]; then[23;9Hecho "Failed to verify the fingerprint"[24;9Hexit 1
    fi[27;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    if [ $? -ne 0 ]; then[30;9Hecho "Failed to add the docker debian source"[31;9Hexit 1
    fi[34;5Hecho -e "\nInstalling docker-ce"
    (apt update && apt install docker-ce docker-ce-cli containerd.io) || \
    (echo "Failed to install docker-ce" && exit 1)[38;5Hecho -e "\nInstall completed"
else
    echo "Distribution not supported"
    exit 1[1;1H[34h[?25h










[?25l[42;1H[K[42;1H:[34h[?25hq[?25l[42;1H[K[42;1H[?1l>[34h[?25h[?1049l[01;32mpi@raspberrypi[00m:[01;34m~/docker_images $[00m sudo ./install-and-configure-docker.sh 

Install necessary softwares for adding docker-ce apt source with gpg key
[33m0% [Working][0m[33m0% [Connecting to raspbian.raspberrypi.org] [Waiting for headers][0m                                                                 Hit:1 http://archive.raspberrypi.org/debian buster InRelease
[33m                                                                 0% [Connecting to raspbian.raspberrypi.org][0m[33m                                           0% [Waiting for headers][0m                        Hit:2 http://raspbian.raspberrypi.org/raspbian buster InRelease
[33m                        0% [Working][0m^C
[01;32mpi@raspberrypi[00m:[01;34m~/docker_images $[00m sudo ./install-and-configure-docker.sh [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[4Pvi [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
[?1049h[?1h=[1;42r[23m[24m[0m[H[J[?25l[42;1H"install-and-configure-docker.sh" 72 lines, 898964 characters[1;1H#!/usr/bin/env bash

source ./func_collection.sh

Exit_if_failed $UID "Does not have enough permission, please run as root"
#if [ $UID -ne 0 ]; then
#    echo "Does not have enough permission, please run as root"
#    exit 1
#fi

# Install docker-ce using distro's software manager
if grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[17;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[20;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    if [ $? -eq 1 ]; then[23;9Hecho "Failed to verify the fingerprint"[24;9Hexit 1
    fi[27;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    if [ $? -ne 0 ]; then[30;9Hecho "Failed to add the docker debian source"[31;9Hexit 1
    fi[34;5Hecho -e "\nInstalling docker-ce"
    (apt update && apt install docker-ce docker-ce-cli containerd.io) || \
    (echo "Failed to install docker-ce" && exit 1)[38;5Hecho -e "\nInstall completed"
else
    echo "Distribution not supported"
    exit 1[1;1H[34h[?25h



















[?25l[22;41r[22;1H[L[1;42r[42;1H[K[22;1H[34h[?25h[?25lE[34h[?25h[?25l[34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25lE[34h[?25h[?25lx[34h[?25h[?25li[34h[?25h[?25lr[34h[?25h[?25l[34h[?25h[?25lt[34h[?25h[?25l[34m^N[34h[?25h[?25l[34h[?25h[?25l[0m_[34h[?25h[?25li[34h[?25h[?25lf[34h[?25h[?25l_[34h[?25h[?25lf[34h[?25h[?25la[34h[?25h[?25li[34h[?25h[?25ll[34h[?25h[?25le[34h[?25h[?25ld[34h[?25h[?25l [34h[?25h[?25l[[34h[?25h[?25l [34h[?25h[?25l#[34h[?25h[?25l[34h[?25h[?25l$[34h[?25h[?25l?[34h[?25h[?25l [34h[?25h[?25l-[34h[?25h[?25ln[34h[?25h[?25lq[34h[?25h[?25l[34h[?25h[?25le[34h[?25h[?25l [34h[?25h[?25l1[34h[?25h[?25l [34h[?25h[?25l][34h[?25h[?25l [34h[?25h[?25l"[34h[?25h[?25lF[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[22;33H[K[22;32H[34h[?25h[23;25H[24;19H[?25l[34h[?25h[?25l[7m"Failed to verify the fingerprint" 
        exit [34h[?25h[?25l[0mexit [34h[?25h[?25l[24;47H"[24;48H[K[25;1H        [24;47H[34h[?25h[?25l[24;14H"Failed to verify the fingerprint[24;14H[34h[?25h[23;14H[22;14H[23;8H[22;31H][?25l "Failed to verify the fingerprint"[34h[?25h[?25l[42;1H:[34h[?25hw[?25l"install-and-configure-docker.sh" 73 lines, 898964 characters written[22;66H[34h[?25h[23;25H[?25l[34h[?25h[?25l[7mi
[0m    [34h[?25h[?25l[7m 
[0m    [34h[?25h[?25l[7m 
[0m    [34h[?25h[?25l[23;5Hi
     
     [23;5H[34h[?25h[?25l#if [ $? -eq 1 ]; then    #[34h[?25h[?25l
    #    echo "Failed to verify the fingerprint"
    #    exit 1
    #fi[23;5H[34h[?25h[?25l[42;1H[K[42;1H:[34h[?25hw[?25l"install-and-configure-docker.sh" 73 lines, 898964 characters written[23;5H[34h[?25h[23m[24m[0m[H[J[?25l[1;1Hif grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[6;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[9;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    Exit_if_failed [ $? -ne 1 ] "Failed to verify the fingerprint"
    #if [ $? -eq 1 ]; then
    #    echo "Failed to verify the fingerprint"
    #    exit 1
    #fi[17;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    if [ $? -ne 0 ]; then[20;9Hecho "Failed to add the docker debian source"[12;5H[34h[?25h[23m[24m[0m[H[J[?25l[1;1H#!/usr/bin/env bash

source ./func_collection.sh

Exit_if_failed $UID "Does not have enough permission, please run as root"
#if [ $UID -ne 0 ]; then
#    echo "Does not have enough permission, please run as root"
#    exit 1
#fi

# Install docker-ce using distro's software manager
if grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[17;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[20;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    Exit_if_failed [ $? -ne 1 ] "Failed to verify the fingerprint"
    #if [ $? -eq 1 ]; then
    #    echo "Failed to verify the fingerprint"
    #    exit 1
    #fi[28;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    if [ $? -ne 0 ]; then[31;9Hecho "Failed to add the docker debian source"[32;9Hexit 1
    fi[35;5Hecho -e "\nInstalling docker-ce"
    (apt update && apt install docker-ce docker-ce-cli containerd.io) || \
    (echo "Failed to install docker-ce" && exit 1)[39;5Hecho -e "\nInstall completed"
else
    echo "Distribution not supported"[23;5H[34h[?25h[23m[24m[0m[H[J[?25l[1;1Hif grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[6;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[9;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    Exit_if_failed [ $? -ne 1 ] "Failed to verify the fingerprint"
    #if [ $? -eq 1 ]; then
    #    echo "Failed to verify the fingerprint"
    #    exit 1
    #fi[17;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    if [ $? -ne 0 ]; then[20;9Hecho "Failed to add the docker debian source"[12;5H[34h[?25h[23m[24m[0m[H[J[?25l[1;1H#!/usr/bin/env bash

source ./func_collection.sh

Exit_if_failed $UID "Does not have enough permission, please run as root"
#if [ $UID -ne 0 ]; then
#    echo "Does not have enough permission, please run as root"
#    exit 1
#fi

# Install docker-ce using distro's software manager
if grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[17;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[20;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    Exit_if_failed [ $? -ne 1 ] "Failed to verify the fingerprint"
    #if [ $? -eq 1 ]; then
    #    echo "Failed to verify the fingerprint"
    #    exit 1
    #fi[28;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    if [ $? -ne 0 ]; then[31;9Hecho "Failed to add the docker debian source"[32;9Hexit 1
    fi[35;5Hecho -e "\nInstalling docker-ce"
    (apt update && apt install docker-ce docker-ce-cli containerd.io) || \
    (echo "Failed to install docker-ce" && exit 1)[39;5Hecho -e "\nInstall completed"
else
    echo "Distribution not supported"[23;5H[34h[?25h[23m[24m[0m[H[J[?25l[1;1Hif grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[6;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[9;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    Exit_if_failed [ $? -ne 1 ] "Failed to verify the fingerprint"
    #if [ $? -eq 1 ]; then
    #    echo "Failed to verify the fingerprint"
    #    exit 1
    #fi[17;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    if [ $? -ne 0 ]; then[20;9Hecho "Failed to add the docker debian source"[12;5H[34h[?25h[23m[24m[0m[H[J[?25l[1;1H#!/usr/bin/env bash

source ./func_collection.sh

Exit_if_failed $UID "Does not have enough permission, please run as root"
#if [ $UID -ne 0 ]; then
#    echo "Does not have enough permission, please run as root"
#    exit 1
#fi

# Install docker-ce using distro's software manager
if grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[17;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[20;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    Exit_if_failed [ $? -ne 1 ] "Failed to verify the fingerprint"
    #if [ $? -eq 1 ]; then
    #    echo "Failed to verify the fingerprint"
    #    exit 1
    #fi[28;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    if [ $? -ne 0 ]; then[31;9Hecho "Failed to add the docker debian source"[32;9Hexit 1
    fi[35;5Hecho -e "\nInstalling docker-ce"
    (apt update && apt install docker-ce docker-ce-cli containerd.io) || \
    (echo "Failed to install docker-ce" && exit 1)[39;5Hecho -e "\nInstall completed"
else
    echo "Distribution not supported"[23;5H[34h[?25h
    
    
    

    
    
    
    
    
    

    
    
    [36;5H[35;5H[34;1H[33;5H[32;5H[31;5H[30;5H[29;5H[?25l[30;41r[30;1H[L[1;42r[30;1H[34h[?25h[?25lE[34h[?25h[?25lx[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l        [34h[?25h[?25l[34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25lE[34h[?25h[?25lx[34h[?25h[?25li[34h[?25h[?25lt[34h[?25h[?25l_[34h[?25h[?25li[34h[?25h[?25lf[34h[?25h[?25l_[34h[?25h[?25lf[34h[?25h[?25la[34h[?25h[?25li[34h[?25h[?25ll[34h[?25h[?25le[34h[?25h[?25ld[34h[?25h[?25l [34h[?25h[?25l[[34h[?25h[?25l [34h[?25h[?25l$[34h[?25h[?25l?[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l$[34h[?25h[?25l?[34h[?25h[?25l [34h[?25h[?25l[30;23H[K[30;22H[34h[?25h[?25l[30;41r[30;1H[L[1;42r[30;1HC[34h[?25h[?25l[30;41r[41;1H
[1;42r[41;1Helse[30;5H[34h[?25h
    
    
    [32;5H    echo [?25l[34h[?25h[?25l[7m"Failed to add the docker debian source" 
        exit [34h[?25h[?25l[0mexit [34h[?25h[?25l[32;53H"[32;54H[K[33;1H        [32;53H[34h[?25h[?25l[32;14H"Failed to add the docker debian source[32;14H[34h[?25h[31;14H[30;14H[9C[?25l "Failed to add the docker debian source"[34h[?25h[31;25H     [?25l[34h[?25h[?25l[7mi
[0m    [34h[?25h[?25l[7m 
[0m    [34h[?25h[?25l[7m 
[0m    [34h[?25h[?25l[31;5Hi
     
     [31;5H[34h[?25h[?25l#if [ $? -ne 0 ]; then    #[34h[?25h[?25l
    #    echo "Failed to add the docker debian source"
    #    exit 1
    #fi[31;5H[34h[?25h[?25l[42;1H:[34h[?25hw[?25l"install-and-configure-docker.sh" 74 lines, 898964 characters written[31;5H[34h[?25h
    
    
    

    
    
    

    
els[?25l[1;41r[41;1H
[1;42r[41;5Hecho "Distribution not supported"[42;1H[K[41;5H[34h[?25h[?25l[1;41r[41;1H
[1;42r[41;5Hexit 1    [34h[?25h[?25l[1;41r[41;1H
[1;42r[41;1Hfi[34h[?25h[?25l[1;41r[41;1H
[1;42r[41;1H[34h[?25h[?25l[1;41r[41;1H
[1;42r[41;1Hverify_docker_installveri[34h[?25h[?25l[1;41r[41;1H
[1;42r[41;1H[34h[?25h[?25l[1;41r[41;1H
[1;42r[41;1Hecho -e "\nStart to configure docker\nEnable usernamespace first"echo[34h[?25h[?25l[1;41r[41;1H
[1;42r[41;1Hsysctl >/dev/null 2>&1sysc[34h[?25h[?25l[1;41r[41;1H
[1;42r[41;1Hif [ $? -eq 127 ]; thenif [[34h[?25h[40;5H[39;5H[38;1H[37;5H[36;1H[35;2H[34;5H[33;5H[32;4H[31;5H[30;1H[29;5H[28;5H[?25lapt update && apt install docker-ce docker-ce-cli containerd.io) || \[28;74H[K[28;5H[34h[?25h
    [28;73H[?25l[34h[?25h[?25l[7m) [34h[?25h[?25l|[34h[?25h[?25l|[34h[?25h[?25l [34h[?25h[?25l[0m[28;68H[K[28;67H[34h[?25h[?25l[29;41r[29;1H[L[1;42r[29;1H[34h[?25h[?25li[34h[?25h[?25lf[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25lE[34h[?25h[?25lx[34h[?25h[?25li[34h[?25h[?25lt[34h[?25h[?25l_[34h[?25h[?25li[34h[?25h[?25lf[34h[?25h[?25l_[34h[?25h[?25lf[34h[?25h[?25la[34h[?25h[?25li[34h[?25h[?25ll[34h[?25h[?25le[34h[?25h[?25ld[34h[?25h[?25l [34h[?25h[?25l$[34h[?25h[?25l?[34h[?25h[?25l [34h[?25h[30;22H[8Cdocker-ce[?25l[34h[?25h[?25l[7me"[34h[?25h[?25lc[34h[?25h[?25locker-[30;30H[34h[?25h[?25l[30;23Hnstall d[30;22H[34h[?25h[?25lo i[34h[?25h[?25lailed t[30;12H[34h[?25h[?25lF[34h[?25h[?25l[0m"failed to install docker-ce"[30;11H[34h[?25h"[?25lailed to install docker-ce" && exit 1)[30;50H[K[30;12H[34h[?25h[?25lFailed to install docker-ce" && exit 1)[30;13H[34h[?25h [?25l[34h[?25h[?25l[7m"[34h[?25h[?25lFailed [34h[?25h[?25lto [34h[?25h[?25linstall [34h[?25h[?25ldocker[34h[?25h[?25l-[34h[?25h[?25lc[34h[?25h[?25le[34h[?25h[?25l[0m[30;11H"Failed to install docker-ce[30;11H[34h[?25h[29;11H[9C
    [29;20H$?[?25l "Failed to install docker-ce"[34h[?25h[?25l[42;1H:[34h[?25hw[?25l"install-and-configure-docker.sh" 75 lines, 898964 characters written[29;51H[34h[?25h[30;50H[?25l[30;41r[41;1H
[1;42r[41;1Hif [ $? -eq 127 ]; then[42;1H[K[30;1H[34h[?25h[?25l[42;1H:[34h[?25hw[?25l"install-and-configure-docker.sh" 74 lines, 898964 characters written[30;1H[34h[?25h


[32;1H[31;1H[30;1H[29;1H[28;1H



[31;1H[30;1H[29;1H[28;1H




[32;1H[31;1H



[34;1H[33;1H[32;1H[31;1H[30;1H[29;1H





[34;1H[33;1H[32;1H[31;1H









[?25l[1;41r[41;1H
[1;42r[41;5Hecho -e "\nCommand 'sysctl' not found and thus cannot enable user namespace"[42;1H[K[41;1H[34h[?25h[?25l[1;41r[41;1H
[1;42r[41;5Hexit 1[34h[?25h[?25l[1;41r[41;1H
[1;42r[41;1Hfi[34h[?25h[?25l
:[34h[?25hq[?25l[42;1H[K[42;1H[?1l>[34h[?25h[?1049l[01;32mpi@raspberrypi[00m:[01;34m~/docker_images $[00m sud[K[K[Ksudo ./install-and-configure-docker.sh 

Install necessary softwares for adding docker-ce apt source with gpg key
[33m0% [Working][0m[33m0% [Waiting for headers] [Waiting for headers][0m                                              Hit:1 http://raspbian.raspberrypi.org/raspbian buster InRelease
[33m                                              0% [Waiting for headers][0m                        Hit:2 http://archive.raspberrypi.org/debian buster InRelease
[33m                        0% [Working][0m[33m0% [Working][0m[33m20% [Working][0m             Reading package lists... 0%Reading package lists... 0%Reading package lists... 0%Reading package lists... 26%Reading package lists... 54%Reading package lists... 83%Reading package lists... 97%Reading package lists... 97%Reading package lists... 97%Reading package lists... 97%Reading package lists... 98%Reading package lists... 98%Reading package lists... 98%Reading package lists... 98%Reading package lists... 99%Reading package lists... 99%Reading package lists... Done
Building dependency tree... 0%Building dependency tree... 0%Building dependency tree... 0%Building dependency tree... 50%Building dependency tree... 50%Building dependency tree       
Reading state information... 0%Reading state information... 0%Reading state information... Done
All packages are up to date.
Reading package lists... 0%Reading package lists... 100%Reading package lists... Done
Building dependency tree... 0%Building dependency tree... 0%Building dependency tree... 50%Building dependency tree... 50%Building dependency tree       
Reading state information... 0%Reading state information... 0%Reading state information... Done
apt-transport-https is already the newest version (1.8.2).
ca-certificates is already the newest version (20190110).
curl is already the newest version (7.64.0-4).
gnupg2 is already the newest version (2.2.12-1+rpi1).
software-properties-common is already the newest version (0.96.20.2-2).
0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.

Installing fingerprint for docker-ce source
OK

Verifing fingerprint of the key
./func_collection.sh: line 19: [: [: integer expression expected

Adding docker-ce apt source
Traceback (most recent call last):
  File "/usr/bin/add-apt-repository", line 95, in <module>
    sp = SoftwareProperties(options=options)
  File "/usr/lib/python3/dist-packages/softwareproperties/SoftwareProperties.py", line 109, in __init__
    self.reload_sourceslist()
  File "/usr/lib/python3/dist-packages/softwareproperties/SoftwareProperties.py", line 599, in reload_sourceslist
    self.distro.get_sources(self.sourceslist)    
  File "/usr/lib/python3/dist-packages/aptsources/distro.py", line 93, in get_sources
    (self.id, self.codename))
aptsources.distro.NoDistroTemplateException: Error: could not find a distribution template for Raspbian/buster
Failed to add the docker debian source
[01;32mpi@raspberrypi[00m:[01;34m~/docker_images $[00m vi install-and-configure-docker.sh 
[?1049h[?1h=[1;42r[23m[24m[0m[H[J[?25l[42;1H"install-and-configure-docker.sh" 74 lines, 898964 characters[1;1H#!/usr/bin/env bash

source ./func_collection.sh

Exit_if_failed $UID "Does not have enough permission, please run as root"
#if [ $UID -ne 0 ]; then
#    echo "Does not have enough permission, please run as root"
#    exit 1
#fi

# Install docker-ce using distro's software manager
if grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[17;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[20;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    Exit_if_failed [ $? -ne 1 ] "Failed to verify the fingerprint"
    #if [ $? -eq 1 ]; then
    #    echo "Failed to verify the fingerprint"
    #    exit 1
    #fi[28;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    Exit_if_failed $? "Failed to add the docker debian source"
    #if [ $? -ne 0 ]; then
    #    echo "Failed to add the docker debian source"
    #    exit 1
    #fi[36;5Hecho -e "\nInstalling docker-ce"
    apt update && apt install docker-ce docker-ce-cli containerd.io
    Exit_if_failed $? "Failed to install docker-ce"[40;5Hecho -e "\nInstall completed"
else[1;1H[34h[?25h








[?25l[1;41r[1;1H[20M[1;42r[22;5Hecho "Distribution not supported"
    exit 1
fi

verify_docker_install

echo -e "\nStart to configure docker\nEnable usernamespace first"
sysctl >/dev/null 2>&1
if [ $? -eq 127 ]; then
    echo -e "\nCommand 'sysctl' not found and thus cannot enable user namespace"
    exit 1
fi
sysctl -w kernel.unprivileged_userns_clone=1

echo -e "\nEnabling user remap feature in docker using user namespace"
echo -e '{\n    "userns-remap": "default"\n}'>/etc/docker/daemon.json

restart_docker

echo -e "Verifing the user remap feature"[42;1H[K[10;5H[34h[?25h
    
    
    
    

    
    
    

    
els
    
    
f

veri

echo
sysc[?25l[30;41r[30;1H[L[1;42r[30;1H[34h[?25h[?25lE[34h[?25h[?25lx[34h[?25h[?25li[34h[?25h[?25lt[34h[?25h[?25l_[34h[?25h[?25li[34h[?25h[?25lf[34h[?25h[?25l_[34h[?25h[?25lf[34h[?25h[?25la[34h[?25h[?25li[34h[?25h[?25ll[34h[?25h[?25le[34h[?25h[?25ld[34h[?25h[?25l [34h[?25h[?25l[[34h[?25h[?25l [34h[?25h[?25l$[34h[?25h[?25l?[34h[?25h[?25l [34h[?25h[?25l-[34h[?25h[?25le[34h[?25h[?25lq[34h[?25h[?25l [34h[?25h[?25l1[34h[?25h[?25l2[34h[?25h[?25l7[34h[?25h[?25l [34h[?25h[?25l][34h[?25h[?25l [34h[?25h[31;23H[32;30H[32;15H[?25l[34h[?25h[?25l[7m"\[34h[?25h[?25lnCommand [34h[?25h[?25l'[34h[?25h[?25lsysctl[34h[?25h[?25l' [34h[?25h[?25lnot [34h[?25h[?25lfound [34h[?25h[?25land [34h[?25h[?25lthus [34h[?25h[?25lcannot [34h[?25h[?25lenable [34h[?25h[?25luser [34h[?25h[?25lnamespace[34h[?25h[?25l[0m[32;13H"\nCommand 'sysctl' not found and thus cannot enable user namespace[32;13H[34h[?25h[31;13H[30;13H[18C[?25l "\nCommand 'sysctl' not found and thus cannot enable user namespace"[34h[?25h[?25l[42;1H:[34h[?25hw[?25l"install-and-configure-docker.sh" 75 lines, 898964 characters written[30;98H[34h[?25h[31;23H[?25l[34h[?25h[?25l[7mi
[34h[?25h[?25l 
[34h[?25h[?25l 
[34h[?25h[?25l[0m[31;1Hi
 
 [31;1H[34h[?25h[?25l#if [ $? -eq 127 ]; then#[34h[?25h[?25l
#    echo -e "\nCommand 'sysctl' not found and thus cannot enable user namespace"
#    exit 1
#fi[31;1H[34h[?25h[?25l[42;1H[K[42;1H:[34h[?25hw[?25l"install-and-configure-docker.sh" 75 lines, 898964 characters written[31;1H[34h[?25h[30;1H[29;1H
[?25l[31;41r[31;1H[L[1;42r[42;1H[K[31;1H[34h[?25h[?25l[42;1H:[34h[?25hw[?25l"install-and-configure-docker.sh" 76 lines, 898964 characters written[31;1H[34h[?25h



[?25l[36;41r[36;1H[L[1;42r[42;1H[K[36;1H[34h[?25h[?25l[42;1H:[34h[?25hw[?25l"install-and-configure-docker.sh" 77 lines, 898964 characters written[36;1H[34h[?25h




[?25l[1;41r[41;1H
[1;42r[41;1Hrestart_docker[42;1H[K[41;1H[34h[?25h[?25l[1;41r[41;1H
[1;42r[41;1H[34h[?25h[?25l[1;41r[41;1H
[1;42r[41;1Hecho -e "Verifing the user remap feature"[34h[?25h[?25l[1;41r[41;1H
[1;42r[41;1Hid dockremap[34h[?25h[?25l[1;41r[41;1H
[1;42r[41;1Hif [ $? -ne 0 ]; then[34h[?25h[?25l[1;41r[41;1H
[1;42r[41;5Hecho -e "\nDockerd failed to create dockremap user"[34h[?25h[?25l[1;41r[41;1H
[1;42r[41;5Hexit 1[34h[?25h[?25l[1;41r[41;1H
[1;42r[41;1Hfi[34h[?25h[?25l[1;41r[41;1H
[1;42r[41;1H[34h[?25h[?25l[1;41r[41;1H
[1;42r[41;1Hgrep dockremap /etc/subuid && grep dockremap /etc/subgid[34h[?25h[40;1H[39;1H[38;1H[37;1H[36;1H[35;1H[34;1H[33;1H[32;1H[31;1H[30;1H[29;1H[28;1H[27;1H[26;1H[25;1H[24;1H[23;1H[22;1H[21;1H[20;1H







[27;1H[26;1H[25;1H[24;1H[23;1H[22;1H[21;1H[20;1H[19;1H[18;1H[17;1H[16;1H








[24;1H[23;1H[22;1H[21;1H[20;1H[19;1H[18;1H[17;1H[16;1H[15;1H[14;1H[13;1H









[?25l[42;1H:[34h[?25h [23;1H


[25;1H[24;1H[23;1H[22;1H[21;1H

# [22;3H[21;1H[20;3H[13C[ $? -[?25lq 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[20;98H[K[20;22H[34h[?25h[?25l 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[20;97H[K[20;22H[34h[?25h[?25l- 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[20;23H[34h[?25h[?25l[34h[?25h[?25ln[34h[?25h[?25le 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[20;24H[34h[?25h[?25l[42;1H:[34h[?25hw[?25l"install-and-configure-docker.sh" 77 lines, 898964 characters written[20;23H[34h[?25h[19;22H[?25l[20;41r[20;1H[L[1;42r[42;1H[K[20;1H[34h[?25h[?25le[34h[?25h[?25lx[34h[?25h[?25li[34h[?25h[?25lt[34h[?25h[?25l_[34h[?25h[?25ls[34h[?25h[?25lt[34h[?25h[?25la[34h[?25h[?25lt[34h[?25h[?25lu[34h[?25h[?25ls[34h[?25h[?25l=[34h[?25h[?25l?[34h[?25h[?25l$[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l$[34h[?25h[?25l?[34h[?25h[?25l[34h[?25h[21;14Hd [ $[?25l -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[21;98H[K[21;19H[34h[?25h[?25le -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[21;20H[34h[?25h[?25lx -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[21;21H[34h[?25h[?25l- -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[21;22H[34h[?25h[?25l[34h[?25h[?25li[34h[?25h[?25lt -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[21;23H[34h[?25h[?25l_ -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[21;24H[34h[?25h[?25ls -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[21;25H[34h[?25h[?25lt -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[21;26H[34h[?25h[?25la -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[21;27H[34h[?25h[?25lt -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[21;28H[34h[?25h[?25lu -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[21;29H[34h[?25h[?25ls -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[21;30H[34h[?25h[?25l[42;1H:[34h[?25hw[?25l"install-and-configure-docker.sh" 78 lines, 898964 characters written[21;29H[34h[?25h[27C[?25l[22;41r[22;1H[L[1;42r[22;1HExit_if_failed [ $exit_status -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[42;1H[K[22;1H[34h[?25h[15C[ $[12C-ne 127 [?25l[34h[?25h[?25l[7m27 ][34h[?25h[?25le 1[34h[?25h[?25ln[34h[?25h[?25l[0m "\nCommand 'sysctl' not found and thus cannot enable user namespace"[22;100H[K[22;31H[34h[?25h[?25l"\nCommand 'sysctl' not found and thus cannot enable user namespace"[22;99H[K[22;31H[34h[?25h[22;19H[?25l[34h[?25h[?25l[7m [34h[?25h[?25l[0m$exit_status "\nCommand 'sysctl' not found and thus cannot enable user namespace"[22;97H[K[22;16H[34h[?25h$[12C"\[9Cnd 'sysctl' [?25l[22;41r[41;1H
[1;42r[22;1H[34h[?25h[?25l[42;1H:[34h[?25hw[?25l"install-and-configure-docker.sh" 78 lines, 898964 characters written[22;1H[34h[?25h


[24;1H[23;1H[22;1H[21;1H[20;1H[19;1H
[?25l[20;41r[41;1H
[1;42r[41;1Hgrep dockremap /etc/subuid && grep dockremap /etc/subgid[42;1H[K[20;1H[34h[?25h[?25l[20;41r[20;1H[L[1;42r[20;1H[34h[?25h[?25l【[34h[?25h[?25l[34h[?25h[?25l[20;1H[K[20;1H[34h[?25h
[15C[ $[?25l[34h[?25h[?25l[7mexit_status [34h[?25h[?25l[0m [34h[?25h[?25ls[34h[?25h[?25l[21;19H -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[21;99H[K[21;19H[34h[?25h[?25l? -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[21;20H[34h[?25h[?25l[42;1H:[34h[?25hw[?25l"install-and-configure-docker.sh" 78 lines, 898964 characters written[21;19H[34h[?25h
[23;19H[24;19H[25;11H
#f
[28;19H
[30;19H[31;19H
[33;14H
[35;19H[36;12H[?25l[37;41r[37;1H[L[1;42r[42;1H[K[37;1H[34h[?25h[?25lE[34h[?25h[?25lx[34h[?25h[?25li[34h[?25h[?25lt[34h[?25h[?25l_[34h[?25h[?25li[34h[?25h[?25lf[34h[?25h[?25l_[34h[?25h[?25lf[34h[?25h[?25li[34h[?25h[?25ll[34h[?25h[?25le[34h[?25h[?25ld[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25la[34h[?25h[?25li[34h[?25h[?25ll[34h[?25h[?25le[34h[?25h[?25ld[34h[?25h[?25l [34h[?25h[?25l$[34h[?25h[?25l?[34h[?25h[?25l [34h[?25h[38;18H[39;18H[?25l[34h[?25h[?25l[7m"\[34h[?25h[?25lnDockerd [34h[?25h[?25lfailed [34h[?25h[?25lto [34h[?25h[?25lcreate [34h[?25h[?25ldockremap [34h[?25h[?25lu[34h[?25h[?25ls[34h[?25h[?25le[34h[?25h[?25lr[34h[?25h[?25l[0m[39;13H"\nDockerd failed to create dockremap user[39;13H[34h[?25h[38;13H[37;13Hed $?[?25l "\nDockerd failed to create dockremap user"[34h[?25h[?25l[42;1H:[34h[?25hw[?25l"install-and-configure-docker.sh" 79 lines, 898964 characters written[37;61H[34h[?25h[38;21H[37;61H[?25l[38;41r[38;1H[L[1;42r[42;1H[K[38;1H[34h[?25h[?25l{[34h[?25h[?25l[34h[?25h[?25l[38;1H[K[38;1H[34h[?25h
[?25l[34h[?25h[?25l[7mi
[34h[?25h[?25l 
[34h[?25h[?25l[1;41r[0m[41;1H
[1;42r[40;1H[7m [0m
fi[34h[?25h[?25l[1;41r[41;1H
[1;42r[40;1H[7mf
[34h[?25h[?25l[0m[40;1Hf[34h[?25h[?25l[37;1Hi
 
 [37;1H[34h[?25h[?25l#if [ $? -ne 0 ]; then#[34h[?25h[?25l
#    echo -e "\nDockerd failed to create dockremap user"
#    exit 1
#fi[37;1H[34h[?25h[?25l[42;1H:[34h[?25hw[?25l"install-and-configure-docker.sh" 80 lines, 898964 characters written[37;1H[34h[?25h



[?25l[1;41r[41;1H
[1;42r[41;1Hgrep dockremap /etc/subuid && grep dockremap /etc/subgid[42;1H[K[41;1H[34h[?25h[?25l[1;41r[41;1H
[1;42r[41;1Hif [ $? -ne 0 ]; then[34h[?25h[?25l[1;41r[41;1H
[1;42r[41;5Hecho -e "\nDockerd failed to setup user remap feature properly"[34h[?25h[?25l[1;41r[41;1H
[1;42r[41;5Hexit 1[34h[?25h[?25l[1;41r[41;1H
[1;42r[41;1Hfi[34h[?25h[?25l[1;41r[41;1H
[1;42r[41;1H[34h[?25h[?25l[1;41r[41;1H
[1;42r[41;1Hverify_docker_install[34h[?25h[40;1H[39;1H[38;1H[37;1H[36;1H[35;1H[34;1H[33;1H

[?25l[36;41r[36;1H[L[1;42r[36;1H[34h[?25h[?25lE[34h[?25h[?25lx[34h[?25h[?25li[34h[?25h[?25lt[34h[?25h[?25l_[34h[?25h[?25li[34h[?25h[?25lf[34h[?25h[?25l_[34h[?25h[?25lf[34h[?25h[?25la[34h[?25h[?25li[34h[?25h[?25ll[34h[?25h[?25le[34h[?25h[?25ld[34h[?25h[?25l [34h[?25h[?25l$[34h[?25h[?25l?[34h[?25h[?25l [34h[?25h[37;18H[38;18H[?25l[34h[?25h[?25l[7m"\[34h[?25h[?25lnDockerd [34h[?25h[?25lfailed [34h[?25h[?25lto [34h[?25h[?25lsetup [34h[?25h[?25luser [34h[?25h[?25lremap [34h[?25h[?25lfeature [34h[?25h[?25lproperly[34h[?25h[?25l[0m[38;13H"\nDockerd failed to setup user remap feature properly[38;13H[34h[?25h[37;13H[36;13Hed $?[?25l "\nDockerd failed to setup user remap feature properly"[34h[?25h[?25l[42;1H:[34h[?25hw[?25l"install-and-configure-docker.sh" 81 lines, 898964 characters written[36;73H[34h[?25h[37;21H[?25l[37;41r[37;1H[L[1;42r[42;1H[K[37;1H[34h[?25h
[?25l[34h[?25h[?25l[7mi
[34h[?25h[?25l 
[34h[?25h[?25l 
[34h[?25h[?25l[1;41r[0m[41;1H
[1;42r[40;1H[7mf
[34h[?25h[?25l[0m[40;1Hf[34h[?25h[?25l[37;1Hi
 
 [37;1H[34h[?25h[?25l#if [ $? -ne 0 ]; then#[34h[?25h[?25l
#    echo -e "\nDockerd failed to setup user remap feature properly"
#    exit 1
#fi[37;1H[34h[?25h[?25l[42;1H:[34h[?25hw[?25l"install-and-configure-docker.sh" 82 lines, 898964 characters written[37;1H[34h[?25h[?25l[37;41r[41;1H
[1;42r[41;1Hverify_docker_install[42;1H[K[37;1H[34h[?25h[?25l[41;1H[34h[?25h[?25l
1 more line; before #29  2 seconds ago[37;41r[37;1H[L[1;42r[37;1H#if [ $? -ne 0 ]; then[42;1H[K[42;1H1 more line; before #29  2 seconds ago[37;1H[34h[?25h[?25l[42;1H[K[42;1H:[34h[?25hw[?25l"install-and-configure-docker.sh" 82 lines, 898964 characters written[37;1H[34h[?25h[?25l[1;41r[41;1H
[1;42r[41;1Hverify_docker_install[42;1H[K[41;1H[34h[?25h[?25l[1;41r[1;1H[20L[1;42r[1;5HExit_if_failed [ $? -ne 1 ] "Failed to verify the fingerprint"
    #if [ $? -eq 1 ]; then
    #    echo "Failed to verify the fingerprint"
    #    exit 1
    #fi[7;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    Exit_if_failed $? "Failed to add the docker debian source"
    #if [ $? -ne 0 ]; then
    #    echo "Failed to add the docker debian source"
    #    exit 1
    #fi[15;5Hecho -e "\nInstalling docker-ce"
    apt update && apt install docker-ce docker-ce-cli containerd.io
    Exit_if_failed $? "Failed to install docker-ce"[19;5Hecho -e "\nInstall completed"
else[41;1H[34h[?25h[?25l[1;41r[1;1H[20L[1;42r[2;1Hsource ./func_collection.sh

Exit_if_failed $UID "Does not have enough permission, please run as root"
#if [ $UID -ne 0 ]; then
#    echo "Does not have enough permission, please run as root"
#    exit 1
#fi

# Install docker-ce using distro's software manager
if grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[16;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[19;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"[41;5H[34h[?25h[?25l[1;41r[1;1H[L[1;42r[1;1H#!/usr/bin/env bash[22;5H[34h[?25h[?25l[2;1H[34h[?25h[?25l[1;1H[34h[?25h[?25l[42;1H:[34h[?25ho func_col[?25l[42;11H[K[42;11H[34h[?25h[?25l[42;10H[K[42;10H[34h[?25h[?25l[42;9H[K[42;9H[34h[?25h[?25l[42;8H[K[42;8H[34h[?25h[?25l[42;7H[K[42;7H[34h[?25h[?25l[42;6H[K[42;6H[34h[?25h[?25l[42;5H[K[42;5H[34h[?25h[?25l[42;4H[K[42;4H[34h[?25h[?25l[34h[?25h[?25l[42;2H[K[42;2H[34h[?25hq[?25l[42;1H[K[42;1H[?1l>[34h[?25h[?1049l[01;32mpi@raspberrypi[00m:[01;34m~/docker_images $[00m sudo ./instq
sudo: ./instq: command not found
[01;32mpi@raspberrypi[00m:[01;34m~/docker_images $[00m sudo ./instq[Kall-and-configure-docker.sh 

Install necessary softwares for adding docker-ce apt source with gpg key
[33m0% [Working][0m[33m0% [Connecting to raspbian.raspberrypi.org (2a00:1098:0:80:1000:75:0:3)] [Waiting for headers][0m                                                                                              Hit:1 http://archive.raspberrypi.org/debian buster InRelease
[33m                                                                                              0% [Waiting for headers][0m                        Hit:2 http://raspbian.raspberrypi.org/raspbian buster InRelease
[33m                        0% [Working][0m[33m0% [Working][0m[33m20% [Working][0m             Reading package lists... 0%Reading package lists... 0%Reading package lists... 0%Reading package lists... 40%Reading package lists... 68%Reading package lists... 97%Reading package lists... 97%Reading package lists... 97%Reading package lists... 97%Reading package lists... 97%Reading package lists... 98%Reading package lists... 98%Reading package lists... 98%Reading package lists... 98%Reading package lists... 99%Reading package lists... 99%Reading package lists... Done
Building dependency tree... 0%Building dependency tree... 0%Building dependency tree... 0%Building dependency tree... 50%Building dependency tree... 50%Building dependency tree       
Reading state information... 0%Reading state information... 0%Reading state information... Done
All packages are up to date.
Reading package lists... 0%Reading package lists... 100%Reading package lists... Done
Building dependency tree... 0%Building dependency tree... 0%Building dependency tree... 50%Building dependency tree... 50%Building dependency tree       
Reading state information... 0%Reading state information... 0%Reading state information... Done
apt-transport-https is already the newest version (1.8.2).
ca-certificates is already the newest version (20190110).
curl is already the newest version (7.64.0-4).
gnupg2 is already the newest version (2.2.12-1+rpi1).
software-properties-common is already the newest version (0.96.20.2-2).
0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.

Installing fingerprint for docker-ce source
OK

Verifing fingerprint of the key
./func_collection.sh: line 19: [: [: integer expression expected

Adding docker-ce apt source
Traceback (most recent call last):
  File "/usr/bin/add-apt-repository", line 95, in <module>
    sp = SoftwareProperties(options=options)
  File "/usr/lib/python3/dist-packages/softwareproperties/SoftwareProperties.py", line 109, in __init__
    self.reload_sourceslist()
  File "/usr/lib/python3/dist-packages/softwareproperties/SoftwareProperties.py", line 599, in reload_sourceslist
    self.distro.get_sources(self.sourceslist)    
  File "/usr/lib/python3/dist-packages/aptsources/distro.py", line 93, in get_sources
    (self.id, self.codename))
aptsources.distro.NoDistroTemplateException: Error: could not find a distribution template for Raspbian/buster
Failed to add the docker debian source
[01;32mpi@raspberrypi[00m:[01;34m~/docker_images $[00m vi install-and-configure-docker.sh 
[?1049h[?1h=[1;42r[23m[24m[0m[H[J[?25l[42;1H"install-and-configure-docker.sh" 82 lines, 898964 characters[1;1H#!/usr/bin/env bash

source ./func_collection.sh

Exit_if_failed $UID "Does not have enough permission, please run as root"
#if [ $UID -ne 0 ]; then
#    echo "Does not have enough permission, please run as root"
#    exit 1
#fi

# Install docker-ce using distro's software manager
if grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[17;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[20;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    Exit_if_failed [ $? -ne 1 ] "Failed to verify the fingerprint"
    #if [ $? -eq 1 ]; then
    #    echo "Failed to verify the fingerprint"
    #    exit 1
    #fi[28;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    Exit_if_failed $? "Failed to add the docker debian source"
    #if [ $? -ne 0 ]; then
    #    echo "Failed to add the docker debian source"
    #    exit 1
    #fi[36;5Hecho -e "\nInstalling docker-ce"
    apt update && apt install docker-ce docker-ce-cli containerd.io
    Exit_if_failed $? "Failed to install docker-ce"[40;5Hecho -e "\nInstall completed"
else[1;1H[34h[?25h[?25l[42;1H[K[42;1H:[34h[?25h19[?25l[19;1H[34h[?25h[?25l[42;1H[K[42;1H:[34h[?25hq[?25l[42;1H[K[42;1H[?1l>[34h[?25h[?1049l[01;32mpi@raspberrypi[00m:[01;34m~/docker_images $[00m vi install-and-configure-docker.sh 
[?1049h[?1h=[1;42r[23m[24m[0m[H[J[?25l[42;1H"install-and-configure-docker.sh" 82 lines, 898964 characters[1;1H#!/usr/bin/env bash

source ./func_collection.sh

Exit_if_failed $UID "Does not have enough permission, please run as root"
#if [ $UID -ne 0 ]; then
#    echo "Does not have enough permission, please run as root"
#    exit 1
#fi

# Install docker-ce using distro's software manager
if grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[17;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[20;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    Exit_if_failed [ $? -ne 1 ] "Failed to verify the fingerprint"
    #if [ $? -eq 1 ]; then
    #    echo "Failed to verify the fingerprint"
    #    exit 1
    #fi[28;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    Exit_if_failed $? "Failed to add the docker debian source"
    #if [ $? -ne 0 ]; then
    #    echo "Failed to add the docker debian source"
    #    exit 1
    #fi[36;5Hecho -e "\nInstalling docker-ce"
    apt update && apt install docker-ce docker-ce-cli containerd.io
    Exit_if_failed $? "Failed to install docker-ce"[40;5Hecho -e "\nInstall completed"
else[1;1H[34h[?25h




















[23m[24m[0m[H[J[?25l[1;1Hif grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[6;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[9;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    Exit_if_failed [ $? -ne 1 ] "Failed to verify the fingerprint"
    #if [ $? -eq 1 ]; then
    #    echo "Failed to verify the fingerprint"
    #    exit 1
    #fi[17;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    Exit_if_failed $? "Failed to add the docker debian source"
    #if [ $? -ne 0 ]; then[11;1H[34h[?25h[23m[24m[0m[H[J[?25l[1;5Hecho -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[5;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[8;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    Exit_if_failed [ $? -ne 1 ] "Failed to verify the fingerprint"
    #if [ $? -eq 1 ]; then
    #    echo "Failed to verify the fingerprint"
    #    exit 1
    #fi[16;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    Exit_if_failed $? "Failed to add the docker debian source"[10;1H[34h[?25h[23m[24m[0m[H[J[?25l[1;1Hif grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[6;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[9;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    Exit_if_failed [ $? -ne 1 ] "Failed to verify the fingerprint"
    #if [ $? -eq 1 ]; then
    #    echo "Failed to verify the fingerprint"
    #    exit 1
    #fi[17;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    Exit_if_failed $? "Failed to add the docker debian source"[11;1H[34h[?25h[23m[24m[0m[H[J[?25l[1;1Hsource ./func_collection.sh

Exit_if_failed $UID "Does not have enough permission, please run as root"
#if [ $UID -ne 0 ]; then
#    echo "Does not have enough permission, please run as root"
#    exit 1
#fi

# Install docker-ce using distro's software manager
if grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[15;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[18;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    Exit_if_failed [ $? -ne 1 ] "Failed to verify the fingerprint"
    #if [ $? -eq 1 ]; then
    #    echo "Failed to verify the fingerprint"
    #    exit 1
    #fi[26;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    Exit_if_failed $? "Failed to add the docker debian source"
    #if [ $? -ne 0 ]; then
    #    echo "Failed to add the docker debian source"
    #    exit 1
    #fi[34;5Hecho -e "\nInstalling docker-ce"
    apt update && apt install docker-ce docker-ce-cli containerd.io
    Exit_if_failed $? "Failed to install docker-ce"[38;5Hecho -e "\nInstall completed"[20;1H[34h[?25h[19;1H[18;1H[17;1H[16;1H



[19;1H[18;1H[17;1H


[19;1H[18;1H

[23m[24m[0m[H[J[?25l[2;1Hsource ./func_collection.sh

Exit_if_failed $UID "Does not have enough permission, please run as root"
#if [ $UID -ne 0 ]; then
#    echo "Does not have enough permission, please run as root"
#    exit 1
#fi

# Install docker-ce using distro's software manager
if grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[16;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[19;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    Exit_if_failed [ $? -ne 1 ] "Failed to verify the fingerprint"
    #if [ $? -eq 1 ]; then
    #    echo "Failed to verify the fingerprint"
    #    exit 1
    #fi[27;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    Exit_if_failed $? "Failed to add the docker debian source"
    #if [ $? -ne 0 ]; then
    #    echo "Failed to add the docker debian source"
    #    exit 1
    #fi[35;5Hecho -e "\nInstalling docker-ce"
    apt update && apt install docker-ce docker-ce-cli containerd.io
    Exit_if_failed $? "Failed to install docker-ce"[39;5Hecho -e "\nInstall completed"[21;1H[34h[?25h[23m[24m[0m[H[J[?25l[1;1Hsource ./func_collection.sh

Exit_if_failed $UID "Does not have enough permission, please run as root"
#if [ $UID -ne 0 ]; then
#    echo "Does not have enough permission, please run as root"
#    exit 1
#fi

# Install docker-ce using distro's software manager
if grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[15;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[18;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    Exit_if_failed [ $? -ne 1 ] "Failed to verify the fingerprint"
    #if [ $? -eq 1 ]; then
    #    echo "Failed to verify the fingerprint"
    #    exit 1
    #fi[26;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    Exit_if_failed $? "Failed to add the docker debian source"
    #if [ $? -ne 0 ]; then
    #    echo "Failed to add the docker debian source"
    #    exit 1
    #fi[34;5Hecho -e "\nInstalling docker-ce"
    apt update && apt install docker-ce docker-ce-cli containerd.io
    Exit_if_failed $? "Failed to install docker-ce"[38;5Hecho -e "\nInstall completed"[20;1H[34h[?25h[23m[24m[0m[H[J[?25l[1;5Hecho -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[5;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[8;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    Exit_if_failed [ $? -ne 1 ] "Failed to verify the fingerprint"
    #if [ $? -eq 1 ]; then
    #    echo "Failed to verify the fingerprint"
    #    exit 1
    #fi[16;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    Exit_if_failed $? "Failed to add the docker debian source"[10;1H[34h[?25h[23m[24m[0m[H[J[?25l[1;1Hsource ./func_collection.sh

Exit_if_failed $UID "Does not have enough permission, please run as root"
#if [ $UID -ne 0 ]; then
#    echo "Does not have enough permission, please run as root"
#    exit 1
#fi

# Install docker-ce using distro's software manager
if grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[15;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[18;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    Exit_if_failed [ $? -ne 1 ] "Failed to verify the fingerprint"
    #if [ $? -eq 1 ]; then
    #    echo "Failed to verify the fingerprint"
    #    exit 1
    #fi[26;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    Exit_if_failed $? "Failed to add the docker debian source"
    #if [ $? -ne 0 ]; then
    #    echo "Failed to add the docker debian source"
    #    exit 1
    #fi[34;5Hecho -e "\nInstalling docker-ce"
    apt update && apt install docker-ce docker-ce-cli containerd.io
    Exit_if_failed $? "Failed to install docker-ce"[38;5Hecho -e "\nInstall completed"[20;1H[34h[?25h[19;1H[18;1H[17;1H


    [15C[ [?25l $? -ne 1 ] "Failed to verify the fingerprint"[20;66H[K[20;20H[34h[?25h[?25lt $? -ne 1 ] "Failed to verify the fingerprint"[20;21H[34h[?25h[?25l[34h[?25h[?25l$[34h[?25h[?25l( $? -ne 1 ] "Failed to verify the fingerprint"[20;22H[34h[?25h[?25lT $? -ne 1 ] "Failed to verify the fingerprint"[20;23H[34h[?25h[?25l[34h[?25h[?25lt[34h[?25h[?25le $? -ne 1 ] "Failed to verify the fingerprint"[20;24H[34h[?25h[?25ls $? -ne 1 ] "Failed to verify the fingerprint"[20;25H[34h[?25h[?25lt $? -ne 1 ] "Failed to verify the fingerprint"[20;26H[34h[?25h[?25l[20;38r[20;1H[L[1;39r[20;1HC[34h[?25h[?25l[20;38r[20;1H[L[1;39r[20;1HC[34h[?25h[?25l[20;38r[20;1H[L[1;39r[20;1HC[34h[?25h[?25l[20;38r[38;1H
[1;39r[38;5HExit_if_failed $? "Failed to install docker-ce"[20;1H[34h[?25h[?25l[20;38r[38;1H
[1;39r[20;1H[34h[?25h[?25l[20;38r[38;1H
[1;39r[38;5Hecho -e "\nInstall completed"[20;5H[34h[?25h[15C$(test $? -ne 1 [?25l "Failed to verify the fingerprint"[20;71H[K[20;36H[34h[?25h[25;1H[24;1H[23;1H[22;1H[21;1H[20;1H    [15C$(test $? -ne 1[?25l "Failed to verify the fingerprint"[20;70H[K[20;35H[34h[?25h[?25l) "Failed to verify the fingerprint"[20;36H[34h[?25h[?25l[39;1H:[34h[?25hwq[?25l"install-and-configure-docker.sh" 82 lines, 898964 characters written
[?1l>[34h[?25h[?1049l[01;32mpi@raspberrypi[00m:[01;34m~/docker_images $[00m sudo ./install-and-configure-docker.sh 

Install necessary softwares for adding docker-ce apt source with gpg key
[33m0% [Working][0m[33m0% [Connecting to raspbian.raspberrypi.org] [Waiting for headers][0m                                                                 Hit:1 http://archive.raspberrypi.org/debian buster InRelease
[33m                                                                 0% [Connecting to raspbian.raspberrypi.org][0m[33m0% [Connecting to raspbian.raspberrypi.org][0m[33m                                           0% [Waiting for headers][0m                        Hit:2 http://raspbian.raspberrypi.org/raspbian buster InRelease
[33m                        0% [Working][0m[33m0% [Working][0m[33m20% [Working][0m             Reading package lists... 0%Reading package lists... 0%Reading package lists... 0%Reading package lists... 24%Reading package lists... 53%Reading package lists... 81%Reading package lists... 97%Reading package lists... 97%Reading package lists... 97%Reading package lists... 97%Reading package lists... 98%Reading package lists... 98%Reading package lists... 98%Reading package lists... 98%Reading package lists... 99%Reading package lists... 99%Reading package lists... Done
Building dependency tree... 0%Building dependency tree... 0%Building dependency tree... 0%Building dependency tree... 50%Building dependency tree... 50%Building dependency tree       
Reading state information... 0%Reading state information... 0%Reading state information... Done
All packages are up to date.
Reading package lists... 0%Reading package lists... 100%Reading package lists... Done
Building dependency tree... 0%Building dependency tree... 0%Building dependency tree... 50%Building dependency tree... 50%Building dependency tree       
Reading state information... 0%Reading state information... 0%Reading state information... Done
apt-transport-https is already the newest version (1.8.2).
ca-certificates is already the newest version (20190110).
curl is already the newest version (7.64.0-4).
gnupg2 is already the newest version (2.2.12-1+rpi1).
software-properties-common is already the newest version (0.96.20.2-2).
0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.

Installing fingerprint for docker-ce source
OK

Verifing fingerprint of the key
./func_collection.sh: line 19: [: too many arguments

Adding docker-ce apt source
Traceback (most recent call last):
  File "/usr/bin/add-apt-repository", line 95, in <module>
    sp = SoftwareProperties(options=options)
  File "/usr/lib/python3/dist-packages/softwareproperties/SoftwareProperties.py", line 109, in __init__
    self.reload_sourceslist()
  File "/usr/lib/python3/dist-packages/softwareproperties/SoftwareProperties.py", line 599, in reload_sourceslist
    self.distro.get_sources(self.sourceslist)    
  File "/usr/lib/python3/dist-packages/aptsources/distro.py", line 93, in get_sources
    (self.id, self.codename))
aptsources.distro.NoDistroTemplateException: Error: could not find a distribution template for Raspbian/buster
Failed to add the docker debian source
[01;32mpi@raspberrypi[00m:[01;34m~/docker_images $[00m vi in[K[Kinstall-and-configure-docker.sh 
[?1049h[?1h=[1;39r[23m[24m[0m[H[J[?25l[39;1H"install-and-configure-docker.sh" 82 lines, 898964 characters[1;1H#!/usr/bin/env bash

source ./func_collection.sh

Exit_if_failed $UID "Does not have enough permission, please run as root"
#if [ $UID -ne 0 ]; then
#    echo "Does not have enough permission, please run as root"
#    exit 1
#fi

# Install docker-ce using distro's software manager
if grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[17;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[20;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    Exit_if_failed $(test $? -ne 1) "Failed to verify the fingerprint"
    #if [ $? -eq 1 ]; then
    #    echo "Failed to verify the fingerprint"
    #    exit 1
    #fi[28;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    Exit_if_failed $? "Failed to add the docker debian source"
    #if [ $? -ne 0 ]; then
    #    echo "Failed to add the docker debian source"
    #    exit 1
    #fi[36;5Hecho -e "\nInstalling docker-ce"
    apt update && apt install docker-ce docker-ce-cli containerd.io
    Exit_if_failed $? "Failed to install docker-ce"[1;1H[34h[?25h























[24;1H[23;1H[22;1H[21;1H[20;1H[19;1H









[28;1H[27;1H[26;1H[25;1H[?25l[39;1H[K[39;1H:[34h[?25hsp func_collection.sh[?25l"func_collection.sh" [39;22H[K[39;22H23 lines, 898964 characters[1;1Hverify_docker_install() {
    echo -e "\nVerifing docker install"
    docker run --rm hello-world
    exit_status=$?
    docker rmi hello-world[5;27H[K[6;1H    if [ $exit_status -ne 0 ]; then
        echo -e "\nDocker is not installed properly, something went wrong"
        exit 1
    fi
}[11;1H[K[12;1Hrestart_docker() {[12;19H[K[13;16HRestarting docker"[13;34H[K[14;5H/etc/init.d/docker restart
}[15;5H[K[17;1H# If [ $1 -ne 0 ], print $2 and exit.[17;39H[K[18;1HExit_if_failed() {[18;19H[K[19;1H[1m[7mfunc_collection.sh                                                                                                         [0m[20;5Hapt update && \[20;20H[K[21;8H install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[21;94H[K[22;5H[K[23;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[25;5H[K[26;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    Exit_if_failed $(test $? -ne 1) "Failed to verify the fingerprint"
    #if [ $? -eq 1 ]; then[29;27H[K[30;5H#    echo "Failed to verify the fingerprint"[30;49H[K[31;6H    exit 1[31;16H[K[32;6Hfi[32;10H[K[33;5H[K[34;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    Exit_if_failed $? "Failed to add the docker debian source"
    #if [ $? -ne 0 ]; then[37;27H[K[38;1H[7minstall-and-configure-docker.sh                                                                                            [1;1H[34h[?25h














[15;1H[14;1H[13;1H[12;1H[11;1H[10;1H[9;1H[8;1H[7;1H[6;1H[?25l[1;18r[0m[1;1H[5M[1;39r[14;5Hif [ $1 -ne 0 ]; then[15;9Hecho -e "$2"[16;9Hexit 1
    fi
}[39;1H[K[10;1H[34h[?25h







[17;1H[16;1H[15;1H[14;1H[13;1H[12;1H[11;1H[10;1H







[17;1H[16;1H[15;1H[?25l[39;1H:[34h[?25hq[?25l[1;1H#!/usr/bin/env bash[1;20H[K[2;9H[K[3;1Hsource ./func_collection.sh[4;5H[K[5;1HExit_if_failed $UID "Does not have enough permission, please run as root"
#if [ $UID -ne 0 ]; then
#    echo "Does not have enough permission, please run as root"
#    exit 1[8;13H[K[9;1H#fi[9;5H[K[10;1H[K[11;1H# Install docker-ce using distro's software manager
if grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \[14;20H[K[15;5Hapt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[16;9H[K[17;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[19;1H[K[20;5Hecho -e "\nVerifing fingerprint of the key"[21;8H-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    Exit_if_failed $(test $? -ne 1) "Failed to verify the fingerprint"
    #if [ $? -eq 1 ]; then[23;27H[K[24;5H#    echo "Failed to verify the fingerprint"[24;49H[K[25;5H#    exit 1
    #fi[26;8H[K[27;5H[K[28;5Hecho -e "\nAdding docker-ce apt source"[28;45H[K[29;5Hadd-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    Exit_if_failed $? "Failed to add the docker debian source"[31;6Hif [ $? -ne 0 ]; then[32;6H    echo "Failed to add the docker debian source"
    #    exit 1
    #fi[34;8H[K[35;5H[K[36;5Hecho -e "\nInstalling docker-ce"[36;38H[K[37;5Hapt update && apt install docker-ce docker-ce-cli containerd.io
    Exit_if_failed $? "Failed to install docker-ce"[38;52H[K[25;1H[34h[?25h[23m[24m[0m[H[J[?25l[1;5Hapt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[4;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[7;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    Exit_if_failed $(test $? -ne 1) "Failed to verify the fingerprint"
    #if [ $? -eq 1 ]; then
    #    echo "Failed to verify the fingerprint"
    #    exit 1
    #fi[15;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    Exit_if_failed $? "Failed to add the docker debian source"
    #if [ $? -ne 0 ]; then[12;1H[34h[?25h[23m[24m[0m[H[J[?25l[1;1H#!/usr/bin/env bash

source ./func_collection.sh

Exit_if_failed $UID "Does not have enough permission, please run as root"
#if [ $UID -ne 0 ]; then
#    echo "Does not have enough permission, please run as root"
#    exit 1
#fi

# Install docker-ce using distro's software manager
if grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[17;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[20;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    Exit_if_failed $(test $? -ne 1) "Failed to verify the fingerprint"
    #if [ $? -eq 1 ]; then
    #    echo "Failed to verify the fingerprint"
    #    exit 1
    #fi[28;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    Exit_if_failed $? "Failed to add the docker debian source"
    #if [ $? -ne 0 ]; then
    #    echo "Failed to add the docker debian source"
    #    exit 1
    #fi[36;5Hecho -e "\nInstalling docker-ce"
    apt update && apt install docker-ce docker-ce-cli containerd.io
    Exit_if_failed $? "Failed to install docker-ce"[25;1H[34h[?25h[?25l[39;1H:[34h[?25hsp func_e[?25l[39;10H[K[39;10H[34h[?25hcollection.sh[?25l"func_collection.sh" [39;22H[K[39;22H23 lines, 898964 characters[1;1Hverify_docker_install() {
    echo -e "\nVerifing docker install"
    docker run --rm hello-world
    exit_status=$?
    docker rmi hello-world[5;27H[K[6;1H    if [ $exit_status -ne 0 ]; then
        echo -e "\nDocker is not installed properly, something went wrong"
        exit 1
    fi
}[11;1H[K[12;1Hrestart_docker() {[12;19H[K[13;16HRestarting docker"[13;34H[K[14;5H/etc/init.d/docker restart
}[15;5H[K[17;1H# If [ $1 -ne 0 ], print $2 and exit.[17;39H[K[18;1HExit_if_failed() {[18;19H[K[19;1H[1m[7mfunc_collection.sh                                                                                                         [0m[20;5Hapt update && \[20;20H[K[21;8H install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[21;94H[K[22;5H[K[23;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[25;5H[K[26;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    Exit_if_failed $(test $? -ne 1) "Failed to verify the fingerprint"
    #if [ $? -eq 1 ]; then[29;27H[K[30;5H#    echo "Failed to verify the fingerprint"[30;49H[K[31;6H    exit 1[31;16H[K[32;6Hfi[32;10H[K[33;5H[K[34;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    Exit_if_failed $? "Failed to add the docker debian source"
    #if [ $? -ne 0 ]; then[37;27H[K[38;1H[7minstall-and-configure-docker.sh                                                                                            [1;1H[34h[?25h










[11;1H[10;1H[9;1H[8;1H[7;1H[6;1H[5;1H[4;1H[3;1H[2;1H[1;1H[?25l[1;18r[0m[1;1H[5M[1;39r[14;5Hif [ $1 -ne 0 ]; then[15;9Hecho -e "$2"[16;9Hexit 1
    fi
}[39;1H[K[5;1H[34h[?25h[?25l[14;5H[34h[?25h[?25l[18;1H[34h[?25h[17;1H[16;1H[15;1H[14;1H    if [13;8H[12;8H$[?25l -ne 0 ], print $2 and exit.[12;37H[K[19;20H[1m[7m[+][12;9H[34h[?25h[?25l[0m? -ne 0 ], print $2 and exit.[12;10H[34h[?25h[?25l[39;1H:[34h[?25hw[?25l"func_collection.sh" 23 lines, 898964 characters written[19;20H[1m[7m   [12;9H[34h[?25h[13;9H[14;9H[0m $[?25l -ne 0 ]; then[14;25H[K[19;20H[1m[7m[+][14;11H[34h[?25h[?25l[0m0 -ne 0 ]; then[14;12H[34h[?25h[?25l[39;1H[K[39;1H:[34h[?25hx[?25l[39;2H[K[39;2H[34h[?25h [14;11H[?25l -ne 0 ]; then[14;25H[K[14;11H[34h[?25h[?25l? -ne 0 ]; then[14;12H[34h[?25h[?25l[39;1H:[34h[?25hwq[?25l"func_collection.sh" 23 lines, 898964 characters written[1;1H#!/usr/bin/env bash[1;20H[K[2;9H[K[3;1Hsource ./func_collection.sh[4;5H[K[5;1HExit_if_failed $UID "Does not have enough permission, please run as root"
#if [ $UID -ne 0 ]; then
#    echo "Does not have enough permission, please run as root"
#    exit 1[8;13H[K[9;1H#fi[9;5H[K[10;1H[K[11;1H# Install docker-ce using distro's software manager
if grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \[14;20H[K[15;5Hapt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[16;9H[K[17;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[19;1H[K[20;5Hecho -e "\nVerifing fingerprint of the key"[21;8H-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    Exit_if_failed $(test $? -ne 1) "Failed to verify the fingerprint"
    #if [ $? -eq 1 ]; then[23;27H[K[24;5H#    echo "Failed to verify the fingerprint"[24;49H[K[25;5H#    exit 1
    #fi[26;8H[K[27;5H[K[28;5Hecho -e "\nAdding docker-ce apt source"[28;45H[K[29;5Hadd-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    Exit_if_failed $? "Failed to add the docker debian source"[31;6Hif [ $? -ne 0 ]; then[32;6H    echo "Failed to add the docker debian source"
    #    exit 1
    #fi[34;8H[K[35;5H[K[36;5Hecho -e "\nInstalling docker-ce"[36;38H[K[37;5Hapt update && apt install docker-ce docker-ce-cli containerd.io
    Exit_if_failed $? "Failed to install docker-ce"[38;52H[K[25;1H[34h[?25h[?25l[39;1H[K[39;1H:[34h[?25hq[?25l[39;1H[K[39;1H[?1l>[34h[?25h[?1049l[01;32mpi@raspberrypi[00m:[01;34m~/docker_images $[00m vi install-and-configure-docker.sh [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[4@sudo ./[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C

Install necessary softwares for adding docker-ce apt source with gpg key
[33m0% [Working][0m[33m0% [Waiting for headers] [Waiting for headers][0m                                              Hit:1 http://raspbian.raspberrypi.org/raspbian buster InRelease
[33m                                              0% [Waiting for headers][0m                        Hit:2 http://archive.raspberrypi.org/debian buster InRelease
[33m                        0% [Working][0m[33m0% [Working][0m[33m20% [Working][0m             Reading package lists... 0%Reading package lists... 0%Reading package lists... 0%Reading package lists... 32%Reading package lists... 60%Reading package lists... 89%Reading package lists... 97%Reading package lists... 97%Reading package lists... 97%Reading package lists... 97%Reading package lists... 98%Reading package lists... 98%Reading package lists... 98%Reading package lists... 98%Reading package lists... 99%Reading package lists... 99%Reading package lists... Done
Building dependency tree... 0%Building dependency tree... 0%Building dependency tree... 0%Building dependency tree... 50%Building dependency tree... 50%Building dependency tree       
Reading state information... 0%Reading state information... 0%Reading state information... Done
All packages are up to date.
Reading package lists... 0%Reading package lists... 100%Reading package lists... Done
Building dependency tree... 0%Building dependency tree... 0%Building dependency tree... 50%Building dependency tree... 50%Building dependency tree       
Reading state information... 0%Reading state information... 0%Reading state information... Done
apt-transport-https is already the newest version (1.8.2).
ca-certificates is already the newest version (20190110).
curl is already the newest version (7.64.0-4).
gnupg2 is already the newest version (2.2.12-1+rpi1).
software-properties-common is already the newest version (0.96.20.2-2).
0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.

Installing fingerprint for docker-ce source
OK

Verifing fingerprint of the key

Adding docker-ce apt source
Traceback (most recent call last):
  File "/usr/bin/add-apt-repository", line 95, in <module>
    sp = SoftwareProperties(options=options)
  File "/usr/lib/python3/dist-packages/softwareproperties/SoftwareProperties.py", line 109, in __init__
    self.reload_sourceslist()
  File "/usr/lib/python3/dist-packages/softwareproperties/SoftwareProperties.py", line 599, in reload_sourceslist
    self.distro.get_sources(self.sourceslist)    
  File "/usr/lib/python3/dist-packages/aptsources/distro.py", line 93, in get_sources
    (self.id, self.codename))
aptsources.distro.NoDistroTemplateException: Error: could not find a distribution template for Raspbian/buster
Failed to add the docker debian source
[01;32mpi@raspberrypi[00m:[01;34m~/docker_images $[00m vi install-and-configure-docker.sh 
[?1049h[?1h=[1;39r[23m[24m[0m[H[J[?25l[39;1H"install-and-configure-docker.sh" 82 lines, 898964 characters[1;1H#!/usr/bin/env bash

source ./func_collection.sh

Exit_if_failed $UID "Does not have enough permission, please run as root"
#if [ $UID -ne 0 ]; then
#    echo "Does not have enough permission, please run as root"
#    exit 1
#fi

# Install docker-ce using distro's software manager
if grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[17;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[20;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    Exit_if_failed $(test $? -ne 1) "Failed to verify the fingerprint"
    #if [ $? -eq 1 ]; then
    #    echo "Failed to verify the fingerprint"
    #    exit 1
    #fi[28;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    Exit_if_failed $? "Failed to add the docker debian source"
    #if [ $? -ne 0 ]; then
    #    echo "Failed to add the docker debian source"
    #    exit 1
    #fi[36;5Hecho -e "\nInstalling docker-ce"
    apt update && apt install docker-ce docker-ce-cli containerd.io
    Exit_if_failed $? "Failed to install docker-ce"[1;1H[34h[?25h




















[21;1H[20;1H[19;1H[18;1H[17;1H[16;1H[15;1H[14;1H[13;1H[12;1H[11;1H[10;1H[9;1H[8;1H[7;1H[6;1H[5;1H[4;1H[3;1H[2;1H[1;1H




[?25l[39;1H[K[39;1H:[34h[?25hq[?25l[39;1H[K[39;1H[?1l>[34h[?25h[?1049l[01;32mpi@raspberrypi[00m:[01;34m~/docker_images $[00m ./install-and-configure-docker.sh 

Install necessary softwares for adding docker-ce apt source with gpg key
Reading package lists... 0%Reading package lists... 100%Reading package lists... Done
E: Could not open lock file /var/lib/apt/lists/lock - open (13: Permission denied)
E: Unable to lock directory /var/lib/apt/lists/
W: Problem unlinking the file /var/cache/apt/pkgcache.bin - RemoveCaches (13: Permission denied)
W: Problem unlinking the file /var/cache/apt/srcpkgcache.bin - RemoveCaches (13: Permission denied)

Installing fingerprint for docker-ce source
E: This command can only be used by root.

Verifing fingerprint of the key

Adding docker-ce apt source
^CTraceback (most recent call last):
  File "/usr/bin/add-apt-repository", line 8, in <module>
    import gettext
  File "/usr/lib/python3.7/gettext.py", line 49, in <module>
    import locale
  File "/usr/lib/python3.7/locale.py", line 16, in <module>
    import re
  File "/usr/lib/python3.7/re.py", line 125, in <module>
    import functools
  File "/usr/lib/python3.7/functools.py", line 21, in <module>
    from collections import namedtuple
  File "/usr/lib/python3.7/collections/__init__.py", line 21, in <module>
    from operator import itemgetter as _itemgetter, eq as _eq
  File "<frozen importlib._bootstrap>", line 983, in _find_and_load
  File "<frozen importlib._bootstrap>", line 963, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 906, in _find_spec
  File "<frozen importlib._bootstrap_external>", line 1280, in find_spec
  File "<frozen importlib._bootstrap_external>", line 1252, in _get_spec
  File "<frozen importlib._bootstrap_external>", line 1391, in find_spec
  File "<frozen importlib._bootstrap_external>", line 59, in _path_join
KeyboardInterrupt
Failed to add the docker debian source
[01;32mpi@raspberrypi[00m:[01;34m~/docker_images $[00m vi install-and-configure-docker.sh 
[?1049h[?1h=[1;39r[23m[24m[0m[H[J[?25l[39;1H"install-and-configure-docker.sh" 82 lines, 898964 characters[1;1H#!/usr/bin/env bash

source ./func_collection.sh

Exit_if_failed $UID "Does not have enough permission, please run as root"
#if [ $UID -ne 0 ]; then
#    echo "Does not have enough permission, please run as root"
#    exit 1
#fi

# Install docker-ce using distro's software manager
if grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[17;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[20;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    Exit_if_failed $(test $? -ne 1) "Failed to verify the fingerprint"
    #if [ $? -eq 1 ]; then
    #    echo "Failed to verify the fingerprint"
    #    exit 1
    #fi[28;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    Exit_if_failed $? "Failed to add the docker debian source"
    #if [ $? -ne 0 ]; then
    #    echo "Failed to add the docker debian source"
    #    exit 1
    #fi[36;5Hecho -e "\nInstalling docker-ce"
    apt update && apt install docker-ce docker-ce-cli containerd.io
    Exit_if_failed $? "Failed to install docker-ce"[1;1H[34h[?25h[?25l[39;1H[K[39;1H:[34h[?25hsp u[?25l[39;5H[K[39;5H[34h[?25hfunc_collection.sh[?25l"func_collection.sh" [39;22H[K[39;22H23 lines, 898964 characters[1;1Hverify_docker_install() {
    echo -e "\nVerifing docker install"
    docker run --rm hello-world
    exit_status=$?
    docker rmi hello-world[5;27H[K[6;1H    if [ $exit_status -ne 0 ]; then
        echo -e "\nDocker is not installed properly, something went wrong"
        exit 1
    fi
}[11;1H[K[12;1Hrestart_docker() {[12;19H[K[13;16HRestarting docker"[13;34H[K[14;5H/etc/init.d/docker restart
}[15;5H[K[17;1H# If [ $? -ne 0 ], print $2 and exit.[17;39H[K[18;1HExit_if_failed() {[18;19H[K[19;1H[1m[7mfunc_collection.sh                                                                                                         [0m[20;1H#!/usr/bin/env bash[20;20H[K[21;5H[K[22;1Hsource ./func_collection.sh[22;28H[K[23;5H[K[24;1HExit_if_failed $UID "Does not have enough permission, please run as root"
#if [ $UID -ne 0 ]; then
#    echo "Does not have enough permission, please run as root"
#    exit 1
#fi[28;5H[K[29;5H[K[30;1H# Install docker-ce using distro's software manager[30;52H[K[31;1Hif grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[36;27Hfingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -
[7minstall-and-configure-docker.sh                                                                                            [1;1H[34h[?25h







[?25l[1;18r[0m[1;1H[5M[1;39r[14;5Hif [ $? -ne 0 ]; then[15;9Hecho -e "$2"[16;9Hexit 1
    fi
}[39;1H[K[13;1H[34h[?25h[?25l[18;1H[34h[?25h[17;1H[16;1H[15;1H[14;1H[13;1H[12;1H# If [ $? -ne 0 ], print $[?25l and exit.[12;37H[K[19;20H[1m[7m[+][12;27H[34h[?25h[?25l[0m1 and exit.[12;28H[34h[?25h[?25l[39;1H:[34h[?25hw[?25l"func_collection.sh" 23 lines, 898964 characters written[19;20H[1m[7m   [12;27H[34h[?25h[0m[19;1H[7mfunc_collection.sh                                                                                                         [0m[38;1H[1m[7minstall-and-configure-docker.sh                                                                                            [20;1H







[27;1H[26;1H[25;1H[24;1H












[?25l[20;37r[0m[37;1H
[1;39r[39;1H[K[37;1H[34h[?25h[?25l[20;37r[37;1H
[1;39r[37;5Hecho -e "\nVerifing fingerprint of the key"[34h[?25h[?25l[20;37r[37;1H
[1;39r[37;5Hapt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"[34h[?25h[?25l[20;37r[37;1H
[1;39r[37;5HExit_if_failed $(test $? -ne 1) "Failed to verify the fingerprint"[34h[?25h[?25l[20;37r[37;1H
[1;39r[37;5H#if [ $? -eq 1 ]; then[34h[?25h[?25l[20;37r[37;1H
[1;39r[37;5H#    echo "Failed to verify the fingerprint"[34h[?25h[36;1H[35;1H[34;1H[33;1H[32;1H[31;1H[30;1H[29;1H[28;1H[27;1H[26;1H[25;1H[24;1H



[27;1H[26;1H[25;1H[24;1H[23;1H[19;1H[1m[7mfunc_collection.sh                                                                                                         [0m[38;1H[7minstall-and-configure-docker.sh                                                                                            [12;27H[13;18H[14;25H[13;18H[12;27H[?25l[0m[39;1H1 change; before #2  14 seconds ago[12;27H and exit.[12;37H[K[19;20H[1m[7m[+][12;27H[34h[?25h[?25l[0m[39;11Hafter #2  15 seconds ago[39;35H[K[12;27H1 and exit.[19;20H[1m[7m   [12;27H[34h[?25h[?25l[0m and exit.[12;37H[K[19;20H[1m[7m[+][12;27H[34h[?25h[?25l[0m2 and exit.[12;28H[34h[?25h[13;18H[14;25H[?25l -ne 0 ]; then[14;25H[K[14;11H[34h[?25h[?25l2 -ne 0 ]; then[14;12H[34h[?25h[?25l[14;18r[14;1H[L[1;39r[14;1HA[39;1H[K[14;2H[34h[?25h[?25l[14;18r[14;1H[L[1;39r[14;1HA[34h[?25h[?25l[[34h[?25h[?25l[34h[?25h[?25l[14;2H[K[14;1H[34h[?25h[?25l[14;18r[18;1H
[1;39r[18;5Hfi[14;1H[34h[?25h[?25l[14;18r[18;1H
[1;39r[18;1H}[14;5H[34h[?25h[13;5H[12;5H [ $[?25l -ne 0 ], print $2 and exit.[12;37H[K[12;9H[34h[?25h[?25l2 -ne 0 ], print $2 and exit.[12;10H[34h[?25h[?25l[39;1H:[34h[?25hwq=[?25l[39;4H[K[39;4H[34h[?25h[?25l"func_collection.sh" 23 lines, 898964 characters written[1;5H[K[2;1HExit_if_failed $UID "Does not have enough permission, please run as root"[2;74H[K[3;1H#if [ $UID -ne 0 ]; then
#    echo "Does not have enough permission, please run as root"
#    exit 1
#fi[7;1H[K[8;1H# Install docker-ce using distro's software manager
if grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[13;1H[K[14;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[16;9H[K[17;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    Exit_if_failed $(test $? -ne 1) "Failed to verify the fingerprint"[19;71H[K[20;1H    #if [ $? -eq 1 ]; then[20;27H[K[21;1H    #    echo "Failed to verify the fingerprint"
    #    exit 1
    #fi[24;1H[K[25;1H    echo -e "\nAdding docker-ce apt source"[25;44H[K[26;5Hadd-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    Exit_if_failed $? "Failed to add the docker debian source"
    #if [ $? -ne 0 ]; then[28;27H[K[29;5H#    echo "Failed to add the docker debian source"
    #    exit 1[30;16H[K[31;5H#fi[31;8H[K[33;16HInstalling docker-ce"[33;37H[K[34;8H update && apt install docker-ce docker-ce-cli containerd.io[34;68H[K[35;21H? "Failed to install docker-ce"[35;52H[K[36;5H[K[37;5Hecho -e "\nInstall completed"[37;34H[K[38;1Helse[38;5H[K[7;1H[34h[?25h[?25l[39;1H[K[39;1H:[34h[?25hjjjj[?25l[39;5H[K[39;5H[34h[?25h[?25l[39;4H[K[39;4H[34h[?25h[?25l[39;3H[K[39;3H[34h[?25h[?25l[39;2H[K[39;2H[34h[?25h [7;1H[?25l[39;1H:[34h[?25hsp func_collection.sh[?25l"func_collection.sh" [39;22H[K[39;22H23 lines, 898964 characters[1;1Hverify_docker_install() {
    echo -e "\nVerifing docker install"[2;40H[K[3;1H    docker run --rm hello-world
    exit_status=$?[4;19H[K[5;1H    docker rmi hello-world
    if [ $exit_status -ne 0 ]; then[7;9Hecho -e "\nDocker is not installed properly, something went wrong"
        exit 1[8;15H[K[9;1H    fi[9;7H[K[10;1H}[10;5H[K[11;5H[K[12;1Hrestart_docker() {[12;20H[K[13;5Hecho -e "\nRestarting docker"
    /etc/init.d/docker restart[14;31H[K[15;1H}[15;5H[K[17;1H# If [ $2 -ne 0 ], print $2 and exit.[17;38H[K[18;1HExit_if_failed() {[18;19H[K[19;1H[1m[7mfunc_collection.sh                                                                                                         [0m[20;1H#    echo "Does not have enough permission, please run as root"
#    exit 1[21;12H[K[22;1H#fi[22;5H[K[23;5H[K[24;1H# Install docker-ce using distro's software manager
if grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"[26;89H[K[27;5Hapt update && \[27;20H[K[28;5Hapt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[29;5H[K[30;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[33;16HVerifing fingerprint of the key"[34;8H-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"[35;21H(test $? -ne 1) "Failed to verify the fingerprint"
    #if [ $? -eq 1 ]; then
    #    echo "Failed to verify the fingerprint"
[7minstall-and-configure-docker.sh                                                                                            [1;1H[34h[?25h



[?25l[1;18r[0m[1;1H[5M[1;39r[14;5Hif [ $2 -ne 0 ]; then[15;9Hecho -e "$2"[16;9Hexit 1
    fi
}[39;1H[K[18;1H[34h[?25h[?25l[1;18r[18;1H
[1;39r[19;20H[1m[7m[+][18;1H[34h[?25h[?25l[1;18r[0m[18;1H
[1;39r[18;1H[34h[?25h[?25lE[34h[?25h[?25lv[34h[?25h[?25la[34h[?25h[?25ll[34h[?25h[?25l_[34h[?25h[?25la[34h[?25h[?25ln[34h[?25h[?25ld[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25la[34h[?25h[?25ln[34h[?25h[?25ld[34h[?25h[?25l_[34h[?25h[?25lE[34h[?25h[?25lx[34h[?25h[?25li[34h[?25h[?25lt[34h[?25h[?25l_[34h[?25h[?25li[34h[?25h[?25lf[34h[?25h[?25l_[34h[?25h[?25lf[34h[?25h[?25la[34h[?25h[?25li[34h[?25h[?25ll[34h[?25h[?25le[34h[?25h[?25ld[34h[?25h[?25l([34h[?25h[?25l)[34h[?25h[?25l [34h[?25h[?25l{[34h[?25h[?25l[1;18r[18;1H
[1;39r[18;1H[34h[?25h[?25l}[34h[?25h[?25lA[34h[?25h[?25lA[34h[?25h[?25l[1;18r[18;1H
[1;39r[18;1HA[34h[?25h[?25l[1;18r[18;1H
[1;39r[18;1H}[34h[?25h[17;1H[16;1H[15;1H[?25l[15;18r[18;1H
[1;39r[18;1H[1m[34m~                                                                                                                          [15;1H[34h[?25h[?25l[0m[39;1H1 more line; before #16  1 second ago[15;18r[15;1H[L[1;39r[15;1HEval_and_Exit_if_failed() {[39;1H[K[39;1H1 more line; before #16  1 second ago[15;1H[34h[?25h
[?25l
}
[1m[34m~                                                                                                                          [16;1H[34h[?25h[?25l[0m}
[1m[34m~                                                                                                                          [16;1H[34h[?25h[15;1H[?25l[15;18r[0m[15;1H[L[1;39r[39;1H[K[15;1H[34h[?25h[?25l#[34h[?25h[?25l [34h[?25h[?25lE[34h[?25h[?25lv[34h[?25h[?25la[34h[?25h[?25ll[34h[?25h[?25lu[34h[?25h[?25la[34h[?25h[?25ll[34h[?25h[?25lt[34h[?25h[?25le[34h[?25h[?25l [34h[?25h[?25la[34h[?25h[?25ln[34h[?25h[?25l [34h[?25h[?25le[34h[?25h[?25lx[34h[?25h[?25lp[34h[?25h[?25lr[34h[?25h[?25le[34h[?25h[?25ls[34h[?25h[?25ls[34h[?25h[?25li[34h[?25h[?25lo[34h[?25h[?25ln[34h[?25h[?25l.[34h[?25h[?25l [34h[?25h[?25lI[34h[?25h[?25lf[34h[?25h[?25l [34h[?25h[?25li[34h[?25h[?25lt[34h[?25h[?25l [34h[?25h[?25lf[34h[?25h[?25la[34h[?25h[?25li[34h[?25h[?25ll[34h[?25h[?25le[34h[?25h[?25ld[34h[?25h[?25l,[34h[?25h[?25l [34h[?25h[?25lp[34h[?25h[?25lr[34h[?25h[?25li[34h[?25h[?25ln[34h[?25h[?25lt[34h[?25h[?25l [34h[?25h[?25l[15;18r[15;1H[L[1;39r[15;1HD[34h[?25h[?25l[15;18r[15;1H[L[1;39r[15;1HD[34h[?25h
[15;1H[?25l[15;18r[18;1H
[1;39r[18;1H}[15;1H[34h[?25h[?25l[15;18r[18;1H
[1;39r[18;1H[1m[34m~                                                                                                                          [15;1H[34h[?25h[0m# [10C# [?25l[34h[?25h[?25l[7mEvalualte [34h[?25h[?25lan [34h[?25h[?25lexpression[34h[?25h[?25l[0mn[34h[?25h[?25l# . If it failed, print [15;25H[K[15;3H[34h[?25h[?25le. If it failed, print# e[34h[?25h[?25lv. If it failed, print# ev[34h[?25h[?25la. If it failed, print# eva[34h[?25h[?25ll. If it failed, print[15;7H[34h[?25h[?25l . If it failed, print[15;8H[34h[?25h[?25l$. If it failed, print[15;9H[34h[?25h[?25l[34h[?25h[?25l"[34h[?25h[?25l$. If it failed, print[15;10H[34h[?25h[?25l1. If it failed, print[15;11H[34h[?25h[?25l". If it failed, print[15;12H[34h[?25h[?25l[39;1H:[34h[?25hw[?25l"func_collection.sh" 27 lines, 898964 characters written[19;20H[1m[7m   [15;11H[34h[?25h[16;11H
[16;11H[15;11H[16;11H
[16;11H[15;11H[23C[?25l[0m$[19;20H[1m[7m[+][15;35H[34h[?25h[?25l[0m@[34h[?25h[?25l[34h[?25h[?25l2[34h[?25h[?25l [34h[?25h[?25la[34h[?25h[?25ln[34h[?25h[?25ld[34h[?25h[?25l [34h[?25h[?25le[34h[?25h[?25lx[34h[?25h[?25li[34h[?25h[?25lr[34h[?25h[?25l[34h[?25h[?25lt[34h[?25h[?25l.[34h[?25h[?25l[15;18r[15;1H[L[1;39r[15;1HB[39;1H[K[15;2H[34h[?25h
[15;1H[?25l[15;18r[18;1H
[1;39r[18;1H[1m[34m~                                                                                                                          [15;1H[34h[?25h
[?25l[0m[17;1H[K[18;1H}[18;2H[K[17;1H[34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25le[34h[?25h[?25lv[34h[?25h[?25la[34h[?25h[?25ll[34h[?25h[?25l [34h[?25h[?25l"[34h[?25h[?25l$[34h[?25h[?25l![34h[?25h[?25l[34h[?25h[?25l1[34h[?25h[?25l"[34h[?25h[?25l[18;1H[K[18;1H[34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25le[34h[?25h[?25lx[34h[?25h[?25li[34h[?25h[?25lt[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25lE[34h[?25h[?25lx[34h[?25h[?25li[34h[?25h[?25lt[34h[?25h[?25l_[34h[?25h[?25li[34h[?25h[?25lf[34h[?25h[?25l_[34h[?25h[?25lf[34h[?25h[?25la[34h[?25h[?25li[34h[?25h[?25ll[34h[?25h[?25le[34h[?25h[?25ld[34h[?25h[?25l [34h[?25h[?25l$[34h[?25h[?25l?[34h[?25h[?25l [34h[?25h[?25l$[34h[?25h[?25l[34h[?25h[?25l"[34h[?25h[?25l$[34h[?25h[?25l2[34h[?25h[?25l"[34h[?25h[17;13H[16;26H[15;26H[14;1H[13;1H[12;6H[11;14H[10;20H[9;25H[8;18H[7;26H[?25l -ne 0 ], print $2 and exit.[7;37H[K[7;9H[34h[?25h[?25l1 -ne 0 ], print $2 and exit.[7;10H[34h[?25h[?25l[7;18r[7;1H[L[1;39r[7;1HB[34h[?25h[?25l[7;18r[7;1H[L[1;39r[7;1HB[34h[?25h
[7;1H[?25l[7;18r[18;1H
[1;39r[18;5Heval "$1"[7;1H[34h[?25h[?25l[7;18r[18;1H
[1;39r[18;5HExit_if_failed $? "$2"[7;1H[34h[?25h

    if [ $[?25l -ne 0 ]; then[9;25H[K[9;11H[34h[?25h[?25l1 -ne 0 ]; then[9;12H[34h[?25h[?25l[39;1H:[34h[?25hw[?25l"func_collection.sh" 29 lines, 898964 characters written[19;20H[1m[7m   [9;11H[34h[?25h[?25l[1;18r[0m[18;1H
[1;39r[18;1H}[39;1H[K[17;5H[34h[?25h[?25l
[34h[?25h[?25l[39;1H:[34h[?25hq[?25l[1;1H[K[2;1HExit_if_failed $UID "Does not have enough permission, please run as root"
#if [ $UID -ne 0 ]; then[3;25H[K[4;1H#    echo "Does not have enough permission, please run as root"
#    exit 1
#fi[6;4H[K[7;1H[K[8;1H# Install docker-ce using distro's software manager
if grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common

    echo -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[16;5H[K[17;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    Exit_if_failed $(test $? -ne 1) "Failed to verify the fingerprint"[19;71H[K[20;1H    #if [ $? -eq 1 ]; then[20;27H[K[21;1H    #    echo "Failed to verify the fingerprint"
    #    exit 1
    #fi[24;1H[K[25;1H    echo -e "\nAdding docker-ce apt source"[25;44H[K[26;5Hadd-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    Exit_if_failed $? "Failed to add the docker debian source"
    #if [ $? -ne 0 ]; then[28;27H[K[29;5H#    echo "Failed to add the docker debian source"
    #    exit 1[30;16H[K[31;5H#fi[31;8H[K[33;16HInstalling docker-ce"[33;37H[K[34;8H update && apt install docker-ce docker-ce-cli containerd.io[34;68H[K[35;21H? "Failed to install docker-ce"[35;52H[K[36;5H[K[37;5Hecho -e "\nInstall completed"[37;34H[K[38;1Helse[38;5H[K[7;1H[34h[?25h











    [15C$([?25l(test $? -ne 1) "Failed to verify the fingerprint"[19;70H[K[19;20H[34h[?25h[?25ltest $? -ne 1) "Failed to verify the fingerprint"[19;69H[K[19;20H[34h[?25h[?25l"test $? -ne 1) "Failed to verify the fingerprint"[19;21H[34h[?25h[?25l[39;1H[K[39;1H:[34h[?25hw[?25l"install-and-configure-docker.sh" 82 lines, 898964 characters written[19;20H[34h[?25h"test $? -ne 1[?25l "Failed to verify the fingerprint"[19;69H[K[19;34H[34h[?25h[?25l" "Failed to verify the fingerprint"[19;35H[34h[?25h[?25l[39;1H[K[39;1H:[34h[?25hw[?25l"install-and-configure-docker.sh" 82 lines, 898964 characters written[19;34H[34h[?25h[?25l " "Failed to verify the fingerprint"[19;35H[34h[?25h[?25l]" "Failed to verify the fingerprint"[19;36H[34h[?25h[?25l[34h[?25h[?25l[7mes[34h[?25h[?25l[0mt $? -ne 1 ]" "Failed to verify the fingerprint"[19;69H[K[19;21H[34h[?25h[?25l $? -ne 1 ]" "Failed to verify the fingerprint"[19;68H[K[19;21H[34h[?25h[?25l[ $? -ne 1 ]" "Failed to verify the fingerprint"[19;22H[34h[?25h[?25l[39;1H[K[39;1H:[34h[?25hw[?25l"install-and-configure-docker.sh" 82 lines, 898964 characters written[19;21H[34h[?25h[20;21H[21;21H[22;15H[23;7H
[23;7H[22;15H[21;21H[20;21H[21;21H[22;15H[23;7H
[25;21H[26;21H[27;21H[28;21H[29;21H[30;15H[31;7H
[33;21H[34;21H[35;21H
[37;21H
els[?25l[1;38r[38;1H
[1;39r[38;5Hecho "Distribution not supported"[39;1H[K[38;21H[34h[?25h[?25l[1;38r[38;1H
[1;39r[38;5Hexit 1[34h[?25h[?25l[1;38r[38;1H
[1;39r[38;1Hfi[34h[?25h[37;10H[36;21H[35;4H[34;21H[33;1H[32;21H
[34;21H
els[36;21H[37;10H[?25l[1;38r[1;1H[19M[1;39r[21;1Hverify_docker_install

echo -e "\nStart to configure docker\nEnable usernamespace first"
sysctl >/dev/null 2>&1

Exit_if_failed [ $? -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"

#if [ $? -eq 127 ]; then
#    echo -e "\nCommand 'sysctl' not found and thus cannot enable user namespace"
#    exit 1
#fi

sysctl -w kernel.unprivileged_userns_clone=1

echo -e "\nEnabling user remap feature in docker using user namespace"
echo -e '{\n    "userns-remap": "default"\n}'>/etc/docker/daemon.json

restart_docker[37;1H[34h[?25h[36;1H[35;1H[34;1H[33;1H[32;1H[31;1H[30;1H[29;1H[28;1H[27;1H[26;1H[?25lEExit_if_failed [ $? -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"E[34h[?25h[?25lvExit_if_failed [ $? -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"Ev[34h[?25h[?25laExit_if_failed [ $? -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"Eva[34h[?25h[?25llExit_if_failed [ $? -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"Eval[34h[?25h[?25luExit_if_failed [ $? -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"Evalu[34h[?25h[?25llExit_if_failed [ $? -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[26;7H[34h[?25h[?25laExit_if_failed [ $? -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[26;8H[34h[?25h[?25ltExit_if_failed [ $? -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[26;9H[34h[?25h[?25leExit_if_failed [ $? -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[26;10H[34h[?25h[?25l_Exit_if_failed [ $? -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[26;11H[34h[?25h[?25laExit_if_failed [ $? -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[26;12H[34h[?25h[?25lnExit_if_failed [ $? -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[26;13H[34h[?25h[?25ldExit_if_failed [ $? -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[26;14H[34h[?25h[?25l_Exit_if_failed [ $? -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[26;15H[34h[?25h[?25leExit_if_failed [ $? -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[26;16H[34h[?25h[?25l[26;38r[26;1H[L[1;39r[26;1HC[34h[?25h
[30C[ [?25lxit_if_failed [ $? -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[27;113H[K[27;16H[34h[?25h[26;1H[?25l[26;38r[38;1H
[1;39r[38;1Hrestart_docker[26;1H[34h[?25h[?25l[39;1H:[34h[?25hw[?25l"install-and-configure-docker.sh" 82 lines, 898964 characters written[26;1H[34h[?25h[?25l[39;1H[K[39;1H:[34h[?25hsp func_collection.sh[?25l"func_collection.sh" [39;22H[K[39;22H29 lines, 898964 characters[1;1Hverify_docker_install() {
    echo -e "\nVerifing docker install"
    docker run --rm hello-world[3;33H[K[4;5Hexit_status=$?[4;19H[K[5;5Hdocker rmi hello-world[5;27H[K[6;5Hif [ $exit_status -ne 0 ]; then
        echo -e "\nDocker is not installed properly, something went wrong"
        exit 1[8;15H[K[9;5Hfi[9;7H[K[10;1H}[11;5H[K[12;1Hrestart_docker() {[12;19H[K[13;5Hecho -e "\nRestarting docker"[13;34H[K[14;5H/etc/init.d/docker restart
}[15;5H[K[16;1H[K[17;1H# If [ $1 -ne 0 ], print $2 and exit.
Exit_if_failed() {
[1m[7mfunc_collection.sh                                                                                                         [0m[21;1H    echo -e "\nInstall completed"
else
    echo "Distribution not supported"[23;38H[K[24;1H    exit 1[24;11H[K[25;1Hfi[26;1H[K[27;1Hverify_docker_install[28;1H[K[29;1Hecho -e "\nStart to configure docker\nEnable usernamespace first"[29;67H[K[30;1Hsysctl >/dev/null 2>&1[31;1H[K[32;1HEvalulate_and_exit_if_failed [ $? -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[33;1H[K[34;1H#if [ $? -eq 127 ]; then
#    echo -e "\nCommand 'sysctl' not found and thus cannot enable user namespace"
#    exit 1[36;12H[K[37;1H#fi
[7minstall-and-configure-docker.sh                                                                                            [1;1H[34h[?25h[?25l[1;18r[0m[1;1H[9M[1;39r[10;5Hif [ $1 -ne 0 ]; then[11;9Hecho -e "$2"[12;9Hexit 1
    fi
}

# eval "$1". If it failed, print $2 and exit.
Eval_and_Exit_if_failed() {
    eval "$1"[39;1H[K[1;1H[34h[?25h[?25l[1;18r[1;1H[2M[1;39r[17;5HExit_if_failed $? "$2"
}[8;5H[34h[?25h[?25l[17;5H[34h[?25h[16;5H[15;5H[?25l[39;1H:[34h[?25hq[?25l[1;1H    #fi[1;8H[K[2;5H[K[3;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    Exit_if_failed $? "Failed to add the docker debian source"
    #if [ $? -ne 0 ]; then[6;27H[K[7;1H    #    echo "Failed to add the docker debian source"
    #    exit 1[8;17H[K[9;5H#fi[9;9H[K[10;9H[K[11;5Hecho -e "\nInstalling docker-ce"
    apt update && apt install docker-ce docker-ce-cli containerd.io
    Exit_if_failed $? "Failed to install docker-ce"[14;1H[K[15;1H    echo -e "\nInstall completed"
else[16;5H[K[17;5Hecho "Distribution not supported"
    exit 1
fi[19;3H[K[21;1Hverify_docker_instal[21;22H[K[22;1H[K[23;1Hecho -e "\nStart to configure docker\nEnable usernamespace first"
sysctl >/dev/null 2>&1[25;1H[K[26;1HEvalulate_and_exit_if_failed [ $? -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[27;1H[K[28;1H#if [ $? -eq 127 ]; then
#    echo -e "\nCommand 'sysctl' not found and thus cannot enable user namespace"
#    exit 1[30;12H[K[31;1H#fi[32;1H[K[33;1Hsysctl -w kernel.unprivileged_userns_clone=1[34;1H[K[35;1Hecho -e "\nEnabling user remap feature in docker using user namespace"[35;72H[K[36;1Hecho -e '{\n    "userns-remap": "default"\n}'>/etc/docker/daemon.json[37;1H[K[38;1Hrestart_docker[38;15H[K[26;1H[34h[?25hEval[?25llate_and_exit_if_failed [ $? -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[26;112H[K[26;5H[34h[?25h[?25late_and_exit_if_failed [ $? -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[26;111H[K[26;5H[34h[?25h[?25lte_and_exit_if_failed [ $? -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[26;110H[K[26;5H[34h[?25h[?25le_and_exit_if_failed [ $? -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[26;109H[K[26;5H[34h[?25h[?25l_and_exit_if_failed [ $? -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[26;108H[K[26;5H[34h[?25h_and_[?25lxit_if_failed [ $? -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[26;107H[K[26;10H[34h[?25h[?25lExit_if_failed [ $? -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[26;11H[34h[?25h[?25l[39;1H[K[39;1H:[34h[?25hw[?25l"install-and-configure-docker.sh" 82 lines, 898964 characters written[26;10H[34h[?25h[15C[ [?25l"[ $? -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[26;26H[34h[?25h"[ $? -ne 127 ][?25l" "\nCommand 'sysctl' not found and thus cannot enable user namespace"[26;41H[34h[?25h[?25l[39;1H[K[39;1H:[34h[?25hw[?25l"install-and-configure-docker.sh" 82 lines, 898964 characters written[26;40H[34h[?25h
[28;24H[29;40H[30;11H
#f
[33;40H
[35;40H[36;40H
[38;14H[?25l[1;38r[38;1H
[1;39r[39;1H[K[38;1H[34h[?25h[?25l[1;38r[38;1H
[1;39r[38;1Hecho -e "Verifing the user remap feature"[34h[?25h[?25l[1;38r[38;1H
[1;39r[38;1Hid dockremap[34h[?25h[?25l[1;38r[38;1H
[1;39r[38;1HExit_if_failed $? "\nDockerd failed to create dockremap user"[38;40H[34h[?25h[?25l[1;38r[38;1H
[1;39r[38;1H[34h[?25h[?25l[1;38r[38;1H
[1;39r[38;1H#if [ $? -ne 0 ]; then[34h[?25h[?25l[1;38r[38;1H
[1;39r[38;1H#    echo -e "\nDockerd failed to create dockremap user"[38;40H[34h[?25h[?25l[1;38r[38;1H
[1;39r[38;1H#    exit 1[34h[?25h[?25l[1;38r[38;1H
[1;39r[38;1H#fi[34h[?25h[?25l[1;38r[38;1H
[1;39r[38;1H[34h[?25h[?25l[1;38r[38;1H
[1;39r[38;1Hgrep dockremap /etc/subuid && grep dockremap /etc/subgid[38;40H[34h[?25h[?25l[1;38r[38;1H
[1;39r[38;1HExit_if_failed $? "\nDockerd failed to setup user remap feature properly"[38;40H[34h[?25h[?25l[1;38r[38;1H
[1;39r[38;1H[34h[?25h[?25l[1;38r[38;1H
[1;39r[38;1H#if [ $? -ne 0 ]; then[34h[?25h[?25l[1;38r[38;1H
[1;39r[38;1H#    echo -e "\nDockerd failed to setup user remap feature properly"[38;40H[34h[?25h[?25l[1;38r[38;1H
[1;39r[38;1H#    exit 1[34h[?25h[?25l[1;38r[38;1H
[1;39r[38;1H#fi[34h[?25h[37;11H[36;40H[35;22H[34;1H[33;40H[32;40H[31;1H[30;3H[29;11H[28;40H[27;22H[26;1H[25;40H
[27;22H[28;40H[29;11H
#f
[32;40H[33;40H
[35;22H[36;40H[37;11H
#f[?25l[1;38r[38;1H
[1;39r[38;1H[34h[?25h[?25l[1;38r[38;1H
[1;39r[38;1Hverify_docker_install[34h[?25h[?25l
:[34h[?25hq[?25l[39;1H[K[39;1H[?1l>[34h[?25h[?1049l[01;32mpi@raspberrypi[00m:[01;34m~/docker_images $[00m s[K./int[Kstall-and-configure-docker.sh 
Does not have enough permission, please run as root
[01;32mpi@raspberrypi[00m:[01;34m~/docker_images $[00m sudo ./install-and-configure-docker.sh 

Install necessary softwares for adding docker-ce apt source with gpg key
[33m0% [Working][0m[33m0% [Connecting to raspbian.raspberrypi.org (2a00:1098:0:80:1000:75:0:3)] [Waiting for headers][0m                                                                                              Hit:1 http://archive.raspberrypi.org/debian buster InRelease
[33m                                                                                              0% [Waiting for headers][0m                        Hit:2 http://raspbian.raspberrypi.org/raspbian buster InRelease
[33m                        0% [Working][0m[33m0% [Working][0m[33m20% [Working][0m             Reading package lists... 0%Reading package lists... 0%Reading package lists... 0%Reading package lists... 40%Reading package lists... 67%Reading package lists... 96%Reading package lists... 97%Reading package lists... 97%Reading package lists... 97%Reading package lists... 97%Reading package lists... 98%Reading package lists... 98%Reading package lists... 98%Reading package lists... 98%Reading package lists... 99%Reading package lists... 99%Reading package lists... Done
Building dependency tree... 0%Building dependency tree... 0%Building dependency tree... 0%Building dependency tree... 50%Building dependency tree... 50%Building dependency tree       
Reading state information... 0%Reading state information... 0%Reading state information... Done
All packages are up to date.
Reading package lists... 0%Reading package lists... 100%Reading package lists... Done
Building dependency tree... 0%Building dependency tree... 0%Building dependency tree... 50%Building dependency tree... 50%Building dependency tree       
Reading state information... 0%Reading state information... 0%Reading state information... Done
apt-transport-https is already the newest version (1.8.2).
ca-certificates is already the newest version (20190110).
curl is already the newest version (7.64.0-4).
gnupg2 is already the newest version (2.2.12-1+rpi1).
software-properties-common is already the newest version (0.96.20.2-2).
0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.

Installing fingerprint for docker-ce source
OK

Verifing fingerprint of the key
./func_collection.sh: line 19: [: too many arguments

Adding docker-ce apt source
Traceback (most recent call last):
  File "/usr/bin/add-apt-repository", line 95, in <module>
    sp = SoftwareProperties(options=options)
  File "/usr/lib/python3/dist-packages/softwareproperties/SoftwareProperties.py", line 109, in __init__
    self.reload_sourceslist()
  File "/usr/lib/python3/dist-packages/softwareproperties/SoftwareProperties.py", line 599, in reload_sourceslist
    self.distro.get_sources(self.sourceslist)    
  File "/usr/lib/python3/dist-packages/aptsources/distro.py", line 93, in get_sources
    (self.id, self.codename))
aptsources.distro.NoDistroTemplateException: Error: could not find a distribution template for Raspbian/buster
Failed to add the docker debian source
[01;32mpi@raspberrypi[00m:[01;34m~/docker_images $[00m vi install-and-configure-docker.sh 
[?1049h[?1h=[1;39r[23m[24m[0m[H[J[?25l[39;1H"install-and-configure-docker.sh" 82 lines, 898964 characters[1;1H#!/usr/bin/env bash

source ./func_collection.sh

Exit_if_failed $UID "Does not have enough permission, please run as root"
#if [ $UID -ne 0 ]; then
#    echo "Does not have enough permission, please run as root"
#    exit 1
#fi

# Install docker-ce using distro's software manager
if grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[17;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[20;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    Exit_if_failed "[ $? -ne 1 ]" "Failed to verify the fingerprint"
    #if [ $? -eq 1 ]; then
    #    echo "Failed to verify the fingerprint"
    #    exit 1
    #fi[28;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    Exit_if_failed $? "Failed to add the docker debian source"
    #if [ $? -ne 0 ]; then
    #    echo "Failed to add the docker debian source"
    #    exit 1
    #fi[36;5Hecho -e "\nInstalling docker-ce"
    apt update && apt install docker-ce docker-ce-cli containerd.io
    Exit_if_failed $? "Failed to install docker-ce"[1;1H[34h[?25h




















    [?25lEExit_if_failed "[ $? -ne 1 ]" "Failed to verify the fingerprint"    E[34h[?25h[?25lvExit_if_failed "[ $? -ne 1 ]" "Failed to verify the fingerprint"[22;7H[34h[?25h[?25laExit_if_failed "[ $? -ne 1 ]" "Failed to verify the fingerprint"[22;8H[34h[?25h[?25llExit_if_failed "[ $? -ne 1 ]" "Failed to verify the fingerprint"[22;9H[34h[?25h[?25l_Exit_if_failed "[ $? -ne 1 ]" "Failed to verify the fingerprint"[22;10H[34h[?25h[?25laExit_if_failed "[ $? -ne 1 ]" "Failed to verify the fingerprint"[22;11H[34h[?25h[?25lnExit_if_failed "[ $? -ne 1 ]" "Failed to verify the fingerprint"[22;12H[34h[?25h[?25ldExit_if_failed "[ $? -ne 1 ]" "Failed to verify the fingerprint"[22;13H[34h[?25h[?25l_Exit_if_failed "[ $? -ne 1 ]" "Failed to verify the fingerprint"[22;14H[34h[?25h[?25l[39;1H[K[39;1H:[34h[?25hwq[?25l"install-and-configure-docker.sh" 82 lines, 898964 characters written
[?1l>[34h[?25h[?1049l[01;32mpi@raspberrypi[00m:[01;34m~/docker_images $[00m sudvi install-and-configure-docker.sh [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[4@sudo ./[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C

Install necessary softwares for adding docker-ce apt source with gpg key
[33m0% [Working][0m[33m0% [Waiting for headers] [Waiting for headers][0m                                              Hit:1 http://raspbian.raspberrypi.org/raspbian buster InRelease
[33m                                              0% [Waiting for headers][0m                        Hit:2 http://archive.raspberrypi.org/debian buster InRelease
[33m                        0% [Working][0m[33m0% [Working][0m[33m20% [Working][0m             Reading package lists... 0%Reading package lists... 0%Reading package lists... 0%Reading package lists... 19%Reading package lists... 48%Reading package lists... 75%Reading package lists... 97%Reading package lists... 97%Reading package lists... 97%Reading package lists... 97%Reading package lists... 98%Reading package lists... 98%Reading package lists... 98%Reading package lists... 98%Reading package lists... 99%Reading package lists... 99%Reading package lists... Done
Building dependency tree... 0%Building dependency tree... 0%Building dependency tree... 0%Building dependency tree... 50%Building dependency tree... 50%Building dependency tree       
Reading state information... 0%Reading state information... 0%Reading state information... Done
All packages are up to date.
Reading package lists... 0%Reading package lists... 100%Reading package lists... Done
Building dependency tree... 0%Building dependency tree... 0%Building dependency tree... 50%Building dependency tree... 50%Building dependency tree       
Reading state information... 0%Reading state information... 0%Reading state information... Done
apt-transport-https is already the newest version (1.8.2).
ca-certificates is already the newest version (20190110).
curl is already the newest version (7.64.0-4).
gnupg2 is already the newest version (2.2.12-1+rpi1).
software-properties-common is already the newest version (0.96.20.2-2).
0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.

Installing fingerprint for docker-ce source
OK

Verifing fingerprint of the key

Adding docker-ce apt source
Traceback (most recent call last):
  File "/usr/bin/add-apt-repository", line 95, in <module>
    sp = SoftwareProperties(options=options)
  File "/usr/lib/python3/dist-packages/softwareproperties/SoftwareProperties.py", line 109, in __init__
    self.reload_sourceslist()
  File "/usr/lib/python3/dist-packages/softwareproperties/SoftwareProperties.py", line 599, in reload_sourceslist
    self.distro.get_sources(self.sourceslist)    
  File "/usr/lib/python3/dist-packages/aptsources/distro.py", line 93, in get_sources
    (self.id, self.codename))
aptsources.distro.NoDistroTemplateException: Error: could not find a distribution template for Raspbian/buster
Failed to add the docker debian source
[01;32mpi@raspberrypi[00m:[01;34m~/docker_images $[00m s[Kvi func_collection.sh 
[?1049h[?1h=[1;39r[23m[24m[0m[H[J[?25l[39;1H"func_collection.sh" 29 lines, 898964 characters[1;1Hverify_docker_install() {
    echo -e "\nVerifing docker install"
    docker run --rm hello-world
    exit_status=$?
    docker rmi hello-world
    if [ $exit_status -ne 0 ]; then[7;9Hecho -e "\nDocker is not installed properly, something went wrong"[8;9Hexit 1
    fi
}

restart_docker() {
    echo -e "\nRestarting docker"
    /etc/init.d/docker restart
}

# If [ $1 -ne 0 ], print $2 and exit.
Exit_if_failed() {
    if [ $1 -ne 0 ]; then[20;9Hecho -e "$2"[21;9Hexit 1
    fi
}

# eval "$1". If it failed, print $2 and exit.
Eval_and_Exit_if_failed() {
    eval "$1"
    Exit_if_failed $? "$2"
}
[1m[34m~                                                                                                                          [31;1H~                                                                                                                          [32;1H~                                                                                                                          [33;1H~                                                                                                                          [34;1H~                                                                                                                          [35;1H~                                                                                                                          [36;1H~                                                                                                                          [37;1H~                                                                                                                          [38;1H~                                                                                                                          [1;1H[34h[?25h





[6;1H[5;1H[?25l[6;38r[0m[6;1H[L[1;39r[39;1H[K[6;1H[34h[?25h[?25lE[34h[?25h[?25l[34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25lE[34h[?25h[?25lx[34h[?25h[?25li[34h[?25h[?25lr[34h[?25h[?25l[34h[?25h[?25lt[34h[?25h[?25l_[34h[?25h[?25lf[34h[?25h[?25l[34h[?25h[?25li[34h[?25h[?25lf[34h[?25h[?25l_[34h[?25h[?25lf[34h[?25h[?25la[34h[?25h[?25li[34h[?25h[?25ll[34h[?25h[?25le[34h[?25h[?25ld[34h[?25h[?25l [34h[?25h[?25l$[34h[?25h[?25l?[34h[?25h[?25l [34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25le[34h[?25h[?25lx[34h[?25h[?25li[34h[?25h[?25lt[34h[?25h[?25l_[34h[?25h[?25ls[34h[?25h[?25lt[34h[?25h[?25la[34h[?25h[?25lt[34h[?25h[?25lu[34h[?25h[?25ls[34h[?25h[?25l [34h[?25h[7;32H[8;32H[8;19H[?25l[34h[?25h[?25l[7m"\[34h[?25h[?25lnDocker [34h[?25h[?25lis [34h[?25h[?25lnot [34h[?25h[?25linstalled [34h[?25h[?25lproperly[34h[?25h[?25l, [34h[?25h[?25lsomething [34h[?25h[?25lwent [34h[?25h[?25lwrong[34h[?25h[?25l[0m[8;17H"\nDocker is not installed properly, something went wrong[8;17H[34h[?25h[7;17H[6;17H[16C[?25l "\nDocker is not installed properly, something went wrong"[34h[?25h[?25l[7;38r[7;1H[L[1;39r[7;1H[34h[?25h[6;1H[5;1H[?25l[6;38r[6;1H[L[1;39r[6;1H[34h[?25h[?25l[39;1H:[34h[?25hw[?25l"func_collection.sh" 32 lines, 898964 characters written[6;1H[34h[?25h[5;1H[4;1H[3;1H[2;1H[?25l[3;38r[3;1H[L[1;39r[39;1H[K[3;1H[34h[?25h[?25l[39;1H:[34h[?25hW[?25l[1m[37m[41mE492: Not an editor command: W[3;1H[34h[?25h

[4;1H[?25l[5;38r[0m[5;1H[L[1;39r[39;1H[K[5;1H[34h[?25h[?25l[39;1H:[34h[?25hw[?25l"func_collection.sh" 34 lines, 898964 characters written[5;1H[34h[?25h
[5;1H[?25l[5;38r[38;1H
[1;39r[38;1H[1m[34m~                                                                                                                          [0m[39;1H[K[5;5H[34h[?25h[?25l[6;38r[6;1H[L[1;39r[6;1H[34h[?25h[?25l[39;1H:[34h[?25hw[?25l"func_collection.sh" 34 lines, 898964 characters written[6;1H[34h[?25h


[8;1H[7;1H[6;1H




     [?25l[34h[?25h[?25l[7mi
[0m    [34h[?25h[?25l[7m 
[0m    [34h[?25h[?25l[7m 
[0m    [34h[?25h[?25l[11;5Hi
     
     [11;5H[34h[?25h[?25l#if [ $exit_status -ne 0 ]; then    #[34h[?25h[?25l
    #    echo -e "\nDocker is not installed properly, something went wrong"
    #    exit 1
    #fi[11;5H[34h[?25h[?25l[39;1H[K[39;1H:[34h[?25hwq[?25l"func_collection.sh" 34 lines, 898964 characters written
[?1l>[34h[?25h[?1049l[01;32mpi@raspberrypi[00m:[01;34m~/docker_images $[00m a[Kgit addd[K func_collection.sh 
[01;32mpi@raspberrypi[00m:[01;34m~/docker_images $[00m git add install-and-configure-docker.sh 
[01;32mpi@raspberrypi[00m:[01;34m~/docker_images $[00m git commit
hint: Waiting for your editor to close the file... (B)0[?1049h[1;39r[m[4l[39;49m[?1h=[?1h=[?1h=[?25l[39;49m[m[H[J[37;54H[0;7m[ Reading File ][m[37;60H[0;7m 14 lines ][m[H[0;7m  GNU nano 3.2                            /home/pi/docker_images/.git/COMMIT_EDITMSG                                       [1;122H[m[38d[0;7m^G[m Get Help    [0;7m^O[m Write Out   [0;7m^W[m Where Is    [0;7m^K[m Cut Text    [0;7m^J[m Justify     [0;7m^C[m Cur Pos     [0;7mM-U[m Undo[106G[0;7mM-A[m Mark Text[39d[0;7m^X[m Exit[39;16H[0;7m^R[m Read File   [0;7m^\[m Replace     [0;7m^U[m Uncut Text  [0;7m^T[m To Spell    [0;7m^_[m Go To Line  [0;7mM-E[m Redo[106G[0;7mM-6[m Copy TextMM[4d[39;49m[36m# Please enter the commit message for your changes. Lines starting[5d# with '#' will be ignored, and an empty message aborts the commit.[6d#[7d# On branch master[8d# Your branch is up to date with 'origin/master'.[9d#[10d# Changes to be committed:[11d#       modified:   func_collection.sh[12d#       modified:   install-and-configure-docker.sh[13d#[14d# Untracked files:[15d#       typescript[16d#[3d[39m[m[34h[?25h[?25l[1;114H[0;7mModified[m[3dA[34h[?25h[?25ld[34h[?25h[?25ld[34h[?25h[?25ln[34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25ln[34h[?25h[?25le[34h[?25h[?25lw[34h[?25h[?25l [34h[?25h[?25lf[34h[?25h[?25lu[34h[?25h[?25ln[34h[?25h[?25lc[34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25lc[34h[?25h[?25lo[34h[?25h[?25ln[34h[?25h[?25lv[34h[?25h[?25le[34h[?25h[?25li[34h[?25h[?25l [34h[?25h[?25ln[37d[K[3;15H[34h[?25h[?25li[34h[?25h[?25le[34h[?25h[?25ln[34h[?25h[?25lt[34h[?25h[?25l [34h[?25h[?25lf[34h[?25h[?25lu[34h[?25h[?25ln[34h[?25h[?25lc[34h[?25h[?25lt[34h[?25h[?25li[34h[?25h[?25lo[34h[?25h[?25ln[34h[?25h[?25l [34h[?25h[?25lE[34h[?25h[?25lx[34h[?25h[?25li[34h[?25h[?25lt[34h[?25h[?25l_[34h[?25h[?25li[34h[?25h[?25lf[34h[?25h[?25l_[34h[?25h[?25lf[34h[?25h[?25la[34h[?25h[?25li[34h[?25h[?25ll[34h[?25h[?25le[34h[?25h[?25ld[34h[?25h[?25l [34h[?25h[?25la[34h[?25h[?25ln[34h[?25h[?25ld[34h[?25h[?25l [34h[?25h[?25lE[34h[?25h[?25lv[34h[?25h[?25la[34h[?25h[?25ll[34h[?25h[?25l_[34h[?25h[?25la[34h[?25h[?25ln[34h[?25h[?25ld[34h[?25h[?25l_[34h[?25h[?25le[34h[?25h[?25li[34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25lE[34h[?25h[?25lx[34h[?25h[?25li[34h[?25h[?25lt[34h[?25h[?25l_[34h[?25h[?25li[34h[?25h[?25lf[34h[?25h[?25l_[34h[?25h[?25lf[34h[?25h[?25la[34h[?25h[?25li[34h[?25h[?25ll[34h[?25h[?25le[34h[?25h[?25ld[34h[?25h[?25l [34h[?25h[?25lt[34h[?25h[?25lo[34h[?25h[?25l [34h[?25h[?25lf[34h[?25h[?25lu[34h[?25h[?25ln[34h[?25h[?25lc[34h[?25h[?25l_[34h[?25h[?25lc[34h[?25h[?25lo[34h[?25h[?25ll[34h[?25h[?25ll[34h[?25h[?25le[34h[?25h[?25lc[34h[?25h[?25lt[34h[?25h[?25li[34h[?25h[?25lo[34h[?25h[?25ln[34h[?25h[?25l.[34h[?25h[?25ls[34h[?25h[?25lh[34h[?25h[?25l7[4;37r8[4dM[1;39r[4;1H[34h[?25h[?25l[4;37r[37;1H
[1;39r[3;93H[34h[?25h[?25l.[34h[?25h[?25l7[4;37r8[4dM[1;39r[4;1H[34h[?25h[?25lU[34h[?25h[?25ls[34h[?25h[?25le[34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l[K[34h[?25h[?25l7[4;37r8M[1;39r[5;1H[34h[?25h[?25lU[34h[?25h[?25lS[34h[?25h[?25le[34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25ls[34h[?25h[?25le[34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l[K[34h[?25h[?25l[4;37r[37;1H
[1;39r[4;1H[34h[?25h[?25l[4;37r[37;1H
[1;39r[3;94H[34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25la[34h[?25h[?25ln[34h[?25h[?25ld[34h[?25h[?25l7[4;37r8[4dM[1;39r[4;1H[34h[?25h[?25lu[34h[?25h[?25ls[34h[?25h[?25le[34h[?25h[?25l [34h[?25h[?25lt[34h[?25h[?25lh[34h[?25h[?25le[34h[?25h[?25ls[34h[?25h[?25le[34h[?25h[?25l [34h[?25h[?25lf[34h[?25h[?25lu[34h[?25h[?25ln[34h[?25h[?25lc[34h[?25h[?25lt[34h[?25h[?25li[34h[?25h[?25lo[34h[?25h[?25ln[34h[?25h[?25ls[34h[?25h[?25l [34h[?25h[?25li[34h[?25h[?25ln[34h[?25h[?25l [34h[?25h[?25lf[34h[?25h[?25lu[34h[?25h[?25lc[34h[?25h[?25l [34h[?25h[?25ln[34h[?25h[?25lc[34h[?25h[?25l_[34h[?25h[?25lc[34h[?25h[?25lo[34h[?25h[?25ll[34h[?25h[?25ll[34h[?25h[?25le[34h[?25h[?25lc[34h[?25h[?25lt[34h[?25h[?25li[34h[?25h[?25lo[34h[?25h[?25ln[34h[?25h[?25l.[34h[?25h[?25ls[34h[?25h[?25lh[34h[?25h[?25l [34h[?25h[?25la[34h[?25h[?25ln[34h[?25h[?25ld[34h[?25h[?25l [34h[?25h[?25li[34h[?25h[?25ln[34h[?25h[?25ls[34h[?25h[?25lt[34h[?25h[?25la[34h[?25h[?25ll[34h[?25h[?25ll[34h[?25h[?25l_[34h[?25h[?25l [34h[?25h[?25l-[34h[?25h[?25la[34h[?25h[?25ln[34h[?25h[?25ld[34h[?25h[?25l-[34h[?25h[?25lc[34h[?25h[?25lo[34h[?25h[?25ln[34h[?25h[?25lf[34h[?25h[?25li[34h[?25h[?25lg[34h[?25h[?25lu[34h[?25h[?25lr[34h[?25h[?25le[34h[?25h[?25l-[34h[?25h[?25ld[34h[?25h[?25lo[34h[?25h[?25lc[34h[?25h[?25le[34h[?25h[?25lr[34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25lk[34h[?25h[?25le[34h[?25h[?25lr[34h[?25h[?25l.[34h[?25h[?25ls[34h[?25h[?25lh[34h[?25h[?25l.[34h[?25h[?25l7[5;37r8[5dM[1;39r[5;1H[34h[?25h[?25l7[5;37r8M[1;39r[6;1H[34h[?25h[?25lA[34h[?25h[?25l[K[34h[?25h[?25l[5;37r[37;1H
[1;39r[5;1H[34h[?25h[?25l7[5;37r8M[1;39r[6;1H[34h[?25h[?25l[37d[0;7mSave modified buffer?  (Answering "No" will DISCARD changes.)                                                              [38;1H Y[m Yes[K[39d[0;7m N[m No  [39;16H [0;7m^C[m Cancel[K[37;63H[34h[?25h[?25l[J[39;123H[34h[?25h[39;1H[?1049l[?1l>[KAborting commit due to empty commit message.
[01;32mpi@raspberrypi[00m:[01;34m~/docker_images $[00m vi install-and-configure-docker.sh 
[?1049h[?1h=[1;39r[23m[24m[0m[H[J[?25l[39;1H"install-and-configure-docker.sh" 82 lines, 898964 characters[1;1H#!/usr/bin/env bash

source ./func_collection.sh

Exit_if_failed $UID "Does not have enough permission, please run as root"
#if [ $UID -ne 0 ]; then
#    echo "Does not have enough permission, please run as root"
#    exit 1
#fi

# Install docker-ce using distro's software manager
if grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[17;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[20;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    Eval_and_Exit_if_failed "[ $? -ne 1 ]" "Failed to verify the fingerprint"
    #if [ $? -eq 1 ]; then
    #    echo "Failed to verify the fingerprint"
    #    exit 1
    #fi[28;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    Exit_if_failed $? "Failed to add the docker debian source"
    #if [ $? -ne 0 ]; then
    #    echo "Failed to add the docker debian source"
    #    exit 1
    #fi[36;5Hecho -e "\nInstalling docker-ce"
    apt update && apt install docker-ce docker-ce-cli containerd.io
    Exit_if_failed $? "Failed to install docker-ce"[1;1H[34h[?25h














[15;1H[14;1H
[14;19H[?25l[34h[?25h[?25l[7m\ 
    apt install -y[34h[?25h[?25l[0my[34h[?25h[?25l-[34h[?25h[?25l[15;9Hinstall [15;9H[34h[?25h[?25lapt [34h[?25h[?25l[14;19H\[14;20H[K[15;1H    [14;19H[34h[?25h[?25l[7m\[34h[?25h[?25l 
    [34h[?25h[?25l[0m [34h[?25h[?25l[14;38r[38;1H
[1;39r[14;1H    apt update && apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[39;1H[K[14;19H[34h[?25h[13;19H[14;19H[?25l[15;38r[15;1H[L[1;39r[15;1H[34h[?25h[?25lE[34h[?25h[?25l[34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25lE[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l【[34h[?25h[?25ld[34h[?25h[?25ld d[34h[?25h[?25ld[34h[?25h[?25ld[34h[?25h[?25l[34h[?25h[?25l[15;8H[K[15;7H[34h[?25h
[15;7H[?25l[15;38r[38;1H
[1;39r[15;1H[34h[?25h









[?25l[39;1H:[34h[?25hw[?25l"install-and-configure-docker.sh" 81 lines, 898964 characters written[25;1H[34h[?25h









    
    apt [7C&& [?25l&& apt install docker-ce docker-ce-cli containerd.io[36;67H[K[36;15H[34h[?25h[?25l& apt install docker-ce docker-ce-cli containerd.io[36;66H[K[36;15H[34h[?25h[?25l apt install docker-ce docker-ce-cli containerd.io[36;65H[K[36;15H[34h[?25h[?25lapt install docker-ce docker-ce-cli containerd.io[36;64H[K[36;15H[34h[?25h[?25l[36;15H[K[37;1Hapt install docker-ce docker-ce-cli containerd.io[37;50H[K[38;5HExit_if_failed $? "Failed to install docker-ce"[37;1H[34h[?25h[?25l apt install docker-ce docker-ce-cli containerd.io [34h[?25h[?25l apt install docker-ce docker-ce-cli containerd.io  [34h[?25h[?25l apt install docker-ce docker-ce-cli containerd.io   [34h[?25h[?25l apt install docker-ce docker-ce-cli containerd.io    [34h[?25h
   [?25l[38;5H[K[38;1H[34h[?25h[?25l[39;1H[K[39;1H:[34h[?25hw[?25l"install-and-configure-docker.sh" 81 lines, 898964 characters written[38;1H[34h[?25h[?25l[1;38r[38;1H
[1;39r[38;5Hecho -e "\nInstall completed"[39;1H[K[38;1H[34h[?25h[?25l[1;38r[38;1H
[1;39r[38;1Helse[34h[?25h[?25l[1;38r[38;1H
[1;39r[38;5Hecho "Distribution not supported"[34h[?25h[?25l[1;38r[38;1H
[1;39r[38;5Hexit 1[34h[?25h[?25l[1;38r[38;1H
[1;39r[38;1Hfi[34h[?25h[?25l
:[34h[?25hwq[?25l"install-and-configure-docker.sh" 81 lines, 898964 characters written
[?1l>[34h[?25h[?1049l[01;32mpi@raspberrypi[00m:[01;34m~/docker_images $[00m git add install-and-configure-docker.sh 
[01;32mpi@raspberrypi[00m:[01;34m~/docker_images $[00m git commit
hint: Waiting for your editor to close the file... (B)0[?1049h[1;39r[m[4l[39;49m[?1h=[?1h=[?1h=[?25l[39;49m[m[H[J[37;54H[0;7m[ Reading File ][m[37;60H[0;7m 14 lines ][m[H[0;7m  GNU nano 3.2                            /home/pi/docker_images/.git/COMMIT_EDITMSG                                       [1;122H[m[38d[0;7m^G[m Get Help    [0;7m^O[m Write Out   [0;7m^W[m Where Is    [0;7m^K[m Cut Text    [0;7m^J[m Justify     [0;7m^C[m Cur Pos     [0;7mM-U[m Undo[106G[0;7mM-A[m Mark Text[39d[0;7m^X[m Exit[39;16H[0;7m^R[m Read File   [0;7m^\[m Replace     [0;7m^U[m Uncut Text  [0;7m^T[m To Spell    [0;7m^_[m Go To Line  [0;7mM-E[m Redo[106G[0;7mM-6[m Copy TextMM[4d[39;49m[36m# Please enter the commit message for your changes. Lines starting[5d# with '#' will be ignored, and an empty message aborts the commit.[6d#[7d# On branch master[8d# Your branch is up to date with 'origin/master'.[9d#[10d# Changes to be committed:[11d#       modified:   func_collection.sh[12d#       modified:   install-and-configure-docker.sh[13d#[14d# Untracked files:[15d#       typescript[16d#[3d[39m[m[34h[?25h[?25l[1;114H[0;7mModified[m[3dA[34h[?25h[?25ld[34h[?25h[?25ld[34h[?25h[?25l [34h[?25h[?25lf[34h[?25h[?25lu[34h[?25h[?25ln[34h[?25h[?25lc[34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25lf[34h[?25h[?25lu[34h[?25h[?25ln[34h[?25h[?25lc[34h[?25h[?25lt[34h[?25h[?25li[34h[?25h[?25lo[34h[?25h[?25ln[34h[?25h[?25l [34h[?25h[?25lE[34h[?25h[?25lx[34h[?25h[?25li[34h[?25h[?25lt[34h[?25h[?25l_[37d[K[3;19H[34h[?25h[?25la[34h[?25h[?25ln[34h[?25h[?25ld[34h[?25h[?25l_[34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25li[34h[?25h[?25lf[34h[?25h[?25l_[34h[?25h[?25lf[34h[?25h[?25li[34h[?25h[?25ll[34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25la[34h[?25h[?25li[34h[?25h[?25ll[34h[?25h[?25le[34h[?25h[?25ld[34h[?25h[?25l [34h[?25h[?25la[34h[?25h[?25ln[34h[?25h[?25ld[34h[?25h[?25l [34h[?25h[?25lE[34h[?25h[?25lv[34h[?25h[?25la[34h[?25h[?25ll[34h[?25h[?25l_[34h[?25h[?25la[34h[?25h[?25ln[34h[?25h[?25ld[34h[?25h[?25l_[34h[?25h[?25lE[34h[?25h[?25lx[34h[?25h[?25li[34h[?25h[?25lt[34h[?25h[?25l_[34h[?25h[?25li[34h[?25h[?25lf[34h[?25h[?25l [34h[?25h[?25l+[34h[?25h[?25l [34h[?25h[?25l[34h[?25h[?25l_[34h[?25h[?25lf[34h[?25h[?25la[34h[?25h[?25li[34h[?25h[?25ll[34h[?25h[?25le[34h[?25h[?25ld[34h[?25h[?25l [34h[?25h[?25li[34h[?25h[?25ln[34h[?25h[?25l [34h[?25h[?25lf[34h[?25h[?25lu[34h[?25h[?25ln[34h[?25h[?25lc[34h[?25h[?25l_[34h[?25h[?25le[34h[?25h[?25l [34h[?25h[?25lc[34h[?25h[?25lo[34h[?25h[?25ll[34h[?25h[?25ll[34h[?25h[?25le[34h[?25h[?25lc[34h[?25h[?25lt[34h[?25h[?25li[34h[?25h[?25lo[34h[?25h[?25ln[34h[?25h[?25l.[34h[?25h[?25ls[34h[?25h[?25lh[34h[?25h[?25l [34h[?25h[?25lt[34h[?25h[?25lo[34h[?25h[?25l [34h[?25h[?25lr[34h[?25h[?25le[34h[?25h[?25lp[34h[?25h[?25ll[34h[?25h[?25la[34h[?25h[?25lc[34h[?25h[?25le[34h[?25h[?25l [34h[?25h[?25la[34h[?25h[?25ll[34h[?25h[?25ll[34h[?25h[?25l [34h[?25h[?25l'[34h[?25h[?25li[34h[?25h[?25lf[34h[?25h[?25l'[34h[?25h[?25l [34h[?25h[?25l,[34h[?25h[?25l [34h[?25h[?25l'[34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25le[34h[?25h[?25ll[34h[?25h[?25ls[34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l[34h[?25h[?25l [34h[?25h[?25l;[34h[?25h[?25lt[34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25lt[34h[?25h[?25lh[34h[?25h[?25le[34h[?25h[?25ln[34h[?25h[?25l'[34h[?25h[?25l [34h[?25h[?25lb[34h[?25h[?25ll[34h[?25h[?25lo[34h[?25h[?25lc[34h[?25h[?25lk[34h[?25h[?25l [34h[?25h[?25lu[34h[?25h[?25ls[34h[?25h[?25le[34h[?25h[?25ld[34h[?25h[?25l [34h[?25h[?25li[34h[?25h[?25ln[34h[?25h[?25l [34h[?25h[?25l7[4;37r8[4dM[1;39r[4;1H[34h[?25h[?25lf[34h[?25h[?25lu[34h[?25h[?25ln[34h[?25h[?25lc[34h[?25h[?25l_[34h[?25h[?25lc[34h[?25h[?25ll[34h[?25h[?25l [34h[?25h[?25lo[34h[?25h[?25ll[34h[?25h[?25ll[34h[?25h[?25le[34h[?25h[?25lc[34h[?25h[?25lt[34h[?25h[?25li[34h[?25h[?25lo[34h[?25h[?25ln[34h[?25h[?25l.[34h[?25h[?25ls[34h[?25h[?25lh[34h[?25h[?25la[34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25la[34h[?25h[?25ln[34h[?25h[?25ld[34h[?25h[?25l [34h[?25h[?25li[34h[?25h[?25ln[34h[?25h[?25ls[34h[?25h[?25lt[34h[?25h[?25la[34h[?25h[?25l;[34h[?25h[?25ll[34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25ll[34h[?25h[?25ll[34h[?25h[?25l-[34h[?25h[?25la[34h[?25h[?25ln[34h[?25h[?25ld[34h[?25h[?25l-[34h[?25h[?25lc[34h[?25h[?25lo[34h[?25h[?25ln[34h[?25h[?25lf[34h[?25h[?25li[34h[?25h[?25lg[34h[?25h[?25lu[34h[?25h[?25lr[34h[?25h[?25le[34h[?25h[?25l-[34h[?25h[?25ld[34h[?25h[?25lo[34h[?25h[?25lc[34h[?25h[?25lk[34h[?25h[?25le[34h[?25h[?25lr[34h[?25h[?25l.[34h[?25h[?25ls[34h[?25h[?25lh[34h[?25h[?25l.[34h[?25h[?25l[38;16H               [0;7mM-D[m DOS Format                [0;7mM-A[m Append               [93G[0;7mB[m Backup File[K[39;2H[0;7mC[m Cancel[16G               [0;7mM-M[m Mac Format                [0;7mM-P[m Prepend                   [0;7m^T[m To Files[KMM[0;7mFile Name to Write: /home/pi/docker_images/.git/COMMIT_EDITMSG                                                             [37;1H[m[37;63H[34h[?25h[?25l[K[1;122H[1;114H[0;7m        [m[37;53H[0;7m[ Wrote 15 lines ][m[38;16H[0;7m^O[m Write Out   [0;7m^W[m Where Is    [0;7m^K[m Cut Text    [0;7m^J[m Justify     [0;7m^C[m Cur Pos[93G[0;7mU[m Undo       [0;7mM-A[m Mark Text[39;2H[0;7mX[m Exit  [16G[0;7m^R[m Read File   [0;7m^\[m Replace     [0;7m^U[m Uncut Text  [0;7m^T[m To Spell    [0;7m^_[m Go To Line  [0;7mM-E[m Redo       [0;7mM-6[m Copy TextMM[4;56H[34h[?25h[?25l[38;16H               [0;7mM-D[m DOS Format                [0;7mM-A[m Append               [93G[0;7mB[m Backup File[K[39;2H[0;7mC[m Cancel[16G               [0;7mM-M[m Mac Format                [0;7mM-P[m Prepend                   [0;7m^T[m To Files[KMM[0;7mFile Name to Write: /home/pi/docker_images/.git/COMMIT_EDITMSG                                                             [37;1H[m[37;63H[34h[?25h[?25l[K[1;122H[37;53H[0;7m[ Wrote 15 lines ][m[38;16H[0;7m^O[m Write Out   [0;7m^W[m Where Is    [0;7m^K[m Cut Text    [0;7m^J[m Justify     [0;7m^C[m Cur Pos[93G[0;7mU[m Undo       [0;7mM-A[m Mark Text[39;2H[0;7mX[m Exit  [16G[0;7m^R[m Read File   [0;7m^\[m Replace     [0;7m^U[m Uncut Text  [0;7m^T[m To Spell    [0;7m^_[m Go To Line  [0;7mM-E[m Redo       [0;7mM-6[m Copy TextMM[4;56H[34h[?25h[?25l[37d[J[39;123H[34h[?25h[39;1H[?1049l[?1l>[K[master 46dd77f] Add function Exit_if_failed and Eval_and_Exit_if_failed in func_collection.sh to replace all 'if ; then' block used in func_collection.sh and install-and-configure-docker.sh.
 2 files changed, 59 insertions(+), 26 deletions(-)
[01;32mpi@raspberrypi[00m:[01;34m~/docker_images $[00m vi install-and-configure-docker.sh 
[?1049h[?1h=[1;39r[23m[24m[0m[H[J[?25l[39;1H"install-and-configure-docker.sh" 81 lines, 898964 characters[1;1H#!/usr/bin/env bash

source ./func_collection.sh

Exit_if_failed $UID "Does not have enough permission, please run as root"
#if [ $UID -ne 0 ]; then
#    echo "Does not have enough permission, please run as root"
#    exit 1
#fi

# Install docker-ce using distro's software manager
if grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[16;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[19;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    Eval_and_Exit_if_failed "[ $? -ne 1 ]" "Failed to verify the fingerprint"
    #if [ $? -eq 1 ]; then
    #    echo "Failed to verify the fingerprint"
    #    exit 1
    #fi[27;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    Exit_if_failed $? "Failed to add the docker debian source"
    #if [ $? -ne 0 ]; then
    #    echo "Failed to add the docker debian source"
    #    exit 1
    #fi[35;5Hecho -e "\nInstalling docker-ce"
    apt update
    apt install docker-ce docker-ce-cli containerd.io[1;1H[34h[?25h












[?25l[15;38r[15;1H[L[1;39r[39;1H[K[15;1H[34h[?25h[?25l[8C[34h[?25h[?25l[34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25li[34h[?25h[?25lf[34h[?25h[?25l [34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l [34h[?25h[?25lE[34h[?25h[?25lx[34h[?25h[?25li[34h[?25h[?25lt[34h[?25h[?25l_[34h[?25h[?25li[34h[?25h[?25lf[34h[?25h[?25l_[34h[?25h[?25lf[34h[?25h[?25la[34h[?25h[?25li[34h[?25h[?25ll[34h[?25h[?25le[34h[?25h[?25ld[34h[?25h[?25l [34h[?25h[?25l$[34h[?25h[?25l?[34h[?25h[?25l [34h[?25h[?25l"[34h[?25h[?25lF[34h[?25h[?25la[34h[?25h[?25li[34h[?25h[?25ll[34h[?25h[?25le[34h[?25h[?25ld[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l\[34h[?25h[?25ln[34h[?25h[?25lF[34h[?25h[?25la[34h[?25h[?25li[34h[?25h[?25ll[34h[?25h[?25le[34h[?25h[?25ld[34h[?25h[?25l [34h[?25h[?25lo[34h[?25h[?25l [34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25lt[34h[?25h[?25lo[34h[?25h[?25l [34h[?25h[?25li[34h[?25h[?25ln[34h[?25h[?25ls[34h[?25h[?25lt[34h[?25h[?25la[34h[?25h[?25ll[34h[?25h[?25ll[34h[?25h[?25l [34h[?25h[?25lt[34h[?25h[?25lh[34h[?25h[?25le[34h[?25h[?25l [34h[?25h[?25ld[34h[?25h[?25le[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25ls[34h[?25h[?25lo[34h[?25h[?25lf[34h[?25h[?25lt[34h[?25h[?25lw[34h[?25h[?25la[34h[?25h[?25lr[34h[?25h[?25le[34h[?25h[?25ls[34h[?25h[?25l"[34h[?25h[?25l[39;1H:[34h[?25hw[?25l"install-and-configure-docker.sh" 82 lines, 898964 characters written[15;57H[34h[?25h[14;57H[13;57H[13;48H[14;44H[15;44Hthe [?25lnsoftwares"[15;49H[34h[?25h[?25lwsoftwares"[15;50H[34h[?25h[?25l[34h[?25h[?25le[34h[?25h[?25lcsoftwares"[15;51H[34h[?25h[?25lesoftwares"[15;52H[34h[?25h[?25lssoftwares"[15;53H[34h[?25h[?25lssoftwares"[15;54H[34h[?25h[?25lasoftwares"[15;55H[34h[?25h[?25lrsoftwares"[15;56H[34h[?25h[?25lysoftwares"[15;57H[34h[?25h[?25l softwares"[15;58H[34h[?25h[?25l[39;1H[K[39;1H:[34h[?25hw[?25l"install-and-configure-docker.sh" 82 lines, 898964 characters written[15;57H[34h[?25h[14;57H[13;57H[12;55H[13;57H[13;48H[?25l[34h[?25h[?25l[7m [34h[?25h[?25lfor [34h[?25h[?25ladding [34h[?25h[?25ldocker[34h[?25h[?25l-[34h[?25h[?25lce [34h[?25h[?25lapt [34h[?25h[?25lsource [34h[?25h[?25lwith [34h[?25h[?25lgpg [34h[?25h[?25lkey[34h[?25h[?25l[0my[34h[?25h[?25l[13;43H for adding docker-ce apt source with gpg ke[13;43H[34h[?25h[14;43H[15;43H
[15;67H[?25l for adding docker-ce apt source with gpg key"[34h[?25h[?25l[39;1H[K[39;1H:[34h[?25hw[?25l"install-and-configure-docker.sh" 82 lines, 898964 characters written[15;111H[34h[?25h
[17;59H[18;75H
[20;47H[21;107H[22;77H[23;26H[24;48H[25;15H[26;7H
[28;43H[29;95H[30;62H[31;26H[32;54H[33;15H[?25l[39;1H[K[39;1H:[34h[?25hjj[?25l[39;3H[K[3[?25h[?25le[34h[?25h[?25ld[34h[?25h[?25l [34h[?25h[?25li[34h[?25h[?25ln[34h[?25h[?25l [34h[?25h[?25l7[4;37r8[4dM[1;39r[4;1H[34h[?25h[?25lf[34h[?25h[?25lu[34h[?25h[?25ln[34h[?25h[?25lc[34h[?25h[?25l_[34h[?25h[?25lc[34h[?25h[?25ll[34h[?25h[?25l [34h[?25h[?25lo[34h[?25h[?25ll[34h[?25h[?25ll[34h[?25h[?25le[34h[?25h[?25lc[34h[?25h[?25lt[34h[?25h[?25li[34h[?25h[?25lo[34h[?25h[?25ln[34h[?25h[?25l.[34h[?25h[?25ls[34h[?25h[?25lh[34h[?25h[?25la[34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25la[34h[?25h[?25ln[34h[?25h[?25ld[34h[?25h[?25l [34h[?25h[?25li[34h[?25h[?25ln[34h[?25h[?25ls[34h[?25h[?25lt[34h[?25h[?25la[34h[?25h[?25l;[34h[?25h[?25ll[34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25ll[34h[?25h[?25ll[34h[?25h[?25l-[34h[?25h[?25la[34h[?25h[?25ln[34h[?25h[?25ld[34h[?25h[?25l-[34h[?25h[?25lc[34h[?25h[?25lo[34h[?25h[?25ln[34h[?25h[?25lf[34h[?25h[?25li[34h[?25h[?25lg[34h[?25h[?25lu[34h[?25h[?25lr[34h[?25h[?25le[34h[?25h[?25l-[34h[?25h[?25ld[34h[?25h[?25lo[34h[?25h[?25lc[34h[?25h[?25lk[34h[?25h[?25le[34h[?25h[?25lr[34h[?25h[?25l.[34h[?25h[?25ls[34h[?25h[?25lh[34h[?25h[?25l.[34h[?25h[?25l[38;16H               [0;7mM-D[m DOS Format                [0;7mM-A[m Append               [93G[0;7mB[m Backup File[K[39;2H[0;7mC[m Cancel[16G               [0;7mM-M[m Mac Format                [0;7mM-P[m Prepend                   [0;7m^T[m To Files[KMM[0;7mFile Name to Write: /home/pi/docker_images/.git/COMMIT_EDITMSG                                                             [37;1H[m[37;63H[34h[?25h[?25l[K[1;122H[1;114H[0;7m        [m[37;53H[0;7m[ Wrote 15 lines ][m[38;16H[0;7m^O[m Write Out   [0;7m^W[m Where Is    [0;7m^K[m Cut Text    [0;7m^J[m Justify     [0;7m^C[m Cur Pos[93G[0;7mU[m Undo       [0;7mM-A[m Mark Text[39;2H[0;7mX[m Exit  [16G[0;7m^R[m Read File   [0;7m^\[m Replace     [0;7m^U[m Uncut Text  [0;7m^T[m To Spell    [0;7m^_[m Go To Line  [0;7mM-E[m Redo       [0;7mM-6[m Copy TextMM[4;56H[34h[?25h[?25l[38;16H               [0;7mM-D[m DOS Format                [0;7mM-A[m Append               [93G[0;7mB[m Backup File[K[39;2H[0;7mC[m Cancel[16G               [0;7mM-M[m Mac Format                [0;7mM-P[m Prepend                   [0;7m^T[m To Files[KMM[0;7mFile Name to Write: /home/pi/docker_images/.git/COMMIT_EDITMSG                                                             [37;1H[m[37;63H[34h[?25h[?25l[K[1;122H[37;53H[0;7m[ Wrote 15 lines ][m[38;16H[0;7m^O[m Write Out   [0;7m^W[m Where Is    [0;7m^K[m Cut Text    [0;7m^J[m Justify     [0;7m^C[m Cur Pos[93G[0;7mU[m Undo       [0;7mM-A[m Mark Text[39;2H[0;7mX[m Exit  [16G[0;7m^R[m Read File   [0;7m^\[m Replace     [0;7m^U[m Uncut Text  [0;7m^T[m To Spell    [0;7m^_[m Go To Line  [0;7mM-E[m Redo       [0;7mM-6[m Copy TextMM[4;56H[34h[?25h[?25l[37d[J[39;123H[34h[?25h[39;1H[?1049l[?1l>[K[master 46dd77f] Add function Exit_if_failed and Eval_and_Exit_if_failed in func_collection.sh to replace all 'if ; then' block used in func_collection.sh and install-and-configure-docker.sh.
 2 files changed, 59 insertions(+), 26 deletions(-)
[01;32mpi@raspberrypi[00m:[01;34m~/docker_images $[00m vi install-and-configure-docker.sh 
[?1049h[?1h=[1;39r[23m[24m[0m[H[J[?25l[39;1H"install-and-configure-docker.sh" 81 lines, 898964 characters[1;1H#!/usr/bin/env bash

source ./func_collection.sh

Exit_if_failed $UID "Does not have enough permission, please run as root"
#if [ $UID -ne 0 ]; then
#    echo "Does not have enough permission, please run as root"
#    exit 1
#fi

# Install docker-ce using distro's software manager
if grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[16;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[19;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    Eval_and_Exit_if_failed "[ $? -ne 1 ]" "Failed to verify the fingerprint"
    #if [ $? -eq 1 ]; then
    #    echo "Failed to verify the fingerprint"
    #    exit 1
    #fi[27;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    Exit_if_failed $? "Failed to add the docker debian source"
    #if [ $? -ne 0 ]; then
    #    echo "Failed to add the docker debian source"
    #    exit 1
    #fi[35;5Hecho -e "\nInstalling docker-ce"
    apt update
    apt install docker-ce docker-ce-cli containerd.io[1;1H[34h[?25h












[?25l[15;38r[15;1H[L[1;39r[39;1H[K[15;1H[34h[?25h[?25l[8C[34h[?25h[?25l[34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25li[34h[?25h[?25lf[34h[?25h[?25l [34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l [34h[?25h[?25lE[34h[?25h[?25lx[34h[?25h[?25li[34h[?25h[?25lt[34h[?25h[?25l_[34h[?25h[?25li[34h[?25h[?25lf[34h[?25h[?25l_[34h[?25h[?25lf[34h[?25h[?25la[34h[?25h[?25li[34h[?25h[?25ll[34h[?25h[?25le[34h[?25h[?25ld[34h[?25h[?25l [34h[?25h[?25l$[34h[?25h[?25l?[34h[?25h[?25l [34h[?25h[?25l"[34h[?25h[?25lF[34h[?25h[?25la[34h[?25h[?25li[34h[?25h[?25ll[34h[?25h[?25le[34h[?25h[?25ld[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l\[34h[?25h[?25ln[34h[?25h[?25lF[34h[?25h[?25la[34h[?25h[?25li[34h[?25h[?25ll[34h[?25h[?25le[34h[?25h[?25ld[34h[?25h[?25l [34h[?25h[?25lo[34h[?25h[?25l [34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25lt[34h[?25h[?25lo[34h[?25h[?25l [34h[?25h[?25li[34h[?25h[?25ln[34h[?25h[?25ls[34h[?25h[?25lt[34h[?25h[?25la[34h[?25h[?25ll[34h[?25h[?25ll[34h[?25h[?25l [34h[?25h[?25lt[34h[?25h[?25lh[34h[?25h[?25le[34h[?25h[?25l [34h[?25h[?25ld[34h[?25h[?25le[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25ls[34h[?25h[?25lo[34h[?25h[?25lf[34h[?25h[?25lt[34h[?25h[?25lw[34h[?25h[?25la[34h[?25h[?25lr[34h[?25h[?25le[34h[?25h[?25ls[34h[?25h[?25l"[34h[?25h[?25l[39;1H:[34h[?25hw[?25l"install-and-configure-docker.sh" 82 lines, 898964 characters written[15;57H[34h[?25h[14;57H[13;57H[13;48H[14;44H[15;44Hthe [?25lnsoftwares"[15;49H[34h[?25h[?25lwsoftwares"[15;50H[34h[?25h[?25l[34h[?25h[?25le[34h[?25h[?25lcsoftwares"[15;51H[34h[?25h[?25lesoftwares"[15;52H[34h[?25h[?25lssoftwares"[15;53H[34h[?25h[?25lssoftwares"[15;54H[34h[?25h[?25lasoftwares"[15;55H[34h[?25h[?25lrsoftwares"[15;56H[34h[?25h[?25lysoftwares"[15;57H[34h[?25h[?25l softwares"[15;58H[34h[?25h[?25l[39;1H[K[39;1H:[34h[?25hw[?25l"install-and-configure-docker.sh" 82 lines, 898964 characters written[15;57H[34h[?25h[14;57H[13;57H[12;55H[13;57H[13;48H[?25l[34h[?25h[?25l[7m [34h[?25h[?25lfor [34h[?25h[?25ladding [34h[?25h[?25ldocker[34h[?25h[?25l-[34h[?25h[?25lce [34h[?25h[?25lapt [34h[?25h[?25lsource [34h[?25h[?25lwith [34h[?25h[?25lgpg [34h[?25h[?25lkey[34h[?25h[?25l[0my[34h[?25h[?25l[13;43H for adding docker-ce apt source with gpg ke[13;43H[34h[?25h[14;43H[15;43H
[15;67H[?25l for adding docker-ce apt source with gpg key"[34h[?25h[?25l[39;1H[K[39;1H:[34h[?25hw[?25l"install-and-configure-docker.sh" 82 lines, 898964 characters written[15;111H[34h[?25h
[17;59H[18;75H
[20                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                oot"
    exit 1
fi

# Install docker-ce using distro's software manager
if grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[16;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[19;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    if [ $? -eq 1 ]; then[22;9Hecho "Failed to verify the fingerprint"[23;9Hexit 1
    fi[26;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable" || \
    (echo "Failed to add the docker debian source"; exit 1)[30;5Hecho -e "\nInstalling docker-ce"
    (apt update && apt install docker-ce docker-ce-cli containerd.io) || \
    (echo "Failed to install docker-ce"; exit 1)[34;5Hecho -e "\nInstall completed"
else
    echo "Distribution not supported"
    exit 1
fi[1;1H[34h[?25h



















[29;1H[28;59H"[?25l exit 1)[28;59H[K[28;51H[34h[?25h[?25l& exit 1)[28;52H[34h[?25h[?25l& exit 1)[28;53H[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l [34h[?25h[?25l&[34h[?25h[?25l& exit 1)[28;54H[34h[?25h[?25l[39;1H[K[39;1H:[34h[?25hw[?25l"install-and-configure-docker.sh" 68 lines, 898964 characters written[28;53H[34h[?25h
[30;36H[31;53H[32;48H
[32;48H"[?25l exit 1)[32;48H[K[32;40H[34h[?25h[?25l  exit 1)[32;41H[34h[?25h[?25l& exit 1)[32;42H[34h[?25h[?25l& exit 1)[32;43H[34h[?25h[?25l[39;1H[K[39;1H:[34h[?25hw[?25l"install-and-configure-docker.sh" 68 lines, 898964 characters written[32;42H[34h[?25h[?25l[39;1H[K[39;1H:[34h[?25hwq[?25l"install-and-configure-docker.sh" 68 lines, 898964 characters written
[?1l>[34h[?25h[?1049l[01;32mpi@raspberrypi[00m:[01;34m~/docker_images $[00m sr[Kcript
Script started, file is typescript
[01;32mpi@raspberrypi[00m:[01;34m~/docker_images $[00m sudo ./install-and-configure-docker.sh 

Install necessary softwares for adding docker-ce apt source with gpg key
[33m0% [Working][0mm[33m0% [Connecting to raspbian.raspberrypi.org (2a00:1098:0:80:1000:75:0:3)] [Waiting for headers][0m                                                                                              Hit:1 http://archive.raspberrypi.org/debian buster InRelease
[33m                                                                                              0% [Waiting for headers][0m                        Hit:2 http://raspbian.raspberrypi.org/raspbian buster InRelease
[33m                        0% [Working][0m[33m0% [Working][0m[33m20% [Working][0m             Reading package lists... 0%Reading package lists... 0%Reading package lists... 0%Reading package lists... 44%Reading package lists... 72%Reading package lists... 97%Reading package lists... 97%Reading package lists... 97%Reading package lists... 97%Reading package lists... 98%Reading package lists... 98%Reading package lists... 98%Reading package lists... 98%Reading package lists... 99%Reading package lists... 99%Reading package lists... 99%Reading package lists... Done
Building dependency tree... 0%Building dependency tree... 0%Building dependency tree... 0%Building dependency tree... 50%Building dependency tree... 50%Building dependency tree       
Reading state information... 0%Reading state information... 0%Reading state information... Done
All packages are up to date.
Reading package lists... 0%Reading package lists... 100%Reading package lists... Done
scw erBuilding dependency tree... 0%Building dependency tree... 0%Building dependency tree... 50%Building dependency tree... 50%sBuilding dependency tree... 97%Building dependency tree       
Reading state information... 0%Reading state information... 0%Reading state information... Done
apt-transport-https is already the newest version (1.8.2).
ca-certificates is already the newest version (20190110).
curl is already the newest version (7.64.0-4).
gnupg2 is already the newest version (2.2.12-1+rpi1).
software-properties-common is already the newest version (0.96.20.2-2).
0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.

Installing fingerprint for docker-ce source
OK

Verifing fingerprint of the key

Adding docker-ce apt source
Traceback (most recent call last):
  File "/usr/bin/add-apt-repository", line 95, in <module>
    sp = SoftwareProperties(options=options)
  File "/usr/lib/python3/dist-packages/softwareproperties/SoftwareProperties.py", line 109, in __init__
    self.reload_sourceslist()
  File "/usr/lib/python3/dist-packages/softwareproperties/SoftwareProperties.py", line 599, in reload_sourceslist
    self.distro.get_sources(self.sourceslist)    
  File "/usr/lib/python3/dist-packages/aptsources/distro.py", line 93, in get_sources
    (self.id, self.codename))
aptsources.distro.NoDistroTemplateException: Error: could not find a distribution template for Raspbian/buster
Failed to add the docker debian source

Installing docker-ce
[33m0% [Working][0m[33m0% [Connecting to raspbian.raspberrypi.org (2a00:1098:0:80:1000:75:0:3)] [Waiting for headers][0m                                                                                              Hit:1 http://archive.raspberrypi.org/debian buster InRelease
[33m                                                                                              0% [Waiting for headers][0m                        Hit:2 http://raspbian.raspberrypi.org/raspbian buster InRelease
[33m                        0% [Working][0m[33m0% [Working][0m[33m20% [Working][0m             Reading package lists... 0%Reading package lists... 0%Reading package lists... 0%Reading package lists... 37%Reading package lists... 65%Reading package lists... 94%Reading package lists... 97%Reading package lists... 97%Reading package lists... 97%Reading package lists... 97%Reading package lists... 98%Reading package lists... 98%Reading package lists... 98%Reading package lists... 98%Reading package lists... 99%Reading package lists... 99%Reading package lists... Done
Building dependency tree... 0%Building dependency tree... 0%Building dependency tree... 0%Building dependency tree... 50%Building dependency tree... 50%Building dependency tree       
Reading state information... 0%Reading state information... 0%Reading state information... Done
All packages are up to date.
Reading package lists... 0%Reading package lists... 100%Reading package lists... Done
Building dependency tree... 0%Building dependency tree... 0%Building dependency tree... 50%Building dependency tree... 50%Building dependency tree       
Reading state information... 0%Reading state information... 0%Reading state information... Done
Package docker-ce is not available, but is referred to by another package.
This may mean that the package is missing, has been obsoleted, or
is only available from another source

E: Package 'docker-ce' has no installation candidate
E: Unable to locate package docker-ce-cli
E: Unable to locate package containerd.io
E: Couldn't find any package by glob 'containerd.io'
E: Couldn't find any package by regex 'containerd.io'
Failed to install docker-ce

Install completed

Verifing docker install
./func_collection.sh: line 3: docker: command not found
./func_collection.sh: line 5: docker: command not found

Docker is not installed properly, something went wrong
[01;32mpi@raspberrypi[00m:[01;34m~/docker_images $[00m mscw ers[K[K[K[K[K[K[K[Ki[Kvi install-and-configure-docker.sh 
[?1049h[?1h=[1;39r[23m[24m[0m[H[J[?25l[39;1H"install-and-configure-docker.sh" 68 lines, 898964 characters[1;1H#!/usr/bin/env bash

source ./func_collection.sh

if [ $UID -ne 0 ]; then
    echo "Does not have enough permission, please run as root"
    exit 1
fi

# Install docker-ce using distro's software manager
if grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[16;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[19;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    if [ $? -eq 1 ]; then[22;9Hecho "Failed to verify the fingerprint"[23;9Hexit 1
    fi[26;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable" || \
    (echo "Failed to add the docker debian source" && exit 1)[30;5Hecho -e "\nInstalling docker-ce"
    (apt update && apt install docker-ce docker-ce-cli containerd.io) || \
    (echo "Failed to install docker-ce" && exit 1)[34;5Hecho -e "\nInstall completed"
else
    echo "Distribution not supported"
    exit 1
fi[1;1H[34h[?25h

























[26;1H

[27;100H[?25l|| \[27;100H[K[27;96H[34h[?25h[?25l| \[27;99H[K[27;96H[34h[?25h[?25l \[27;98H[K[27;96H[34h[?25h[?25l\[27;97H[K[27;96H[34h[?25h[?25l[27;96H[K[27;95H[34h[?25h[28;61H    [?25l[28;38r[28;1H[L[1;39r[39;1H[K[28;1H[34h[?25h[?25l[8C[34h[?25h[?25l[34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25li[34h[?25h[?25lf[34h[?25h[?25l [34h[?25h[?25l[[34h[?25h[?25l [34h[?25h[?25l#[34h[?25h[?25l[34h[?25h[?25l$[34h[?25h[?25l?[34h[?25h[?25l [34h[?25h[?25l-[34h[?25h[?25ln[34h[?25h[?25le[34h[?25h[?25l [34h[?25h[?25l0[34h[?25h[?25l][34h[?25h[?25l[34h[?25h[?25l [34h[?25h[?25l][34h[?25h[?25l;[34h[?25h[?25l [34h[?25h[?25lt[34h[?25h[?25lh[34h[?25h[?25le[34h[?25h[?25ln[34h[?25h[29;25H[?25l[30;38r[30;1H[L[1;39r[30;1H[34h[?25h[?25lf[34h[?25h[?25l[34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25lf[34h[?25h[?25li[34h[?25h[?25l[30;38r[30;1H[L[1;39r[30;1HA[34h[?25h[?25l[30;38r[38;1H
[1;39r[38;5Hecho "Distribution not supported"[30;5H[34h[?25h[29;5H[?25lecho "Failed to add the docker debian source" && exit 1)[29;61H[K[29;5H[34h[?25h[?25l echo "Failed to add the docker debian source" && exit 1)     [34h[?25h[?25l echo "Failed to add the docker debian source" && exit 1)[29;7H[34h[?25h[?25l echo "Failed to add the docker debian source" && exit 1)[29;8H[34h[?25h[?25l echo "Failed to add the docker debian source" && exit 1)[29;9H[34h[?25h[30;6H[29;64H[?25l[29;64H[K[29;63H[34h[?25h[?25l&& exit 1[29;63H[K[29;54H[34h[?25h[?25l& exit 1[29;62H[K[29;54H[34h[?25h[?25l exit 1[29;61H[K[29;54H[34h[?25h[?25lexit 1[29;60H[K[29;54H[34h[?25h[?25l[30;38r[30;1H[L[1;39r[29;54H[K[30;1Hexit 1[34h[?25h[?25l exit 1 [34h[?25h[?25l exit 1  [34h[?25h[?25l exit 1   [34h[?25h[?25l exit 1    [34h[?25h[?25l exit 1[34h[?25h[?25l exit 1[34h[?25h[?25l exit 1[34h[?25h[?25l exit 1[34h[?25h[?25l[39;1H:[34h[?25hw[?25l"install-and-configure-docker.sh" 71 lines, 898964 characters written[30;8H[34h[?25h[29;8H[28;8H[27;8H[26;8H[25;1H[24;6H[23;8H[22;8H[21;8H[20;8H[19;8H[18;1H[17;8H[16;8H[15;1H[14;8H[13;8H[12;8H[11;8H[10;8H[9;1H[8;2H[7;8H[6;8H[5;8H[4;1H[23m[24m[0m[H[J[?25l[1;1H#!/usr/bin/env bash

source ./func_collection.sh

if [ $UID -ne 0 ]; then
    echo "Does not have enough permission, please run as root"
    exit 1
fi

# Install docker-ce using distro's software manager
if grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[16;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[19;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    if [ $? -eq 1 ]; then[22;9Hecho "Failed to verify the fingerprint"[23;9Hexit 1
    fi[26;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    if [ $? -ne 0 ]; then[29;9Hecho "Failed to add the docker debian source"[30;9Hexit 1
    fi[33;5Hecho -e "\nInstalling docker-ce"
    (apt update && apt install docker-ce docker-ce-cli containerd.io) || \
    (echo "Failed to install docker-ce" && exit 1)[37;5Hecho -e "\nInstall completed"
else
    echo "Distribution not supported"[4;1H[34h[?25h[23m[24m[0m[H[J[?25l[1;1H#!/usr/bin/env bash

source ./func_collection.sh

if [ $UID -ne 0 ]; then
    echo "Does not have enough permission, please run as root"
    exit 1
fi

# Install docker-ce using distro's software manager
if grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[16;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[19;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    if [ $? -eq 1 ]; then[22;9Hecho "Failed to verify the fingerprint"[23;9Hexit 1
    fi[26;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    if [ $? -ne 0 ]; then[29;9Hecho "Failed to add the docker debian source"[30;9Hexit 1
    fi[33;5Hecho -e "\nInstalling docker-ce"
    (apt update && apt install docker-ce docker-ce-cli containerd.io) || \
    (echo "Failed to install docker-ce" && exit 1)[37;5Hecho -e "\nInstall completed"
else[4;1H[34h[?25h[5;8H[6;8H[7;8H
f
[10;8H[11;8H[23m[24m[0m[H[J[?25l[1;1H#!/usr/bin/env bash

source ./func_collection.sh

if [ $UID -ne 0 ]; then
    echo "Does not have enough permission, please run as root"
    exit 1
fi

# Install docker-ce using distro's software manager
if grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[16;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[19;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    if [ $? -eq 1 ]; then[22;9Hecho "Failed to verify the fingerprint"[23;9Hexit 1
    fi[26;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    if [ $? -ne 0 ]; then[29;9Hecho "Failed to add the docker debian source"[30;9Hexit 1
    fi[33;5Hecho -e "\nInstalling docker-ce"
    (apt update && apt install docker-ce docker-ce-cli containerd.io) || \
    (echo "Failed to install docker-ce" && exit 1)[37;5Hecho -e "\nInstall completed"
else
    echo "Distribution not supported"
    exit 1
fi[11;8H[34h[?25h[12;8H[13;8H[14;8H
[16;8H[17;8H
[17;8H[16;8H[15;1H[14;8H[13;8H[12;8H[11;8H[10;8H[9;1H[8;2H[7;8H[6;8H[5;8H[?25l[42;1H:[34h[?25hsp func_c[34m^I[?25l[0m[42;11H[K[42;11H[34h[?25hollection.sh[?25l"func_collection.sh" [42;22H[K[42;22H15 lines, 898964 characters[1;1Hverify_docker_install() {
    echo -e "\nVerifing docker install"
    docker run --rm hello-world
    exit_status=$?
    docker rmi hello-world
    if [ $exit_status -ne 0 ]; then[6;36H[K[7;5H    echo -e "\nDocker is not installed properly, something went wrong"
        exit 1
    fi
}[10;3H[K[11;1H[K[12;1Hrestart_docker() {[12;19H[K[13;5Hecho -e "\nRestarting docker"
    /etc/init.d/docker restart[14;31H[K[15;1H}
[1m[34m~                                                                                                                          [17;1H~                                                                                                                          [18;1H~                                                                                                                          [19;1H~                                                                                                                          [20;1H~                                                                                                                          [0m[21;1H[1m[7mfunc_collection.sh                                                                                                         [0m[22;1Hsource ./func_collection.sh[22;28H[K[23;9H[K[24;1Hif [ $UID -ne 0 ]; then
    echo "Does not have enough permission, please run as root"[26;6Hxit 1[26;11H[K[27;1Hfi[27;5H[K[28;5H[K[29;1H# Install docker-ce using distro's software manager[29;52H[K[30;1Hif grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[34;5H[K[35;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[37;5H[K[38;1H    echo -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    if [ $? -eq 1 ]; then
[7minstall-and-configure-docker.sh                                                                                            [1;1H[34h[?25h













[?25l[0m[16;1H[K[21;20H[1m[7m[+][16;1H[34h[?25h[?25l[0m[17;1H[K[17;1H[34h[?25h[?25l[42;1H[K[42;1H:[34h[?25hw[?25l"func_collection.sh" 17 lines, 898964 characters written[21;20H[1m[7m   [17;1H[34h[?25h[0m[21;1H[7mfunc_collection.sh                                                                                                         [0m[41;1H[1m[7minstall-and-configure-docker.sh                                                                                            [24;8H[?25l[22;40r[0m[22;1H[9M[1;42r[32;9Hecho "Failed to verify the fingerprint"[33;9Hexit 1
    fi[36;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    if [ $? -ne 0 ]; then[39;9Hecho "Failed to add the docker debian source"[40;9Hexit 1[42;1H[K[24;5H[34h[?25h[?25l[22;40r[22;1H[9M[1;42r[32;5Hfi[34;5Hecho -e "\nInstalling docker-ce"
    (apt update && apt install docker-ce docker-ce-cli containerd.io) || \
    (echo "Failed to install docker-ce" && exit 1)[38;5Hecho -e "\nInstall completed"
else
    echo "Distribution not supported"[24;9H[34h[?25h[25;6H
[27;9H[28;9H[29;9H[30;9H[31;9H[32;6H
[34;9H[35;9H[?25l[22;40r[22;1H[9M[1;42r[32;5Hexit 1
fi

verify_docker_install

echo -e "\nStart to configure docker\nEnable usernamespace first"
sysctl >/dev/null 2>&1
if [ $? -eq 127 ]; then
    echo -e "\nCommand 'sysctl' not found and thus cannot enable user namespace"[35;1H[34h[?25h




[?25l[22;40r[40;1H
[1;42r[40;5Hexit 1[34h[?25h[?25l[22;40r[40;1H
[1;42r[40;1Hfi[34h[?25h[?25l[22;40r[40;1H
[1;42r[40;1Hsysctl -w kernel.unprivileged_userns_clone=1[34h[?25h[?25l[22;40r[40;1H
[1;42r[40;1H[34h[?25h[?25l[22;40r[40;1H
[1;42r[40;1Hecho -e "\nEnabling user remap feature in docker using user namespace"[34h[?25h[?25l[22;40r[40;1H
[1;42r[40;1Hecho -e '{\n    "userns-remap": "default"\n}'>/etc/docker/daemon.json[34h[?25h[?25l[22;40r[40;1H
[1;42r[40;1H[34h[?25h[?25l[22;40r[40;1H
[1;42r[40;1Hrestart_docker[34h[?25h[?25l[22;40r[40;1H
[1;42r[40;1H[34h[?25h[?25l[22;40r[40;1H
[1;42r[40;1Hecho -e "Verifing the user remap feature"[34h[?25h[?25l[22;40r[40;1H
[1;42r[40;1Hid dockremap[34h[?25h[?25l[22;40r[40;1H
[1;42r[40;1Hif [ $? -ne 0 ]; then[34h[?25h[?25l[22;40r[40;1H
[1;42r[40;5Hecho -e "\nDockerd failed to create dockremap user"[34h[?25h[?25l[22;40r[40;1H
[1;42r[40;5Hexit 1[34h[?25h[?25l[22;40r[40;1H
[1;42r[40;1Hfi[34h[?25h[?25l[22;40r[40;1H
[1;42r[40;1H[34h[?25h[39;1H[38;1H[37;1H[36;1H[35;1H[34;1H[33;1H[32;1H[31;1H[30;1H[29;1H[28;1H[27;1H[26;1H[25;1H[24;1H[23;1H[22;1H[?25l[22;40r[22;1H[L[1;42r[22;1Hecho -e "\nStart to configure docker\nEnable usernamespace first"[34h[?25h[?25l[22;40r[22;1H[L[1;42r[22;1H[34h[?25h[?25l[22;40r[22;1H[L[1;42r[22;1Hverify_docker_install[34h[?25h

















[?25l[22;40r[40;1H
[1;42r[40;5Hexit 1[34h[?25h[?25l[22;40r[40;1H
[1;42r[40;1Hfi[34h[?25h[?25l[22;40r[40;1H
[1;42r[40;1H[34h[?25h[21;1H[1m[7mfunc_collection.sh                                                                                                         [0m[41;1H[7minstall-and-configure-docker.sh                                                                                            [17;1H[16;1H[15;1H

[16;1H[15;1H[14;1H[13;1H[12;1H[11;1H[10;1H[9;1H[8;1H[7;1H[6;1H[5;1H[4;1H[3;1H[2;1H[1;1H















[16;1H[15;1H[14;1H


[?25l[0mE[21;20H[1m[7m[+][17;2H[34h[?25h[?25l[0mx[34h[?25h[?25li[34h[?25h[?25lt[34h[?25h[?25l_[34h[?25h[?25li[34h[?25h[?25lf[34h[?25h[?25l([34h[?25h[?25l)[34h[?25h[?25l [34h[?25h[?25l{[34h[?25h[?25l[18;1H[K[18;1H[34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25li[34h[?25h[?25lf[34h[?25h[?25l [34h[?25h[?25lA[18;5H[K[19;1H    if [19;8H[K[18;2H[34h[?25h[?25l
A[19;5H[K[20;1H    if [20;8H[K[18;2H[34h[?25h[?25l
    if
[1m[34m~                                                                                                                          [18;1H[34h[?25h[?25l[0m    if
[1m[34m~                                                                                                                          [18;5H[34h[?25h[17;5H[?25l[17;20r[0m[17;1H[L[1;42r[17;1H[34h[?25h[?25l#[34h[?25h[?25l [34h[?25h[?25lI[34h[?25h[?25lf[34h[?25h[?25l [34h[?25h[?25lm[34h[?25h[?25l[34h[?25h[?25l[[34h[?25h[?25l [34h[?25h[?25l$[34h[?25h[?25l1[34h[?25h[?25l [34h[?25h[?25l-[34h[?25h[?25ln[34h[?25h[?25le[34h[?25h[?25l [34h[?25h[?25l0[34h[?25h[?25l [34h[?25h[?25l][34h[?25h[?25l,[34h[?25h[?25l [34h[?25h[?25le[34h[?25h[?25lx[34h[?25h[?25li[34h[?25h[?25lt[34h[?25h[?25l [34h[?25h[?25lw[34h[?25h[?25li[34h[?25h[?25lt[34h[?25h[?25lh[34h[?25h[?25l [34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25le[34h[?25h[?25lc[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25lp[34h[?25h[?25lr[34h[?25h[?25li[34h[?25h[?25ln[34h[?25h[?25lt[34h[?25h[?25l [34h[?25h[?25l$[34h[?25h[?25l2[34h[?25h[?25l [34h[?25h[?25la[34h[?25h[?25ln[34h[?25h[?25ld[34h[?25h[?25l [34h[?25h[?25le[34h[?25h[?25lx[34h[?25h[?25li[34h[?25h[?25lt[34h[?25h[?25l.[34h[?25h[?25l[42;1H:[34h[?25hw[?25l"func_collection.sh" 19 lines, 898964 characters written[21;20H[1m[7m   [17;37H[34h[?25h[18;11H[19;7H[0m [?25l[[21;20H[1m[7m[+][19;9H[34h[?25h[?25l[0m [34h[?25h[?25l$[34h[?25h[?25l1[34h[?25h[?25l [34h[?25h[?25l-[34h[?25h[?25ln[34h[?25h[?25le[34h[?25h[?25l [34h[?25h[?25l0[34h[?25h[?25l [34h[?25h[?25l][34h[?25h[?25l;[34h[?25h[?25l [34h[?25h[?25lt[34h[?25h[?25lh[34h[?25h[?25le[34h[?25h[?25ln[34h[?25h[?25l[20;1H[K[20;1H[34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25le[34h[?25h[?25lc[34h[?25h[?25lh[34h[?25h[?25lo[34h[?25h[?25l [34h[?25h[?25l-[34h[?25h[?25le[34h[?25h[?25l [34h[?25h[?25l"[34h[?25h[?25l$[34h[?25h[?25l2[34h[?25h[?25l"[34h[?25h[?25l[1;20r[20;1H
[1;42r[42;1H[K[20;1H[34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25le[34h[?25h[?25lx[34h[?25h[?25li[34h[?25h[?25lt[34h[?25h[?25l [34h[?25h[?25l1[34h[?25h[?25l[1;20r[20;1H
[1;42r[20;1H[34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25lf[34h[?25h[?25li[34h[?25h[?25l[1;20r[20;1H
[1;42r[20;1H[34h[?25h[?25l}[34h[?25h[?25l[42;1H:[34h[?25hw[?25l"func_collection.sh" 23 lines, 898964 characters written[21;20H[1m[7m   [20;1H[34h[?25h[0m
[7mfunc_collection.sh                                                                                                         [0m[41;1H[1m[7minstall-and-configure-docker.sh                                                                                            [40;1H[?25l[0m[22;1H#!/usr/bin/env bash[22;20H[K[23;1H[K[24;1Hsource ./func_collection.sh[24;28H[K[25;5H[K[26;1Hif [ $UID -ne 0 ]; then
    echo "Does not have enough permission, please run as root"
    exit 1
fi[29;3H[K[30;1H[K[31;1H# Install docker-ce using distro's software manager
if grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \[34;20H[K[35;1H    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[36;1H[K[37;16HInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[39;1H[K[40;5Hecho -e "\nVerifing fingerprint of the key"[22;1H[34h[?25h









[31;1H[30;1H[29;1H[28;1H[27;1H[26;1H[25;1H[?25l[26;40r[26;1H[L[1;42r[41;33H[1m[7m[+][0m[42;1H[K[26;1H[34h[?25h[?25lE[34h[?25h[?25lx[34h[?25h[?25li[34h[?25h[?25lt[34h[?25h[?25l_[34h[?25h[?25li[34h[?25h[?25lf[34h[?25h[?25l [34h[?25h[?25l$[34h[?25h[?25lU[34h[?25h[?25lI[34h[?25h[?25lD[34h[?25h[?25l [34h[?25h[27;13H[28;13H[?25l[34h[?25h[?25l[7m"Does not have enough permission, please run as root" 
    exit [34h[?25h[?25l1 
fi[34h[?25h[?25l[0mfi[34h[?25h[?25l[29;10H1[29;11H[K[29;10H[34h[?25h[?25lexit [34h[?25h[?25l[28;62H"[28;63H[K[29;1H    [28;62H[34h[?25h[?25l[28;10H"Does not have enough permission, please run as root[28;10H[34h[?25h[27;10H[26;10HUID [?25l "Does not have enough permission, please run as root"[34h[?25h[27;23H[?25l[34h[?25h[?25l[7mi
[34h[?25h[?25l 
[34h[?25h[?25l 
[34h[?25h[?25l[0m[27;1Hi
 
 [27;1H[34h[?25h[?25l#if [ $UID -ne 0 ]; then#[34h[?25h[?25l
#    echo "Does not have enough permission, please run as root"
#    exit 1
#fi[27;1H[34h[?25h[?25l[42;1H:[34h[?25hwq[?25l"install-and-configure-docker.sh" 72 lines, 898964 characters written[1;1Hverify_docker_install() {
    echo -e "\nVerifing docker install"
    docker run --rm hello-world[3;32H[K[4;5Hexit_status=$?[4;19H[K[5;5Hdocker rmi hello-world
    if [ $exit_status -ne 0 ]; then
 [7Cecho -e "\nDocker is not installed properly, something went wrong"[8;9Hexit 1
    fi[9;7H[K[10;1H}[10;5H[K[11;5H[K[12;1Hrestart_docker() {
    echo -e "\nRestarting docker"
    /etc/init.d/docker restart[14;31H[K[15;1H}[15;2H[K[16;5H[K[17;1H# If [ $1 -ne 0 ], print $2 and exit.
Exit_if() {[18;12H[K[19;5Hif [ $1 -ne 0 ]; then
 [7Cecho -e "$2"
        exit 1[21;15H[K[22;1H    fi[22;7H[K[23;1H}
[1m[34m~                                                                                                                          [25;1H~                                                                                                                          [26;1H~                                                                                                                          [27;1H~                                                                                                                          [28;1H~                                                                                                                          [29;1H~                                                                                                                          [30;1H~                                                                                                                          [31;1H~                                                                                                                          [32;1H~                                                                                                                          [33;1H~                                                                                                                          [34;1H~                                                                                                                          [35;1H~                                                                                                                          [36;1H~                                                                                                                          [37;1H~                                                                                                                          [38;1H~                                                                                                                          [39;1H~                                                                                                                          [40;1H~                                                                                                                          [41;1H~                                                                                                                          [23;1H[34h[?25h[?25l[0m[42;1H[K[42;1H:[34h[?25hq[?25l[42;1H[K[42;1H[?1l>[34h[?25h[?1049l[01;32mpi@raspberrypi[00m:[01;34m~/docker_images $[00m scrip[K[K[K[K[K./install-and-configure-docker.sh 
Does not have enough permission, please run as root
[01;32mpi@raspberrypi[00m:[01;34m~/docker_images $[00m vi install-and-configure-docker.sh 
[?1049h[?1h=[1;42r[23m[24m[0m[H[J[?25l[42;1H"install-and-configure-docker.sh" 72 lines, 898964 characters[1;1H#!/usr/bin/env bash

source ./func_collection.sh

Exit_if $UID "Does not have enough permission, please run as root"
#if [ $UID -ne 0 ]; then
#    echo "Does not have enough permission, please run as root"
#    exit 1
#fi

# Install docker-ce using distro's software manager
if grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[17;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[20;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    if [ $? -eq 1 ]; then[23;9Hecho "Failed to verify the fingerprint"[24;9Hexit 1
    fi[27;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    if [ $? -ne 0 ]; then[30;9Hecho "Failed to add the docker debian source"[31;9Hexit 1
    fi[34;5Hecho -e "\nInstalling docker-ce"
    (apt update && apt install docker-ce docker-ce-cli containerd.io) || \
    (echo "Failed to install docker-ce" && exit 1)[38;5Hecho -e "\nInstall completed"
else
    echo "Distribution not supported"
    exit 1[1;1H[34h[?25h



















[?25l[42;1H[K[42;1H:[34h[?25hsp fu[34m^I[?25l[0m[42;7H[K[42;7H[34h[?25hnc[34m^I[?25l[0m[42;9H[K[42;9H[34h[?25h_collection.sh[?25l"func_collection.sh" [42;22H[K[42;22H23 lines, 898964 characters[1;1Hverify_docker_install() {
    echo -e "\nVerifing docker install"
    docker run --rm hello-world
    exit_status=$?
    docker rmi hello-world[5;27H[K[6;1H    if [ $exit_status -ne 0 ]; then
        echo -e "\nDocker is not installed properly, something went wrong"
        exit 1
    fi
}[11;1H[K[12;1Hrestart_docker() {[12;19H[K[13;16HRestarting docker"[13;34H[K[14;5H/etc/init.d/docker restart
}[15;5H[K[17;1H# If [ $1 -ne 0 ], print $2 and exit.[17;39H[K[18;1HExit_if() {[18;12H[K[19;5Hif [ $1 -ne 0 ]; then
        echo -e "$2"[20;21H[K[21;1H[1m[7mfunc_collection.sh                                                                                                         [0m[22;1Hif grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[27;16HInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[28;76H[K[29;5H[K[30;5Hecho -e "\nVerifing fingerprint of the key"[30;48H[K[31;5Hapt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    if [ $? -eq 1 ]; then[33;9Hecho "Failed to verify the fingerprint"
        exit 1[34;15H[K[35;5Hfi[35;7H[K[36;5H[K[37;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    if [ $? -ne 0 ]; then
        echo "Failed to add the docker debian source"
[7minstall-and-configure-docker.sh                                                                                            [1;1H[34h[?25h


[?25l[1;20r[0m[1;1H[3M[1;42r[18;9Hexit 1
    fi
}[42;1H[K[20;1H[34h[?25h[19;1H[18;1H[17;1H[16;1H[15;11H[7C[?25l_() {[21;20H[1m[7m[+][15;9H[34h[?25h[?25l[0mf() {[34h[?25h[?25la() {[34h[?25h[?25li() {[34h[?25h[?25ll() {[34h[?25h[?25le() {[34h[?25h[?25ld() {[34h[?25h[?25l[42;1H:[34h[?25hw[?25l"func_collection.sh" 23 lines, 898964 characters written[21;20H[1m[7m   [15;14H[34h[?25h[16;14H[15;14H[14;14H[13;1H[?25l[0m[42;1H[K[42;1H:[34h[?25hwq[?25l"func_collection.sh" 23 lines, 898964 characters written[1;1H#!/usr/bin/env bash[2;5H[K[3;1Hsource ./func_collection.sh[3;29H[K[4;9H[K[5;1HExit_if $UID "Does not have enough permission, please run as root"
#if [ $UID -ne 0 ]; then
#    echo "Does not have enough permission, please run as root"
#    exit 1
#fi[9;4H[K[10;5H[K[11;1H# Install docker-ce using distro's software manager
if grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \[14;20H[K[15;1H    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[16;5H[K[17;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[19;5H[K[20;1H    echo -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"[21;108H[K[22;1H    if [ $? -eq 1 ]; then[22;27H[K[23;5H    echo "Failed to verify the fingerprint"[23;48H[K[24;5H    exit 1[24;16H[K[25;5Hfi[25;7H[K[27;16HAdding docker-ce apt source"[27;44H[K[28;5Hadd-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    if [ $? -ne 0 ]; then
        echo "Failed to add the docker debian source"
        exit 1[31;15H[K[32;5Hfi[32;8H[K[33;9H[K[34;5Hecho -e "\nInstalling docker-ce"
    (apt update && apt install docker-ce docker-ce-cli containerd.io) || \
    (echo "Failed to install docker-ce" && exit 1)[37;5H[K[38;5Hecho -e "\nInstall completed"[38;34H[K[39;1Helse[39;5H[K[40;5Hecho "Distribution not supported"[40;38H[K[41;1H    exit 1[41;11H[K[21;1H[34h[?25h
[21;1H[20;1H[19;1H[18;1H[17;1H[16;1H[15;1H[14;1H[13;1H[12;1H[11;1H[10;1H[9;1H[8;1H[7;1H[6;1H[5;1H[8C[?25l_ $UID "Does not have enough permission, please run as root"[5;9H[34h[?25h[?25lf $UID "Does not have enough permission, please run as root"[5;10H[34h[?25h[?25la $UID "Does not have enough permission, please run as root"[5;11H[34h[?25h[?25li $UID "Does not have enough permission, please run as root"[5;12H[34h[?25h[?25ll $UID "Does not have enough permission, please run as root"[5;13H[34h[?25h[?25le $UID "Does not have enough permission, please run as root"[5;14H[34h[?25h[?25ld $UID "Does not have enough permission, please run as root"[5;15H[34h[?25h[?25l[42;1H[K[42;1H:[34h[?25hw[?25l"install-and-configure-docker.sh" 72 lines, 898964 characters written[5;14H[34h[?25h[?25l[42;1H[K[42;1H:[34h[?25hsp[?25l[42;3H[K[42;3H[34h[?25h[?25l[42;2H[K[42;2H[34h[?25hsp[?25l[42;3H[K[42;3H[34h[?25h[?25l[42;2H[K[42;2H[34h[?25hsp func_collection.sh[?25l"func_collection.sh" [42;22H[K[42;22H23 lines, 898964 characters[1;1Hverify_docker_install() {
    echo -e "\nVerifing docker install"
    docker run --rm hello-world
    exit_status=$?
    docker rmi hello-world[5;27H[K[6;1H    if [ $exit_status -ne 0 ]; then
        echo -e "\nDocker is not installed properly, something went wrong"
        exit 1
    fi
}[11;1H[K[12;1Hrestart_docker() {[12;19H[K[13;16HRestarting docker"[13;34H[K[14;5H/etc/init.d/docker restart
}[15;5H[K[17;1H# If [ $1 -ne 0 ], print $2 and exit.[17;39H[K[18;1HExit_if_failed() {[18;19H[K[19;5Hif [ $1 -ne 0 ]; then
        echo -e "$2"[20;21H[K[21;1H[1m[7mfunc_collection.sh                                                                                                         [0m[22;1Hsource ./func_collection.sh[23;9H[K[24;1HExit_if_failed $UID "Does not have enough permission, please run as root"
#if [ $UID -ne 0 ]; then
#    echo "Does not have enough permission, please run as root"
#    exit 1[27;13H[K[28;1H#fi[28;5H[K[29;5H[K[30;1H# Install docker-ce using distro's software manager[30;52H[K[31;1Hif grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[35;5H[K[36;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[38;5H[K[39;1H    echo -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
[7minstall-and-configure-docker.sh                                                                                            [1;1H[34h[?25h[?25l[0m[42;1H[K[42;1H:[34h[?25hq[?25l[1;1H#!/usr/bin/env bash[1;20H[K[2;5H[K[3;1Hsource ./func_collection.sh[3;28H[K[4;5H[K[5;1HExit_if_failed $UID "Does not have enough permission, please run as root"
#if [ $UID -ne 0 ]; the[6;25H[K[7;1H#    echo "Does not have enough permission, please run as root"[7;64H[K[8;1H#    exit 1[8;12H[K[9;1H#fi[9;5H[K[10;1H[K[11;1H# Install docker-ce using distro's software manager
if grep -q -e "Debian" -e "debian" /etc/*-release; then[13;16HInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \[14;20H[K[15;1H    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common

    echo -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[19;5H[K[20;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"[21;108H[K[22;1H    if [ $? -eq 1 ]; then[22;26H[K[23;9Hecho "Failed to verify the fingerprint"
        exit 1[24;16H[K[25;1H    fi[25;7H[K[26;1H[K[27;1H    echo -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    if [ $? -ne 0 ]; then
        echo "Failed to add the docker debian source"
        exit 1[31;15H[K[32;5Hfi[32;7H[K[33;5H[K[34;5Hecho -e "\nInstalling docker-ce"[34;37H[K[35;5H(apt update && apt install docker-ce docker-ce-cli containerd.io) || \
    (echo "Failed to install docker-ce" && exit 1)[36;51H[K[37;5H[K[38;5Hecho -e "\nInstall completed"
else[39;5H[K[40;5Hecho "Distribution not supported"[40;38H[K[41;1H    exit 1[41;11H[K[5;14H[34h[?25h[6;14H[7;14H[8;11H
#f[?25l[42;1H[K[42;1H:[34h[?25hq[?25l[42;1H[K[42;1H[?1l>[34h[?25h[?1049l[01;32mpi@raspberrypi[00m:[01;34m~/docker_images $[00m ./install-and-configure-docker.sh 
Does not have enough permission, please run as root
[01;32mpi@raspberrypi[00m:[01;34m~/docker_images $[00m ./install-and-configure-docker.sh [1@vi [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
[?1049h[?1h=[1;42r[23m[24m[0m[H[J[?25l[42;1H"install-and-configure-docker.sh" 72 lines, 898964 characters[1;1H#!/usr/bin/env bash

source ./func_collection.sh

Exit_if_failed $UID "Does not have enough permission, please run as root"
#if [ $UID -ne 0 ]; then
#    echo "Does not have enough permission, please run as root"
#    exit 1
#fi

# Install docker-ce using distro's software manager
if grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[17;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[20;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    if [ $? -eq 1 ]; then[23;9Hecho "Failed to verify the fingerprint"[24;9Hexit 1
    fi[27;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    if [ $? -ne 0 ]; then[30;9Hecho "Failed to add the docker debian source"[31;9Hexit 1
    fi[34;5Hecho -e "\nInstalling docker-ce"
    (apt update && apt install docker-ce docker-ce-cli containerd.io) || \
    (echo "Failed to install docker-ce" && exit 1)[38;5Hecho -e "\nInstall completed"
else
    echo "Distribution not supported"
    exit 1[1;1H[34h[?25h










[?25l[42;1H[K[42;1H:[34h[?25hq[?25l[42;1H[K[42;1H[?1l>[34h[?25h[?1049l[01;32mpi@raspberrypi[00m:[01;34m~/docker_images $[00m sudo ./install-and-configure-docker.sh 

Install necessary softwares for adding docker-ce apt source with gpg key
[33m0% [Working][0m[33m0% [Connecting to raspbian.raspberrypi.org] [Waiting for headers][0m                                                                 Hit:1 http://archive.raspberrypi.org/debian buster InRelease
[33m                                                                 0% [Connecting to raspbian.raspberrypi.org][0m[33m                                           0% [Waiting for headers][0m                        Hit:2 http://raspbian.raspberrypi.org/raspbian buster InRelease
[33m                        0% [Working][0m^C
[01;32mpi@raspberrypi[00m:[01;34m~/docker_images $[00m sudo ./install-and-configure-docker.sh [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[4Pvi [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
[?1049h[?1h=[1;42r[23m[24m[0m[H[J[?25l[42;1H"install-and-configure-docker.sh" 72 lines, 898964 characters[1;1H#!/usr/bin/env bash

source ./func_collection.sh

Exit_if_failed $UID "Does not have enough permission, please run as root"
#if [ $UID -ne 0 ]; then
#    echo "Does not have enough permission, please run as root"
#    exit 1
#fi

# Install docker-ce using distro's software manager
if grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[17;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[20;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    if [ $? -eq 1 ]; then[23;9Hecho "Failed to verify the fingerprint"[24;9Hexit 1
    fi[27;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    if [ $? -ne 0 ]; then[30;9Hecho "Failed to add the docker debian source"[31;9Hexit 1
    fi[34;5Hecho -e "\nInstalling docker-ce"
    (apt update && apt install docker-ce docker-ce-cli containerd.io) || \
    (echo "Failed to install docker-ce" && exit 1)[38;5Hecho -e "\nInstall completed"
else
    echo "Distribution not supported"
    exit 1[1;1H[34h[?25h



















[?25l[22;41r[22;1H[L[1;42r[42;1H[K[22;1H[34h[?25h[?25lE[34h[?25h[?25l[34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25lE[34h[?25h[?25lx[34h[?25h[?25li[34h[?25h[?25lr[34h[?25h[?25l[34h[?25h[?25lt[34h[?25h[?25l[34m^N[34h[?25h[?25l[34h[?25h[?25l[0m_[34h[?25h[?25li[34h[?25h[?25lf[34h[?25h[?25l_[34h[?25h[?25lf[34h[?25h[?25la[34h[?25h[?25li[34h[?25h[?25ll[34h[?25h[?25le[34h[?25h[?25ld[34h[?25h[?25l [34h[?25h[?25l[[34h[?25h[?25l [34h[?25h[?25l#[34h[?25h[?25l[34h[?25h[?25l$[34h[?25h[?25l?[34h[?25h[?25l [34h[?25h[?25l-[34h[?25h[?25ln[34h[?25h[?25lq[34h[?25h[?25l[34h[?25h[?25le[34h[?25h[?25l [34h[?25h[?25l1[34h[?25h[?25l [34h[?25h[?25l][34h[?25h[?25l [34h[?25h[?25l"[34h[?25h[?25lF[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[22;33H[K[22;32H[34h[?25h[23;25H[24;19H[?25l[34h[?25h[?25l[7m"Failed to verify the fingerprint" 
        exit [34h[?25h[?25l[0mexit [34h[?25h[?25l[24;47H"[24;48H[K[25;1H        [24;47H[34h[?25h[?25l[24;14H"Failed to verify the fingerprint[24;14H[34h[?25h[23;14H[22;14H[23;8H[22;31H][?25l "Failed to verify the fingerprint"[34h[?25h[?25l[42;1H:[34h[?25hw[?25l"install-and-configure-docker.sh" 73 lines, 898964 characters written[22;66H[34h[?25h[23;25H[?25l[34h[?25h[?25l[7mi
[0m    [34h[?25h[?25l[7m 
[0m    [34h[?25h[?25l[7m 
[0m    [34h[?25h[?25l[23;5Hi
     
     [23;5H[34h[?25h[?25l#if [ $? -eq 1 ]; then    #[34h[?25h[?25l
    #    echo "Failed to verify the fingerprint"
    #    exit 1
    #fi[23;5H[34h[?25h[?25l[42;1H[K[42;1H:[34h[?25hw[?25l"install-and-configure-docker.sh" 73 lines, 898964 characters written[23;5H[34h[?25h[23m[24m[0m[H[J[?25l[1;1Hif grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[6;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[9;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    Exit_if_failed [ $? -ne 1 ] "Failed to verify the fingerprint"
    #if [ $? -eq 1 ]; then
    #    echo "Failed to verify the fingerprint"
    #    exit 1
    #fi[17;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    if [ $? -ne 0 ]; then[20;9Hecho "Failed to add the docker debian source"[12;5H[34h[?25h[23m[24m[0m[H[J[?25l[1;1H#!/usr/bin/env bash

source ./func_collection.sh

Exit_if_failed $UID "Does not have enough permission, please run as root"
#if [ $UID -ne 0 ]; then
#    echo "Does not have enough permission, please run as root"
#    exit 1
#fi

# Install docker-ce using distro's software manager
if grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[17;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[20;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    Exit_if_failed [ $? -ne 1 ] "Failed to verify the fingerprint"
    #if [ $? -eq 1 ]; then
    #    echo "Failed to verify the fingerprint"
    #    exit 1
    #fi[28;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    if [ $? -ne 0 ]; then[31;9Hecho "Failed to add the docker debian source"[32;9Hexit 1
    fi[35;5Hecho -e "\nInstalling docker-ce"
    (apt update && apt install docker-ce docker-ce-cli containerd.io) || \
    (echo "Failed to install docker-ce" && exit 1)[39;5Hecho -e "\nInstall completed"
else
    echo "Distribution not supported"[23;5H[34h[?25h[23m[24m[0m[H[J[?25l[1;1Hif grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[6;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[9;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    Exit_if_failed [ $? -ne 1 ] "Failed to verify the fingerprint"
    #if [ $? -eq 1 ]; then
    #    echo "Failed to verify the fingerprint"
    #    exit 1
    #fi[17;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    if [ $? -ne 0 ]; then[20;9Hecho "Failed to add the docker debian source"[12;5H[34h[?25h[23m[24m[0m[H[J[?25l[1;1H#!/usr/bin/env bash

source ./func_collection.sh

Exit_if_failed $UID "Does not have enough permission, please run as root"
#if [ $UID -ne 0 ]; then
#    echo "Does not have enough permission, please run as root"
#    exit 1
#fi

# Install docker-ce using distro's software manager
if grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[17;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[20;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    Exit_if_failed [ $? -ne 1 ] "Failed to verify the fingerprint"
    #if [ $? -eq 1 ]; then
    #    echo "Failed to verify the fingerprint"
    #    exit 1
    #fi[28;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    if [ $? -ne 0 ]; then[31;9Hecho "Failed to add the docker debian source"[32;9Hexit 1
    fi[35;5Hecho -e "\nInstalling docker-ce"
    (apt update && apt install docker-ce docker-ce-cli containerd.io) || \
    (echo "Failed to install docker-ce" && exit 1)[39;5Hecho -e "\nInstall completed"
else
    echo "Distribution not supported"[23;5H[34h[?25h[23m[24m[0m[H[J[?25l[1;1Hif grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[6;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[9;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    Exit_if_failed [ $? -ne 1 ] "Failed to verify the fingerprint"
    #if [ $? -eq 1 ]; then
    #    echo "Failed to verify the fingerprint"
    #    exit 1
    #fi[17;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    if [ $? -ne 0 ]; then[20;9Hecho "Failed to add the docker debian source"[12;5H[34h[?25h[23m[24m[0m[H[J[?25l[1;1H#!/usr/bin/env bash

source ./func_collection.sh

Exit_if_failed $UID "Does not have enough permission, please run as root"
#if [ $UID -ne 0 ]; then
#    echo "Does not have enough permission, please run as root"
#    exit 1
#fi

# Install docker-ce using distro's software manager
if grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[17;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[20;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    Exit_if_failed [ $? -ne 1 ] "Failed to verify the fingerprint"
    #if [ $? -eq 1 ]; then
    #    echo "Failed to verify the fingerprint"
    #    exit 1
    #fi[28;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    if [ $? -ne 0 ]; then[31;9Hecho "Failed to add the docker debian source"[32;9Hexit 1
    fi[35;5Hecho -e "\nInstalling docker-ce"
    (apt update && apt install docker-ce docker-ce-cli containerd.io) || \
    (echo "Failed to install docker-ce" && exit 1)[39;5Hecho -e "\nInstall completed"
else
    echo "Distribution not supported"[23;5H[34h[?25h
    
    
    

    
    
    
    
    
    

    
    
    [36;5H[35;5H[34;1H[33;5H[32;5H[31;5H[30;5H[29;5H[?25l[30;41r[30;1H[L[1;42r[30;1H[34h[?25h[?25lE[34h[?25h[?25lx[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l        [34h[?25h[?25l[34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25lE[34h[?25h[?25lx[34h[?25h[?25li[34h[?25h[?25lt[34h[?25h[?25l_[34h[?25h[?25li[34h[?25h[?25lf[34h[?25h[?25l_[34h[?25h[?25lf[34h[?25h[?25la[34h[?25h[?25li[34h[?25h[?25ll[34h[?25h[?25le[34h[?25h[?25ld[34h[?25h[?25l [34h[?25h[?25l[[34h[?25h[?25l [34h[?25h[?25l$[34h[?25h[?25l?[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l$[34h[?25h[?25l?[34h[?25h[?25l [34h[?25h[?25l[30;23H[K[30;22H[34h[?25h[?25l[30;41r[30;1H[L[1;42r[30;1HC[34h[?25h[?25l[30;41r[41;1H
[1;42r[41;1Helse[30;5H[34h[?25h
    
    
    [32;5H    echo [?25l[34h[?25h[?25l[7m"Failed to add the docker debian source" 
        exit [34h[?25h[?25l[0mexit [34h[?25h[?25l[32;53H"[32;54H[K[33;1H        [32;53H[34h[?25h[?25l[32;14H"Failed to add the docker debian source[32;14H[34h[?25h[31;14H[30;14H[9C[?25l "Failed to add the docker debian source"[34h[?25h[31;25H     [?25l[34h[?25h[?25l[7mi
[0m    [34h[?25h[?25l[7m 
[0m    [34h[?25h[?25l[7m 
[0m    [34h[?25h[?25l[31;5Hi
     
     [31;5H[34h[?25h[?25l#if [ $? -ne 0 ]; then    #[34h[?25h[?25l
    #    echo "Failed to add the docker debian source"
    #    exit 1
    #fi[31;5H[34h[?25h[?25l[42;1H:[34h[?25hw[?25l"install-and-configure-docker.sh" 74 lines, 898964 characters written[31;5H[34h[?25h
    
    
    

    
    
    

    
els[?25l[1;41r[41;1H
[1;42r[41;5Hecho "Distribution not supported"[42;1H[K[41;5H[34h[?25h[?25l[1;41r[41;1H
[1;42r[41;5Hexit 1    [34h[?25h[?25l[1;41r[41;1H
[1;42r[41;1Hfi[34h[?25h[?25l[1;41r[41;1H
[1;42r[41;1H[34h[?25h[?25l[1;41r[41;1H
[1;42r[41;1Hverify_docker_installveri[34h[?25h[?25l[1;41r[41;1H
[1;42r[41;1H[34h[?25h[?25l[1;41r[41;1H
[1;42r[41;1Hecho -e "\nStart to configure docker\nEnable usernamespace first"echo[34h[?25h[?25l[1;41r[41;1H
[1;42r[41;1Hsysctl >/dev/null 2>&1sysc[34h[?25h[?25l[1;41r[41;1H
[1;42r[41;1Hif [ $? -eq 127 ]; thenif [[34h[?25h[40;5H[39;5H[38;1H[37;5H[36;1H[35;2H[34;5H[33;5H[32;4H[31;5H[30;1H[29;5H[28;5H[?25lapt update && apt install docker-ce docker-ce-cli containerd.io) || \[28;74H[K[28;5H[34h[?25h
    [28;73H[?25l[34h[?25h[?25l[7m) [34h[?25h[?25l|[34h[?25h[?25l|[34h[?25h[?25l [34h[?25h[?25l[0m[28;68H[K[28;67H[34h[?25h[?25l[29;41r[29;1H[L[1;42r[29;1H[34h[?25h[?25li[34h[?25h[?25lf[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25lE[34h[?25h[?25lx[34h[?25h[?25li[34h[?25h[?25lt[34h[?25h[?25l_[34h[?25h[?25li[34h[?25h[?25lf[34h[?25h[?25l_[34h[?25h[?25lf[34h[?25h[?25la[34h[?25h[?25li[34h[?25h[?25ll[34h[?25h[?25le[34h[?25h[?25ld[34h[?25h[?25l [34h[?25h[?25l$[34h[?25h[?25l?[34h[?25h[?25l [34h[?25h[30;22H[8Cdocker-ce[?25l[34h[?25h[?25l[7me"[34h[?25h[?25lc[34h[?25h[?25locker-[30;30H[34h[?25h[?25l[30;23Hnstall d[30;22H[34h[?25h[?25lo i[34h[?25h[?25lailed t[30;12H[34h[?25h[?25lF[34h[?25h[?25l[0m"failed to install docker-ce"[30;11H[34h[?25h"[?25lailed to install docker-ce" && exit 1)[30;50H[K[30;12H[34h[?25h[?25lFailed to install docker-ce" && exit 1)[30;13H[34h[?25h [?25l[34h[?25h[?25l[7m"[34h[?25h[?25lFailed [34h[?25h[?25lto [34h[?25h[?25linstall [34h[?25h[?25ldocker[34h[?25h[?25l-[34h[?25h[?25lc[34h[?25h[?25le[34h[?25h[?25l[0m[30;11H"Failed to install docker-ce[30;11H[34h[?25h[29;11H[9C
    [29;20H$?[?25l "Failed to install docker-ce"[34h[?25h[?25l[42;1H:[34h[?25hw[?25l"install-and-configure-docker.sh" 75 lines, 898964 characters written[29;51H[34h[?25h[30;50H[?25l[30;41r[41;1H
[1;42r[41;1Hif [ $? -eq 127 ]; then[42;1H[K[30;1H[34h[?25h[?25l[42;1H:[34h[?25hw[?25l"install-and-configure-docker.sh" 74 lines, 898964 characters written[30;1H[34h[?25h


[32;1H[31;1H[30;1H[29;1H[28;1H



[31;1H[30;1H[29;1H[28;1H




[32;1H[31;1H



[34;1H[33;1H[32;1H[31;1H[30;1H[29;1H





[34;1H[33;1H[32;1H[31;1H









[?25l[1;41r[41;1H
[1;42r[41;5Hecho -e "\nCommand 'sysctl' not found and thus cannot enable user namespace"[42;1H[K[41;1H[34h[?25h[?25l[1;41r[41;1H
[1;42r[41;5Hexit 1[34h[?25h[?25l[1;41r[41;1H
[1;42r[41;1Hfi[34h[?25h[?25l
:[34h[?25hq[?25l[42;1H[K[42;1H[?1l>[34h[?25h[?1049l[01;32mpi@raspberrypi[00m:[01;34m~/docker_images $[00m sud[K[K[Ksudo ./install-and-configure-docker.sh 

Install necessary softwares for adding docker-ce apt source with gpg key
[33m0% [Working][0m[33m0% [Waiting for headers] [Waiting for headers][0m                                              Hit:1 http://raspbian.raspberrypi.org/raspbian buster InRelease
[33m                                              0% [Waiting for headers][0m                        Hit:2 http://archive.raspberrypi.org/debian buster InRelease
[33m                        0% [Working][0m[33m0% [Working][0m[33m20% [Working][0m             Reading package lists... 0%Reading package lists... 0%Reading package lists... 0%Reading package lists... 26%Reading package lists... 54%Reading package lists... 83%Reading package lists... 97%Reading package lists... 97%Reading package lists... 97%Reading package lists... 97%Reading package lists... 98%Reading package lists... 98%Reading package lists... 98%Reading package lists... 98%Reading package lists... 99%Reading package lists... 99%Reading package lists... Done
Building dependency tree... 0%Building dependency tree... 0%Building dependency tree... 0%Building dependency tree... 50%Building dependency tree... 50%Building dependency tree       
Reading state information... 0%Reading state information... 0%Reading state information... Done
All packages are up to date.
Reading package lists... 0%Reading package lists... 100%Reading package lists... Done
Building dependency tree... 0%Building dependency tree... 0%Building dependency tree... 50%Building dependency tree... 50%Building dependency tree       
Reading state information... 0%Reading state information... 0%Reading state information... Done
apt-transport-https is already the newest version (1.8.2).
ca-certificates is already the newest version (20190110).
curl is already the newest version (7.64.0-4).
gnupg2 is already the newest version (2.2.12-1+rpi1).
software-properties-common is already the newest version (0.96.20.2-2).
0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.

Installing fingerprint for docker-ce source
OK

Verifing fingerprint of the key
./func_collection.sh: line 19: [: [: integer expression expected

Adding docker-ce apt source
Traceback (most recent call last):
  File "/usr/bin/add-apt-repository", line 95, in <module>
    sp = SoftwareProperties(options=options)
  File "/usr/lib/python3/dist-packages/softwareproperties/SoftwareProperties.py", line 109, in __init__
    self.reload_sourceslist()
  File "/usr/lib/python3/dist-packages/softwareproperties/SoftwareProperties.py", line 599, in reload_sourceslist
    self.distro.get_sources(self.sourceslist)    
  File "/usr/lib/python3/dist-packages/aptsources/distro.py", line 93, in get_sources
    (self.id, self.codename))
aptsources.distro.NoDistroTemplateException: Error: could not find a distribution template for Raspbian/buster
Failed to add the docker debian source
[01;32mpi@raspberrypi[00m:[01;34m~/docker_images $[00m vi install-and-configure-docker.sh 
[?1049h[?1h=[1;42r[23m[24m[0m[H[J[?25l[42;1H"install-and-configure-docker.sh" 74 lines, 898964 characters[1;1H#!/usr/bin/env bash

source ./func_collection.sh

Exit_if_failed $UID "Does not have enough permission, please run as root"
#if [ $UID -ne 0 ]; then
#    echo "Does not have enough permission, please run as root"
#    exit 1
#fi

# Install docker-ce using distro's software manager
if grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[17;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[20;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    Exit_if_failed [ $? -ne 1 ] "Failed to verify the fingerprint"
    #if [ $? -eq 1 ]; then
    #    echo "Failed to verify the fingerprint"
    #    exit 1
    #fi[28;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    Exit_if_failed $? "Failed to add the docker debian source"
    #if [ $? -ne 0 ]; then
    #    echo "Failed to add the docker debian source"
    #    exit 1
    #fi[36;5Hecho -e "\nInstalling docker-ce"
    apt update && apt install docker-ce docker-ce-cli containerd.io
    Exit_if_failed $? "Failed to install docker-ce"[40;5Hecho -e "\nInstall completed"
else[1;1H[34h[?25h








[?25l[1;41r[1;1H[20M[1;42r[22;5Hecho "Distribution not supported"
    exit 1
fi

verify_docker_install

echo -e "\nStart to configure docker\nEnable usernamespace first"
sysctl >/dev/null 2>&1
if [ $? -eq 127 ]; then
    echo -e "\nCommand 'sysctl' not found and thus cannot enable user namespace"
    exit 1
fi
sysctl -w kernel.unprivileged_userns_clone=1

echo -e "\nEnabling user remap feature in docker using user namespace"
echo -e '{\n    "userns-remap": "default"\n}'>/etc/docker/daemon.json

restart_docker

echo -e "Verifing the user remap feature"[42;1H[K[10;5H[34h[?25h
    
    
    
    

    
    
    

    
els
    
    
f

veri

echo
sysc[?25l[30;41r[30;1H[L[1;42r[30;1H[34h[?25h[?25lE[34h[?25h[?25lx[34h[?25h[?25li[34h[?25h[?25lt[34h[?25h[?25l_[34h[?25h[?25li[34h[?25h[?25lf[34h[?25h[?25l_[34h[?25h[?25lf[34h[?25h[?25la[34h[?25h[?25li[34h[?25h[?25ll[34h[?25h[?25le[34h[?25h[?25ld[34h[?25h[?25l [34h[?25h[?25l[[34h[?25h[?25l [34h[?25h[?25l$[34h[?25h[?25l?[34h[?25h[?25l [34h[?25h[?25l-[34h[?25h[?25le[34h[?25h[?25lq[34h[?25h[?25l [34h[?25h[?25l1[34h[?25h[?25l2[34h[?25h[?25l7[34h[?25h[?25l [34h[?25h[?25l][34h[?25h[?25l [34h[?25h[31;23H[32;30H[32;15H[?25l[34h[?25h[?25l[7m"\[34h[?25h[?25lnCommand [34h[?25h[?25l'[34h[?25h[?25lsysctl[34h[?25h[?25l' [34h[?25h[?25lnot [34h[?25h[?25lfound [34h[?25h[?25land [34h[?25h[?25lthus [34h[?25h[?25lcannot [34h[?25h[?25lenable [34h[?25h[?25luser [34h[?25h[?25lnamespace[34h[?25h[?25l[0m[32;13H"\nCommand 'sysctl' not found and thus cannot enable user namespace[32;13H[34h[?25h[31;13H[30;13H[18C[?25l "\nCommand 'sysctl' not found and thus cannot enable user namespace"[34h[?25h[?25l[42;1H:[34h[?25hw[?25l"install-and-configure-docker.sh" 75 lines, 898964 characters written[30;98H[34h[?25h[31;23H[?25l[34h[?25h[?25l[7mi
[34h[?25h[?25l 
[34h[?25h[?25l 
[34h[?25h[?25l[0m[31;1Hi
 
 [31;1H[34h[?25h[?25l#if [ $? -eq 127 ]; then#[34h[?25h[?25l
#    echo -e "\nCommand 'sysctl' not found and thus cannot enable user namespace"
#    exit 1
#fi[31;1H[34h[?25h[?25l[42;1H[K[42;1H:[34h[?25hw[?25l"install-and-configure-docker.sh" 75 lines, 898964 characters written[31;1H[34h[?25h[30;1H[29;1H
[?25l[31;41r[31;1H[L[1;42r[42;1H[K[31;1H[34h[?25h[?25l[42;1H:[34h[?25hw[?25l"install-and-configure-docker.sh" 76 lines, 898964 characters written[31;1H[34h[?25h



[?25l[36;41r[36;1H[L[1;42r[42;1H[K[36;1H[34h[?25h[?25l[42;1H:[34h[?25hw[?25l"install-and-configure-docker.sh" 77 lines, 898964 characters written[36;1H[34h[?25h




[?25l[1;41r[41;1H
[1;42r[41;1Hrestart_docker[42;1H[K[41;1H[34h[?25h[?25l[1;41r[41;1H
[1;42r[41;1H[34h[?25h[?25l[1;41r[41;1H
[1;42r[41;1Hecho -e "Verifing the user remap feature"[34h[?25h[?25l[1;41r[41;1H
[1;42r[41;1Hid dockremap[34h[?25h[?25l[1;41r[41;1H
[1;42r[41;1Hif [ $? -ne 0 ]; then[34h[?25h[?25l[1;41r[41;1H
[1;42r[41;5Hecho -e "\nDockerd failed to create dockremap user"[34h[?25h[?25l[1;41r[41;1H
[1;42r[41;5Hexit 1[34h[?25h[?25l[1;41r[41;1H
[1;42r[41;1Hfi[34h[?25h[?25l[1;41r[41;1H
[1;42r[41;1H[34h[?25h[?25l[1;41r[41;1H
[1;42r[41;1Hgrep dockremap /etc/subuid && grep dockremap /etc/subgid[34h[?25h[40;1H[39;1H[38;1H[37;1H[36;1H[35;1H[34;1H[33;1H[32;1H[31;1H[30;1H[29;1H[28;1H[27;1H[26;1H[25;1H[24;1H[23;1H[22;1H[21;1H[20;1H







[27;1H[26;1H[25;1H[24;1H[23;1H[22;1H[21;1H[20;1H[19;1H[18;1H[17;1H[16;1H








[24;1H[23;1H[22;1H[21;1H[20;1H[19;1H[18;1H[17;1H[16;1H[15;1H[14;1H[13;1H









[?25l[42;1H:[34h[?25h [23;1H


[25;1H[24;1H[23;1H[22;1H[21;1H

# [22;3H[21;1H[20;3H[13C[ $? -[?25lq 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[20;98H[K[20;22H[34h[?25h[?25l 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[20;97H[K[20;22H[34h[?25h[?25l- 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[20;23H[34h[?25h[?25l[34h[?25h[?25ln[34h[?25h[?25le 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[20;24H[34h[?25h[?25l[42;1H:[34h[?25hw[?25l"install-and-configure-docker.sh" 77 lines, 898964 characters written[20;23H[34h[?25h[19;22H[?25l[20;41r[20;1H[L[1;42r[42;1H[K[20;1H[34h[?25h[?25le[34h[?25h[?25lx[34h[?25h[?25li[34h[?25h[?25lt[34h[?25h[?25l_[34h[?25h[?25ls[34h[?25h[?25lt[34h[?25h[?25la[34h[?25h[?25lt[34h[?25h[?25lu[34h[?25h[?25ls[34h[?25h[?25l=[34h[?25h[?25l?[34h[?25h[?25l$[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l$[34h[?25h[?25l?[34h[?25h[?25l[34h[?25h[21;14Hd [ $[?25l -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[21;98H[K[21;19H[34h[?25h[?25le -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[21;20H[34h[?25h[?25lx -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[21;21H[34h[?25h[?25l- -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[21;22H[34h[?25h[?25l[34h[?25h[?25li[34h[?25h[?25lt -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[21;23H[34h[?25h[?25l_ -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[21;24H[34h[?25h[?25ls -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[21;25H[34h[?25h[?25lt -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[21;26H[34h[?25h[?25la -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[21;27H[34h[?25h[?25lt -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[21;28H[34h[?25h[?25lu -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[21;29H[34h[?25h[?25ls -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[21;30H[34h[?25h[?25l[42;1H:[34h[?25hw[?25l"install-and-configure-docker.sh" 78 lines, 898964 characters written[21;29H[34h[?25h[27C[?25l[22;41r[22;1H[L[1;42r[22;1HExit_if_failed [ $exit_status -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[42;1H[K[22;1H[34h[?25h[15C[ $[12C-ne 127 [?25l[34h[?25h[?25l[7m27 ][34h[?25h[?25le 1[34h[?25h[?25ln[34h[?25h[?25l[0m "\nCommand 'sysctl' not found and thus cannot enable user namespace"[22;100H[K[22;31H[34h[?25h[?25l"\nCommand 'sysctl' not found and thus cannot enable user namespace"[22;99H[K[22;31H[34h[?25h[22;19H[?25l[34h[?25h[?25l[7m [34h[?25h[?25l[0m$exit_status "\nCommand 'sysctl' not found and thus cannot enable user namespace"[22;97H[K[22;16H[34h[?25h$[12C"\[9Cnd 'sysctl' [?25l[22;41r[41;1H
[1;42r[22;1H[34h[?25h[?25l[42;1H:[34h[?25hw[?25l"install-and-configure-docker.sh" 78 lines, 898964 characters written[22;1H[34h[?25h


[24;1H[23;1H[22;1H[21;1H[20;1H[19;1H
[?25l[20;41r[41;1H
[1;42r[41;1Hgrep dockremap /etc/subuid && grep dockremap /etc/subgid[42;1H[K[20;1H[34h[?25h[?25l[20;41r[20;1H[L[1;42r[20;1H[34h[?25h[?25l【[34h[?25h[?25l[34h[?25h[?25l[20;1H[K[20;1H[34h[?25h
[15C[ $[?25l[34h[?25h[?25l[7mexit_status [34h[?25h[?25l[0m [34h[?25h[?25ls[34h[?25h[?25l[21;19H -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[21;99H[K[21;19H[34h[?25h[?25l? -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[21;20H[34h[?25h[?25l[42;1H:[34h[?25hw[?25l"install-and-configure-docker.sh" 78 lines, 898964 characters written[21;19H[34h[?25h
[23;19H[24;19H[25;11H
#f
[28;19H
[30;19H[31;19H
[33;14H
[35;19H[36;12H[?25l[37;41r[37;1H[L[1;42r[42;1H[K[37;1H[34h[?25h[?25lE[34h[?25h[?25lx[34h[?25h[?25li[34h[?25h[?25lt[34h[?25h[?25l_[34h[?25h[?25li[34h[?25h[?25lf[34h[?25h[?25l_[34h[?25h[?25lf[34h[?25h[?25li[34h[?25h[?25ll[34h[?25h[?25le[34h[?25h[?25ld[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25la[34h[?25h[?25li[34h[?25h[?25ll[34h[?25h[?25le[34h[?25h[?25ld[34h[?25h[?25l [34h[?25h[?25l$[34h[?25h[?25l?[34h[?25h[?25l [34h[?25h[38;18H[39;18H[?25l[34h[?25h[?25l[7m"\[34h[?25h[?25lnDockerd [34h[?25h[?25lfailed [34h[?25h[?25lto [34h[?25h[?25lcreate [34h[?25h[?25ldockremap [34h[?25h[?25lu[34h[?25h[?25ls[34h[?25h[?25le[34h[?25h[?25lr[34h[?25h[?25l[0m[39;13H"\nDockerd failed to create dockremap user[39;13H[34h[?25h[38;13H[37;13Hed $?[?25l "\nDockerd failed to create dockremap user"[34h[?25h[?25l[42;1H:[34h[?25hw[?25l"install-and-configure-docker.sh" 79 lines, 898964 characters written[37;61H[34h[?25h[38;21H[37;61H[?25l[38;41r[38;1H[L[1;42r[42;1H[K[38;1H[34h[?25h[?25l{[34h[?25h[?25l[34h[?25h[?25l[38;1H[K[38;1H[34h[?25h
[?25l[34h[?25h[?25l[7mi
[34h[?25h[?25l 
[34h[?25h[?25l[1;41r[0m[41;1H
[1;42r[40;1H[7m [0m
fi[34h[?25h[?25l[1;41r[41;1H
[1;42r[40;1H[7mf
[34h[?25h[?25l[0m[40;1Hf[34h[?25h[?25l[37;1Hi
 
 [37;1H[34h[?25h[?25l#if [ $? -ne 0 ]; then#[34h[?25h[?25l
#    echo -e "\nDockerd failed to create dockremap user"
#    exit 1
#fi[37;1H[34h[?25h[?25l[42;1H:[34h[?25hw[?25l"install-and-configure-docker.sh" 80 lines, 898964 characters written[37;1H[34h[?25h



[?25l[1;41r[41;1H
[1;42r[41;1Hgrep dockremap /etc/subuid && grep dockremap /etc/subgid[42;1H[K[41;1H[34h[?25h[?25l[1;41r[41;1H
[1;42r[41;1Hif [ $? -ne 0 ]; then[34h[?25h[?25l[1;41r[41;1H
[1;42r[41;5Hecho -e "\nDockerd failed to setup user remap feature properly"[34h[?25h[?25l[1;41r[41;1H
[1;42r[41;5Hexit 1[34h[?25h[?25l[1;41r[41;1H
[1;42r[41;1Hfi[34h[?25h[?25l[1;41r[41;1H
[1;42r[41;1H[34h[?25h[?25l[1;41r[41;1H
[1;42r[41;1Hverify_docker_install[34h[?25h[40;1H[39;1H[38;1H[37;1H[36;1H[35;1H[34;1H[33;1H

[?25l[36;41r[36;1H[L[1;42r[36;1H[34h[?25h[?25lE[34h[?25h[?25lx[34h[?25h[?25li[34h[?25h[?25lt[34h[?25h[?25l_[34h[?25h[?25li[34h[?25h[?25lf[34h[?25h[?25l_[34h[?25h[?25lf[34h[?25h[?25la[34h[?25h[?25li[34h[?25h[?25ll[34h[?25h[?25le[34h[?25h[?25ld[34h[?25h[?25l [34h[?25h[?25l$[34h[?25h[?25l?[34h[?25h[?25l [34h[?25h[37;18H[38;18H[?25l[34h[?25h[?25l[7m"\[34h[?25h[?25lnDockerd [34h[?25h[?25lfailed [34h[?25h[?25lto [34h[?25h[?25lsetup [34h[?25h[?25luser [34h[?25h[?25lremap [34h[?25h[?25lfeature [34h[?25h[?25lproperly[34h[?25h[?25l[0m[38;13H"\nDockerd failed to setup user remap feature properly[38;13H[34h[?25h[37;13H[36;13Hed $?[?25l "\nDockerd failed to setup user remap feature properly"[34h[?25h[?25l[42;1H:[34h[?25hw[?25l"install-and-configure-docker.sh" 81 lines, 898964 characters written[36;73H[34h[?25h[37;21H[?25l[37;41r[37;1H[L[1;42r[42;1H[K[37;1H[34h[?25h
[?25l[34h[?25h[?25l[7mi
[34h[?25h[?25l 
[34h[?25h[?25l 
[34h[?25h[?25l[1;41r[0m[41;1H
[1;42r[40;1H[7mf
[34h[?25h[?25l[0m[40;1Hf[34h[?25h[?25l[37;1Hi
 
 [37;1H[34h[?25h[?25l#if [ $? -ne 0 ]; then#[34h[?25h[?25l
#    echo -e "\nDockerd failed to setup user remap feature properly"
#    exit 1
#fi[37;1H[34h[?25h[?25l[42;1H:[34h[?25hw[?25l"install-and-configure-docker.sh" 82 lines, 898964 characters written[37;1H[34h[?25h[?25l[37;41r[41;1H
[1;42r[41;1Hverify_docker_install[42;1H[K[37;1H[34h[?25h[?25l[41;1H[34h[?25h[?25l
1 more line; before #29  2 seconds ago[37;41r[37;1H[L[1;42r[37;1H#if [ $? -ne 0 ]; then[42;1H[K[42;1H1 more line; before #29  2 seconds ago[37;1H[34h[?25h[?25l[42;1H[K[42;1H:[34h[?25hw[?25l"install-and-configure-docker.sh" 82 lines, 898964 characters written[37;1H[34h[?25h[?25l[1;41r[41;1H
[1;42r[41;1Hverify_docker_install[42;1H[K[41;1H[34h[?25h[?25l[1;41r[1;1H[20L[1;42r[1;5HExit_if_failed [ $? -ne 1 ] "Failed to verify the fingerprint"
    #if [ $? -eq 1 ]; then
    #    echo "Failed to verify the fingerprint"
    #    exit 1
    #fi[7;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    Exit_if_failed $? "Failed to add the docker debian source"
    #if [ $? -ne 0 ]; then
    #    echo "Failed to add the docker debian source"
    #    exit 1
    #fi[15;5Hecho -e "\nInstalling docker-ce"
    apt update && apt install docker-ce docker-ce-cli containerd.io
    Exit_if_failed $? "Failed to install docker-ce"[19;5Hecho -e "\nInstall completed"
else[41;1H[34h[?25h[?25l[1;41r[1;1H[20L[1;42r[2;1Hsource ./func_collection.sh

Exit_if_failed $UID "Does not have enough permission, please run as root"
#if [ $UID -ne 0 ]; then
#    echo "Does not have enough permission, please run as root"
#    exit 1
#fi

# Install docker-ce using distro's software manager
if grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[16;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[19;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"[41;5H[34h[?25h[?25l[1;41r[1;1H[L[1;42r[1;1H#!/usr/bin/env bash[22;5H[34h[?25h[?25l[2;1H[34h[?25h[?25l[1;1H[34h[?25h[?25l[42;1H:[34h[?25ho func_col[?25l[42;11H[K[42;11H[34h[?25h[?25l[42;10H[K[42;10H[34h[?25h[?25l[42;9H[K[42;9H[34h[?25h[?25l[42;8H[K[42;8H[34h[?25h[?25l[42;7H[K[42;7H[34h[?25h[?25l[42;6H[K[42;6H[34h[?25h[?25l[42;5H[K[42;5H[34h[?25h[?25l[42;4H[K[42;4H[34h[?25h[?25l[34h[?25h[?25l[42;2H[K[42;2H[34h[?25hq[?25l[42;1H[K[42;1H[?1l>[34h[?25h[?1049l[01;32mpi@raspberrypi[00m:[01;34m~/docker_images $[00m sudo ./instq
sudo: ./instq: command not found
[01;32mpi@raspberrypi[00m:[01;34m~/docker_images $[00m sudo ./instq[Kall-and-configure-docker.sh 

Install necessary softwares for adding docker-ce apt source with gpg key
[33m0% [Working][0m[33m0% [Connecting to raspbian.raspberrypi.org (2a00:1098:0:80:1000:75:0:3)] [Waiting for headers][0m                                                                                              Hit:1 http://archive.raspberrypi.org/debian buster InRelease
[33m                                                                                              0% [Waiting for headers][0m                        Hit:2 http://raspbian.raspberrypi.org/raspbian buster InRelease
[33m                        0% [Working][0m[33m0% [Working][0m[33m20% [Working][0m             Reading package lists... 0%Reading package lists... 0%Reading package lists... 0%Reading package lists... 40%Reading package lists... 68%Reading package lists... 97%Reading package lists... 97%Reading package lists... 97%Reading package lists... 97%Reading package lists... 97%Reading package lists... 98%Reading package lists... 98%Reading package lists... 98%Reading package lists... 98%Reading package lists... 99%Reading package lists... 99%Reading package lists... Done
Building dependency tree... 0%Building dependency tree... 0%Building dependency tree... 0%Building dependency tree... 50%Building dependency tree... 50%Building dependency tree       
Reading state information... 0%Reading state information... 0%Reading state information... Done
All packages are up to date.
Reading package lists... 0%Reading package lists... 100%Reading package lists... Done
Building dependency tree... 0%Building dependency tree... 0%Building dependency tree... 50%Building dependency tree... 50%Building dependency tree       
Reading state information... 0%Reading state information... 0%Reading state information... Done
apt-transport-https is already the newest version (1.8.2).
ca-certificates is already the newest version (20190110).
curl is already the newest version (7.64.0-4).
gnupg2 is already the newest version (2.2.12-1+rpi1).
software-properties-common is already the newest version (0.96.20.2-2).
0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.

Installing fingerprint for docker-ce source
OK

Verifing fingerprint of the key
./func_collection.sh: line 19: [: [: integer expression expected

Adding docker-ce apt source
Traceback (most recent call last):
  File "/usr/bin/add-apt-repository", line 95, in <module>
    sp = SoftwareProperties(options=options)
  File "/usr/lib/python3/dist-packages/softwareproperties/SoftwareProperties.py", line 109, in __init__
    self.reload_sourceslist()
  File "/usr/lib/python3/dist-packages/softwareproperties/SoftwareProperties.py", line 599, in reload_sourceslist
    self.distro.get_sources(self.sourceslist)    
  File "/usr/lib/python3/dist-packages/aptsources/distro.py", line 93, in get_sources
    (self.id, self.codename))
aptsources.distro.NoDistroTemplateException: Error: could not find a distribution template for Raspbian/buster
Failed to add the docker debian source
[01;32mpi@raspberrypi[00m:[01;34m~/docker_images $[00m vi install-and-configure-docker.sh 
[?1049h[?1h=[1;42r[23m[24m[0m[H[J[?25l[42;1H"install-and-configure-docker.sh" 82 lines, 898964 characters[1;1H#!/usr/bin/env bash

source ./func_collection.sh

Exit_if_failed $UID "Does not have enough permission, please run as root"
#if [ $UID -ne 0 ]; then
#    echo "Does not have enough permission, please run as root"
#    exit 1
#fi

# Install docker-ce using distro's software manager
if grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[17;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[20;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    Exit_if_failed [ $? -ne 1 ] "Failed to verify the fingerprint"
    #if [ $? -eq 1 ]; then
    #    echo "Failed to verify the fingerprint"
    #    exit 1
    #fi[28;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    Exit_if_failed $? "Failed to add the docker debian source"
    #if [ $? -ne 0 ]; then
    #    echo "Failed to add the docker debian source"
    #    exit 1
    #fi[36;5Hecho -e "\nInstalling docker-ce"
    apt update && apt install docker-ce docker-ce-cli containerd.io
    Exit_if_failed $? "Failed to install docker-ce"[40;5Hecho -e "\nInstall completed"
else[1;1H[34h[?25h[?25l[42;1H[K[42;1H:[34h[?25h19[?25l[19;1H[34h[?25h[?25l[42;1H[K[42;1H:[34h[?25hq[?25l[42;1H[K[42;1H[?1l>[34h[?25h[?1049l[01;32mpi@raspberrypi[00m:[01;34m~/docker_images $[00m vi install-and-configure-docker.sh 
[?1049h[?1h=[1;42r[23m[24m[0m[H[J[?25l[42;1H"install-and-configure-docker.sh" 82 lines, 898964 characters[1;1H#!/usr/bin/env bash

source ./func_collection.sh

Exit_if_failed $UID "Does not have enough permission, please run as root"
#if [ $UID -ne 0 ]; then
#    echo "Does not have enough permission, please run as root"
#    exit 1
#fi

# Install docker-ce using distro's software manager
if grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[17;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[20;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    Exit_if_failed [ $? -ne 1 ] "Failed to verify the fingerprint"
    #if [ $? -eq 1 ]; then
    #    echo "Failed to verify the fingerprint"
    #    exit 1
    #fi[28;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    Exit_if_failed $? "Failed to add the docker debian source"
    #if [ $? -ne 0 ]; then
    #    echo "Failed to add the docker debian source"
    #    exit 1
    #fi[36;5Hecho -e "\nInstalling docker-ce"
    apt update && apt install docker-ce docker-ce-cli containerd.io
    Exit_if_failed $? "Failed to install docker-ce"[40;5Hecho -e "\nInstall completed"
else[1;1H[34h[?25h




















[23m[24m[0m[H[J[?25l[1;1Hif grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[6;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[9;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    Exit_if_failed [ $? -ne 1 ] "Failed to verify the fingerprint"
    #if [ $? -eq 1 ]; then
    #    echo "Failed to verify the fingerprint"
    #    exit 1
    #fi[17;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    Exit_if_failed $? "Failed to add the docker debian source"
    #if [ $? -ne 0 ]; then[11;1H[34h[?25h[23m[24m[0m[H[J[?25l[1;5Hecho -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[5;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[8;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    Exit_if_failed [ $? -ne 1 ] "Failed to verify the fingerprint"
    #if [ $? -eq 1 ]; then
    #    echo "Failed to verify the fingerprint"
    #    exit 1
    #fi[16;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    Exit_if_failed $? "Failed to add the docker debian source"[10;1H[34h[?25h[23m[24m[0m[H[J[?25l[1;1Hif grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[6;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[9;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    Exit_if_failed [ $? -ne 1 ] "Failed to verify the fingerprint"
    #if [ $? -eq 1 ]; then
    #    echo "Failed to verify the fingerprint"
    #    exit 1
    #fi[17;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    Exit_if_failed $? "Failed to add the docker debian source"[11;1H[34h[?25h[23m[24m[0m[H[J[?25l[1;1Hsource ./func_collection.sh

Exit_if_failed $UID "Does not have enough permission, please run as root"
#if [ $UID -ne 0 ]; then
#    echo "Does not have enough permission, please run as root"
#    exit 1
#fi

# Install docker-ce using distro's software manager
if grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[15;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[18;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    Exit_if_failed [ $? -ne 1 ] "Failed to verify the fingerprint"
    #if [ $? -eq 1 ]; then
    #    echo "Failed to verify the fingerprint"
    #    exit 1
    #fi[26;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    Exit_if_failed $? "Failed to add the docker debian source"
    #if [ $? -ne 0 ]; then
    #    echo "Failed to add the docker debian source"
    #    exit 1
    #fi[34;5Hecho -e "\nInstalling docker-ce"
    apt update && apt install docker-ce docker-ce-cli containerd.io
    Exit_if_failed $? "Failed to install docker-ce"[38;5Hecho -e "\nInstall completed"[20;1H[34h[?25h[19;1H[18;1H[17;1H[16;1H



[19;1H[18;1H[17;1H


[19;1H[18;1H

[23m[24m[0m[H[J[?25l[2;1Hsource ./func_collection.sh

Exit_if_failed $UID "Does not have enough permission, please run as root"
#if [ $UID -ne 0 ]; then
#    echo "Does not have enough permission, please run as root"
#    exit 1
#fi

# Install docker-ce using distro's software manager
if grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[16;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[19;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    Exit_if_failed [ $? -ne 1 ] "Failed to verify the fingerprint"
    #if [ $? -eq 1 ]; then
    #    echo "Failed to verify the fingerprint"
    #    exit 1
    #fi[27;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    Exit_if_failed $? "Failed to add the docker debian source"
    #if [ $? -ne 0 ]; then
    #    echo "Failed to add the docker debian source"
    #    exit 1
    #fi[35;5Hecho -e "\nInstalling docker-ce"
    apt update && apt install docker-ce docker-ce-cli containerd.io
    Exit_if_failed $? "Failed to install docker-ce"[39;5Hecho -e "\nInstall completed"[21;1H[34h[?25h[23m[24m[0m[H[J[?25l[1;1Hsource ./func_collection.sh

Exit_if_failed $UID "Does not have enough permission, please run as root"
#if [ $UID -ne 0 ]; then
#    echo "Does not have enough permission, please run as root"
#    exit 1
#fi

# Install docker-ce using distro's software manager
if grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[15;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[18;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    Exit_if_failed [ $? -ne 1 ] "Failed to verify the fingerprint"
    #if [ $? -eq 1 ]; then
    #    echo "Failed to verify the fingerprint"
    #    exit 1
    #fi[26;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    Exit_if_failed $? "Failed to add the docker debian source"
    #if [ $? -ne 0 ]; then
    #    echo "Failed to add the docker debian source"
    #    exit 1
    #fi[34;5Hecho -e "\nInstalling docker-ce"
    apt update && apt install docker-ce docker-ce-cli containerd.io
    Exit_if_failed $? "Failed to install docker-ce"[38;5Hecho -e "\nInstall completed"[20;1H[34h[?25h[23m[24m[0m[H[J[?25l[1;5Hecho -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[5;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[8;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    Exit_if_failed [ $? -ne 1 ] "Failed to verify the fingerprint"
    #if [ $? -eq 1 ]; then
    #    echo "Failed to verify the fingerprint"
    #    exit 1
    #fi[16;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    Exit_if_failed $? "Failed to add the docker debian source"[10;1H[34h[?25h[23m[24m[0m[H[J[?25l[1;1Hsource ./func_collection.sh

Exit_if_failed $UID "Does not have enough permission, please run as root"
#if [ $UID -ne 0 ]; then
#    echo "Does not have enough permission, please run as root"
#    exit 1
#fi

# Install docker-ce using distro's software manager
if grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[15;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[18;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    Exit_if_failed [ $? -ne 1 ] "Failed to verify the fingerprint"
    #if [ $? -eq 1 ]; then
    #    echo "Failed to verify the fingerprint"
    #    exit 1
    #fi[26;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    Exit_if_failed $? "Failed to add the docker debian source"
    #if [ $? -ne 0 ]; then
    #    echo "Failed to add the docker debian source"
    #    exit 1
    #fi[34;5Hecho -e "\nInstalling docker-ce"
    apt update && apt install docker-ce docker-ce-cli containerd.io
    Exit_if_failed $? "Failed to install docker-ce"[38;5Hecho -e "\nInstall completed"[20;1H[34h[?25h[19;1H[18;1H[17;1H


    [15C[ [?25l $? -ne 1 ] "Failed to verify the fingerprint"[20;66H[K[20;20H[34h[?25h[?25lt $? -ne 1 ] "Failed to verify the fingerprint"[20;21H[34h[?25h[?25l[34h[?25h[?25l$[34h[?25h[?25l( $? -ne 1 ] "Failed to verify the fingerprint"[20;22H[34h[?25h[?25lT $? -ne 1 ] "Failed to verify the fingerprint"[20;23H[34h[?25h[?25l[34h[?25h[?25lt[34h[?25h[?25le $? -ne 1 ] "Failed to verify the fingerprint"[20;24H[34h[?25h[?25ls $? -ne 1 ] "Failed to verify the fingerprint"[20;25H[34h[?25h[?25lt $? -ne 1 ] "Failed to verify the fingerprint"[20;26H[34h[?25h[?25l[20;38r[20;1H[L[1;39r[20;1HC[34h[?25h[?25l[20;38r[20;1H[L[1;39r[20;1HC[34h[?25h[?25l[20;38r[20;1H[L[1;39r[20;1HC[34h[?25h[?25l[20;38r[38;1H
[1;39r[38;5HExit_if_failed $? "Failed to install docker-ce"[20;1H[34h[?25h[?25l[20;38r[38;1H
[1;39r[20;1H[34h[?25h[?25l[20;38r[38;1H
[1;39r[38;5Hecho -e "\nInstall completed"[20;5H[34h[?25h[15C$(test $? -ne 1 [?25l "Failed to verify the fingerprint"[20;71H[K[20;36H[34h[?25h[25;1H[24;1H[23;1H[22;1H[21;1H[20;1H    [15C$(test $? -ne 1[?25l "Failed to verify the fingerprint"[20;70H[K[20;35H[34h[?25h[?25l) "Failed to verify the fingerprint"[20;36H[34h[?25h[?25l[39;1H:[34h[?25hwq[?25l"install-and-configure-docker.sh" 82 lines, 898964 characters written
[?1l>[34h[?25h[?1049l[01;32mpi@raspberrypi[00m:[01;34m~/docker_images $[00m sudo ./install-and-configure-docker.sh 

Install necessary softwares for adding docker-ce apt source with gpg key
[33m0% [Working][0m[33m0% [Connecting to raspbian.raspberrypi.org] [Waiting for headers][0m                                                                 Hit:1 http://archive.raspberrypi.org/debian buster InRelease
[33m                                                                 0% [Connecting to raspbian.raspberrypi.org][0m[33m0% [Connecting to raspbian.raspberrypi.org][0m[33m                                           0% [Waiting for headers][0m                        Hit:2 http://raspbian.raspberrypi.org/raspbian buster InRelease
[33m                        0% [Working][0m[33m0% [Working][0m[33m20% [Working][0m             Reading package lists... 0%Reading package lists... 0%Reading package lists... 0%Reading package lists... 24%Reading package lists... 53%Reading package lists... 81%Reading package lists... 97%Reading package lists... 97%Reading package lists... 97%Reading package lists... 97%Reading package lists... 98%Reading package lists... 98%Reading package lists... 98%Reading package lists... 98%Reading package lists... 99%Reading package lists... 99%Reading package lists... Done
Building dependency tree... 0%Building dependency tree... 0%Building dependency tree... 0%Building dependency tree... 50%Building dependency tree... 50%Building dependency tree       
Reading state information... 0%Reading state information... 0%Reading state information... Done
All packages are up to date.
Reading package lists... 0%Reading package lists... 100%Reading package lists... Done
Building dependency tree... 0%Building dependency tree... 0%Building dependency tree... 50%Building dependency tree... 50%Building dependency tree       
Reading state information... 0%Reading state information... 0%Reading state information... Done
apt-transport-https is already the newest version (1.8.2).
ca-certificates is already the newest version (20190110).
curl is already the newest version (7.64.0-4).
gnupg2 is already the newest version (2.2.12-1+rpi1).
software-properties-common is already the newest version (0.96.20.2-2).
0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.

Installing fingerprint for docker-ce source
OK

Verifing fingerprint of the key
./func_collection.sh: line 19: [: too many arguments

Adding docker-ce apt source
Traceback (most recent call last):
  File "/usr/bin/add-apt-repository", line 95, in <module>
    sp = SoftwareProperties(options=options)
  File "/usr/lib/python3/dist-packages/softwareproperties/SoftwareProperties.py", line 109, in __init__
    self.reload_sourceslist()
  File "/usr/lib/python3/dist-packages/softwareproperties/SoftwareProperties.py", line 599, in reload_sourceslist
    self.distro.get_sources(self.sourceslist)    
  File "/usr/lib/python3/dist-packages/aptsources/distro.py", line 93, in get_sources
    (self.id, self.codename))
aptsources.distro.NoDistroTemplateException: Error: could not find a distribution template for Raspbian/buster
Failed to add the docker debian source
[01;32mpi@raspberrypi[00m:[01;34m~/docker_images $[00m vi in[K[Kinstall-and-configure-docker.sh 
[?1049h[?1h=[1;39r[23m[24m[0m[H[J[?25l[39;1H"install-and-configure-docker.sh" 82 lines, 898964 characters[1;1H#!/usr/bin/env bash

source ./func_collection.sh

Exit_if_failed $UID "Does not have enough permission, please run as root"
#if [ $UID -ne 0 ]; then
#    echo "Does not have enough permission, please run as root"
#    exit 1
#fi

# Install docker-ce using distro's software manager
if grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[17;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[20;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    Exit_if_failed $(test $? -ne 1) "Failed to verify the fingerprint"
    #if [ $? -eq 1 ]; then
    #    echo "Failed to verify the fingerprint"
    #    exit 1
    #fi[28;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    Exit_if_failed $? "Failed to add the docker debian source"
    #if [ $? -ne 0 ]; then
    #    echo "Failed to add the docker debian source"
    #    exit 1
    #fi[36;5Hecho -e "\nInstalling docker-ce"
    apt update && apt install docker-ce docker-ce-cli containerd.io
    Exit_if_failed $? "Failed to install docker-ce"[1;1H[34h[?25h























[24;1H[23;1H[22;1H[21;1H[20;1H[19;1H









[28;1H[27;1H[26;1H[25;1H[?25l[39;1H[K[39;1H:[34h[?25hsp func_collection.sh[?25l"func_collection.sh" [39;22H[K[39;22H23 lines, 898964 characters[1;1Hverify_docker_install() {
    echo -e "\nVerifing docker install"
    docker run --rm hello-world
    exit_status=$?
    docker rmi hello-world[5;27H[K[6;1H    if [ $exit_status -ne 0 ]; then
        echo -e "\nDocker is not installed properly, something went wrong"
        exit 1
    fi
}[11;1H[K[12;1Hrestart_docker() {[12;19H[K[13;16HRestarting docker"[13;34H[K[14;5H/etc/init.d/docker restart
}[15;5H[K[17;1H# If [ $1 -ne 0 ], print $2 and exit.[17;39H[K[18;1HExit_if_failed() {[18;19H[K[19;1H[1m[7mfunc_collection.sh                                                                                                         [0m[20;5Hapt update && \[20;20H[K[21;8H install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[21;94H[K[22;5H[K[23;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[25;5H[K[26;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    Exit_if_failed $(test $? -ne 1) "Failed to verify the fingerprint"
    #if [ $? -eq 1 ]; then[29;27H[K[30;5H#    echo "Failed to verify the fingerprint"[30;49H[K[31;6H    exit 1[31;16H[K[32;6Hfi[32;10H[K[33;5H[K[34;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    Exit_if_failed $? "Failed to add the docker debian source"
    #if [ $? -ne 0 ]; then[37;27H[K[38;1H[7minstall-and-configure-docker.sh                                                                                            [1;1H[34h[?25h














[15;1H[14;1H[13;1H[12;1H[11;1H[10;1H[9;1H[8;1H[7;1H[6;1H[?25l[1;18r[0m[1;1H[5M[1;39r[14;5Hif [ $1 -ne 0 ]; then[15;9Hecho -e "$2"[16;9Hexit 1
    fi
}[39;1H[K[10;1H[34h[?25h







[17;1H[16;1H[15;1H[14;1H[13;1H[12;1H[11;1H[10;1H







[17;1H[16;1H[15;1H[?25l[39;1H:[34h[?25hq[?25l[1;1H#!/usr/bin/env bash[1;20H[K[2;9H[K[3;1Hsource ./func_collection.sh[4;5H[K[5;1HExit_if_failed $UID "Does not have enough permission, please run as root"
#if [ $UID -ne 0 ]; then
#    echo "Does not have enough permission, please run as root"
#    exit 1[8;13H[K[9;1H#fi[9;5H[K[10;1H[K[11;1H# Install docker-ce using distro's software manager
if grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \[14;20H[K[15;5Hapt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[16;9H[K[17;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[19;1H[K[20;5Hecho -e "\nVerifing fingerprint of the key"[21;8H-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    Exit_if_failed $(test $? -ne 1) "Failed to verify the fingerprint"
    #if [ $? -eq 1 ]; then[23;27H[K[24;5H#    echo "Failed to verify the fingerprint"[24;49H[K[25;5H#    exit 1
    #fi[26;8H[K[27;5H[K[28;5Hecho -e "\nAdding docker-ce apt source"[28;45H[K[29;5Hadd-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    Exit_if_failed $? "Failed to add the docker debian source"[31;6Hif [ $? -ne 0 ]; then[32;6H    echo "Failed to add the docker debian source"
    #    exit 1
    #fi[34;8H[K[35;5H[K[36;5Hecho -e "\nInstalling docker-ce"[36;38H[K[37;5Hapt update && apt install docker-ce docker-ce-cli containerd.io
    Exit_if_failed $? "Failed to install docker-ce"[38;52H[K[25;1H[34h[?25h[23m[24m[0m[H[J[?25l[1;5Hapt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[4;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[7;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    Exit_if_failed $(test $? -ne 1) "Failed to verify the fingerprint"
    #if [ $? -eq 1 ]; then
    #    echo "Failed to verify the fingerprint"
    #    exit 1
    #fi[15;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    Exit_if_failed $? "Failed to add the docker debian source"
    #if [ $? -ne 0 ]; then[12;1H[34h[?25h[23m[24m[0m[H[J[?25l[1;1H#!/usr/bin/env bash

source ./func_collection.sh

Exit_if_failed $UID "Does not have enough permission, please run as root"
#if [ $UID -ne 0 ]; then
#    echo "Does not have enough permission, please run as root"
#    exit 1
#fi

# Install docker-ce using distro's software manager
if grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[17;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[20;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    Exit_if_failed $(test $? -ne 1) "Failed to verify the fingerprint"
    #if [ $? -eq 1 ]; then
    #    echo "Failed to verify the fingerprint"
    #    exit 1
    #fi[28;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    Exit_if_failed $? "Failed to add the docker debian source"
    #if [ $? -ne 0 ]; then
    #    echo "Failed to add the docker debian source"
    #    exit 1
    #fi[36;5Hecho -e "\nInstalling docker-ce"
    apt update && apt install docker-ce docker-ce-cli containerd.io
    Exit_if_failed $? "Failed to install docker-ce"[25;1H[34h[?25h[?25l[39;1H:[34h[?25hsp func_e[?25l[39;10H[K[39;10H[34h[?25hcollection.sh[?25l"func_collection.sh" [39;22H[K[39;22H23 lines, 898964 characters[1;1Hverify_docker_install() {
    echo -e "\nVerifing docker install"
    docker run --rm hello-world
    exit_status=$?
    docker rmi hello-world[5;27H[K[6;1H    if [ $exit_status -ne 0 ]; then
        echo -e "\nDocker is not installed properly, something went wrong"
        exit 1
    fi
}[11;1H[K[12;1Hrestart_docker() {[12;19H[K[13;16HRestarting docker"[13;34H[K[14;5H/etc/init.d/docker restart
}[15;5H[K[17;1H# If [ $1 -ne 0 ], print $2 and exit.[17;39H[K[18;1HExit_if_failed() {[18;19H[K[19;1H[1m[7mfunc_collection.sh                                                                                                         [0m[20;5Hapt update && \[20;20H[K[21;8H install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[21;94H[K[22;5H[K[23;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[25;5H[K[26;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    Exit_if_failed $(test $? -ne 1) "Failed to verify the fingerprint"
    #if [ $? -eq 1 ]; then[29;27H[K[30;5H#    echo "Failed to verify the fingerprint"[30;49H[K[31;6H    exit 1[31;16H[K[32;6Hfi[32;10H[K[33;5H[K[34;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    Exit_if_failed $? "Failed to add the docker debian source"
    #if [ $? -ne 0 ]; then[37;27H[K[38;1H[7minstall-and-configure-docker.sh                                                                                            [1;1H[34h[?25h










[11;1H[10;1H[9;1H[8;1H[7;1H[6;1H[5;1H[4;1H[3;1H[2;1H[1;1H[?25l[1;18r[0m[1;1H[5M[1;39r[14;5Hif [ $1 -ne 0 ]; then[15;9Hecho -e "$2"[16;9Hexit 1
    fi
}[39;1H[K[5;1H[34h[?25h[?25l[14;5H[34h[?25h[?25l[18;1H[34h[?25h[17;1H[16;1H[15;1H[14;1H    if [13;8H[12;8H$[?25l -ne 0 ], print $2 and exit.[12;37H[K[19;20H[1m[7m[+][12;9H[34h[?25h[?25l[0m? -ne 0 ], print $2 and exit.[12;10H[34h[?25h[?25l[39;1H:[34h[?25hw[?25l"func_collection.sh" 23 lines, 898964 characters written[19;20H[1m[7m   [12;9H[34h[?25h[13;9H[14;9H[0m $[?25l -ne 0 ]; then[14;25H[K[19;20H[1m[7m[+][14;11H[34h[?25h[?25l[0m0 -ne 0 ]; then[14;12H[34h[?25h[?25l[39;1H[K[39;1H:[34h[?25hx[?25l[39;2H[K[39;2H[34h[?25h [14;11H[?25l -ne 0 ]; then[14;25H[K[14;11H[34h[?25h[?25l? -ne 0 ]; then[14;12H[34h[?25h[?25l[39;1H:[34h[?25hwq[?25l"func_collection.sh" 23 lines, 898964 characters written[1;1H#!/usr/bin/env bash[1;20H[K[2;9H[K[3;1Hsource ./func_collection.sh[4;5H[K[5;1HExit_if_failed $UID "Does not have enough permission, please run as root"
#if [ $UID -ne 0 ]; then
#    echo "Does not have enough permission, please run as root"
#    exit 1[8;13H[K[9;1H#fi[9;5H[K[10;1H[K[11;1H# Install docker-ce using distro's software manager
if grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \[14;20H[K[15;5Hapt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[16;9H[K[17;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[19;1H[K[20;5Hecho -e "\nVerifing fingerprint of the key"[21;8H-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    Exit_if_failed $(test $? -ne 1) "Failed to verify the fingerprint"
    #if [ $? -eq 1 ]; then[23;27H[K[24;5H#    echo "Failed to verify the fingerprint"[24;49H[K[25;5H#    exit 1
    #fi[26;8H[K[27;5H[K[28;5Hecho -e "\nAdding docker-ce apt source"[28;45H[K[29;5Hadd-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    Exit_if_failed $? "Failed to add the docker debian source"[31;6Hif [ $? -ne 0 ]; then[32;6H    echo "Failed to add the docker debian source"
    #    exit 1
    #fi[34;8H[K[35;5H[K[36;5Hecho -e "\nInstalling docker-ce"[36;38H[K[37;5Hapt update && apt install docker-ce docker-ce-cli containerd.io
    Exit_if_failed $? "Failed to install docker-ce"[38;52H[K[25;1H[34h[?25h[?25l[39;1H[K[39;1H:[34h[?25hq[?25l[39;1H[K[39;1H[?1l>[34h[?25h[?1049l[01;32mpi@raspberrypi[00m:[01;34m~/docker_images $[00m vi install-and-configure-docker.sh [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[4@sudo ./[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C

Install necessary softwares for adding docker-ce apt source with gpg key
[33m0% [Working][0m[33m0% [Waiting for headers] [Waiting for headers][0m                                              Hit:1 http://raspbian.raspberrypi.org/raspbian buster InRelease
[33m                                              0% [Waiting for headers][0m                        Hit:2 http://archive.raspberrypi.org/debian buster InRelease
[33m                        0% [Working][0m[33m0% [Working][0m[33m20% [Working][0m             Reading package lists... 0%Reading package lists... 0%Reading package lists... 0%Reading package lists... 32%Reading package lists... 60%Reading package lists... 89%Reading package lists... 97%Reading package lists... 97%Reading package lists... 97%Reading package lists... 97%Reading package lists... 98%Reading package lists... 98%Reading package lists... 98%Reading package lists... 98%Reading package lists... 99%Reading package lists... 99%Reading package lists... Done
Building dependency tree... 0%Building dependency tree... 0%Building dependency tree... 0%Building dependency tree... 50%Building dependency tree... 50%Building dependency tree       
Reading state information... 0%Reading state information... 0%Reading state information... Done
All packages are up to date.
Reading package lists... 0%Reading package lists... 100%Reading package lists... Done
Building dependency tree... 0%Building dependency tree... 0%Building dependency tree... 50%Building dependency tree... 50%Building dependency tree       
Reading state information... 0%Reading state information... 0%Reading state information... Done
apt-transport-https is already the newest version (1.8.2).
ca-certificates is already the newest version (20190110).
curl is already the newest version (7.64.0-4).
gnupg2 is already the newest version (2.2.12-1+rpi1).
software-properties-common is already the newest version (0.96.20.2-2).
0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.

Installing fingerprint for docker-ce source
OK

Verifing fingerprint of the key

Adding docker-ce apt source
Traceback (most recent call last):
  File "/usr/bin/add-apt-repository", line 95, in <module>
    sp = SoftwareProperties(options=options)
  File "/usr/lib/python3/dist-packages/softwareproperties/SoftwareProperties.py", line 109, in __init__
    self.reload_sourceslist()
  File "/usr/lib/python3/dist-packages/softwareproperties/SoftwareProperties.py", line 599, in reload_sourceslist
    self.distro.get_sources(self.sourceslist)    
  File "/usr/lib/python3/dist-packages/aptsources/distro.py", line 93, in get_sources
    (self.id, self.codename))
aptsources.distro.NoDistroTemplateException: Error: could not find a distribution template for Raspbian/buster
Failed to add the docker debian source
[01;32mpi@raspberrypi[00m:[01;34m~/docker_images $[00m vi install-and-configure-docker.sh 
[?1049h[?1h=[1;39r[23m[24m[0m[H[J[?25l[39;1H"install-and-configure-docker.sh" 82 lines, 898964 characters[1;1H#!/usr/bin/env bash

source ./func_collection.sh

Exit_if_failed $UID "Does not have enough permission, please run as root"
#if [ $UID -ne 0 ]; then
#    echo "Does not have enough permission, please run as root"
#    exit 1
#fi

# Install docker-ce using distro's software manager
if grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[17;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[20;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    Exit_if_failed $(test $? -ne 1) "Failed to verify the fingerprint"
    #if [ $? -eq 1 ]; then
    #    echo "Failed to verify the fingerprint"
    #    exit 1
    #fi[28;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    Exit_if_failed $? "Failed to add the docker debian source"
    #if [ $? -ne 0 ]; then
    #    echo "Failed to add the docker debian source"
    #    exit 1
    #fi[36;5Hecho -e "\nInstalling docker-ce"
    apt update && apt install docker-ce docker-ce-cli containerd.io
    Exit_if_failed $? "Failed to install docker-ce"[1;1H[34h[?25h




















[21;1H[20;1H[19;1H[18;1H[17;1H[16;1H[15;1H[14;1H[13;1H[12;1H[11;1H[10;1H[9;1H[8;1H[7;1H[6;1H[5;1H[4;1H[3;1H[2;1H[1;1H




[?25l[39;1H[K[39;1H:[34h[?25hq[?25l[39;1H[K[39;1H[?1l>[34h[?25h[?1049l[01;32mpi@raspberrypi[00m:[01;34m~/docker_images $[00m ./install-and-configure-docker.sh 

Install necessary softwares for adding docker-ce apt source with gpg key
Reading package lists... 0%Reading package lists... 100%Reading package lists... Done
E: Could not open lock file /var/lib/apt/lists/lock - open (13: Permission denied)
E: Unable to lock directory /var/lib/apt/lists/
W: Problem unlinking the file /var/cache/apt/pkgcache.bin - RemoveCaches (13: Permission denied)
W: Problem unlinking the file /var/cache/apt/srcpkgcache.bin - RemoveCaches (13: Permission denied)

Installing fingerprint for docker-ce source
E: This command can only be used by root.

Verifing fingerprint of the key

Adding docker-ce apt source
^CTraceback (most recent call last):
  File "/usr/bin/add-apt-repository", line 8, in <module>
    import gettext
  File "/usr/lib/python3.7/gettext.py", line 49, in <module>
    import locale
  File "/usr/lib/python3.7/locale.py", line 16, in <module>
    import re
  File "/usr/lib/python3.7/re.py", line 125, in <module>
    import functools
  File "/usr/lib/python3.7/functools.py", line 21, in <module>
    from collections import namedtuple
  File "/usr/lib/python3.7/collections/__init__.py", line 21, in <module>
    from operator import itemgetter as _itemgetter, eq as _eq
  File "<frozen importlib._bootstrap>", line 983, in _find_and_load
  File "<frozen importlib._bootstrap>", line 963, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 906, in _find_spec
  File "<frozen importlib._bootstrap_external>", line 1280, in find_spec
  File "<frozen importlib._bootstrap_external>", line 1252, in _get_spec
  File "<frozen importlib._bootstrap_external>", line 1391, in find_spec
  File "<frozen importlib._bootstrap_external>", line 59, in _path_join
KeyboardInterrupt
Failed to add the docker debian source
[01;32mpi@raspberrypi[00m:[01;34m~/docker_images $[00m vi install-and-configure-docker.sh 
[?1049h[?1h=[1;39r[23m[24m[0m[H[J[?25l[39;1H"install-and-configure-docker.sh" 82 lines, 898964 characters[1;1H#!/usr/bin/env bash

source ./func_collection.sh

Exit_if_failed $UID "Does not have enough permission, please run as root"
#if [ $UID -ne 0 ]; then
#    echo "Does not have enough permission, please run as root"
#    exit 1
#fi

# Install docker-ce using distro's software manager
if grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[17;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[20;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    Exit_if_failed $(test $? -ne 1) "Failed to verify the fingerprint"
    #if [ $? -eq 1 ]; then
    #    echo "Failed to verify the fingerprint"
    #    exit 1
    #fi[28;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    Exit_if_failed $? "Failed to add the docker debian source"
    #if [ $? -ne 0 ]; then
    #    echo "Failed to add the docker debian source"
    #    exit 1
    #fi[36;5Hecho -e "\nInstalling docker-ce"
    apt update && apt install docker-ce docker-ce-cli containerd.io
    Exit_if_failed $? "Failed to install docker-ce"[1;1H[34h[?25h[?25l[39;1H[K[39;1H:[34h[?25hsp u[?25l[39;5H[K[39;5H[34h[?25hfunc_collection.sh[?25l"func_collection.sh" [39;22H[K[39;22H23 lines, 898964 characters[1;1Hverify_docker_install() {
    echo -e "\nVerifing docker install"
    docker run --rm hello-world
    exit_status=$?
    docker rmi hello-world[5;27H[K[6;1H    if [ $exit_status -ne 0 ]; then
        echo -e "\nDocker is not installed properly, something went wrong"
        exit 1
    fi
}[11;1H[K[12;1Hrestart_docker() {[12;19H[K[13;16HRestarting docker"[13;34H[K[14;5H/etc/init.d/docker restart
}[15;5H[K[17;1H# If [ $? -ne 0 ], print $2 and exit.[17;39H[K[18;1HExit_if_failed() {[18;19H[K[19;1H[1m[7mfunc_collection.sh                                                                                                         [0m[20;1H#!/usr/bin/env bash[20;20H[K[21;5H[K[22;1Hsource ./func_collection.sh[22;28H[K[23;5H[K[24;1HExit_if_failed $UID "Does not have enough permission, please run as root"
#if [ $UID -ne 0 ]; then
#    echo "Does not have enough permission, please run as root"
#    exit 1
#fi[28;5H[K[29;5H[K[30;1H# Install docker-ce using distro's software manager[30;52H[K[31;1Hif grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[36;27Hfingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -
[7minstall-and-configure-docker.sh                                                                                            [1;1H[34h[?25h







[?25l[1;18r[0m[1;1H[5M[1;39r[14;5Hif [ $? -ne 0 ]; then[15;9Hecho -e "$2"[16;9Hexit 1
    fi
}[39;1H[K[13;1H[34h[?25h[?25l[18;1H[34h[?25h[17;1H[16;1H[15;1H[14;1H[13;1H[12;1H# If [ $? -ne 0 ], print $[?25l and exit.[12;37H[K[19;20H[1m[7m[+][12;27H[34h[?25h[?25l[0m1 and exit.[12;28H[34h[?25h[?25l[39;1H:[34h[?25hw[?25l"func_collection.sh" 23 lines, 898964 characters written[19;20H[1m[7m   [12;27H[34h[?25h[0m[19;1H[7mfunc_collection.sh                                                                                                         [0m[38;1H[1m[7minstall-and-configure-docker.sh                                                                                            [20;1H







[27;1H[26;1H[25;1H[24;1H












[?25l[20;37r[0m[37;1H
[1;39r[39;1H[K[37;1H[34h[?25h[?25l[20;37r[37;1H
[1;39r[37;5Hecho -e "\nVerifing fingerprint of the key"[34h[?25h[?25l[20;37r[37;1H
[1;39r[37;5Hapt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"[34h[?25h[?25l[20;37r[37;1H
[1;39r[37;5HExit_if_failed $(test $? -ne 1) "Failed to verify the fingerprint"[34h[?25h[?25l[20;37r[37;1H
[1;39r[37;5H#if [ $? -eq 1 ]; then[34h[?25h[?25l[20;37r[37;1H
[1;39r[37;5H#    echo "Failed to verify the fingerprint"[34h[?25h[36;1H[35;1H[34;1H[33;1H[32;1H[31;1H[30;1H[29;1H[28;1H[27;1H[26;1H[25;1H[24;1H



[27;1H[26;1H[25;1H[24;1H[23;1H[19;1H[1m[7mfunc_collection.sh                                                                                                         [0m[38;1H[7minstall-and-configure-docker.sh                                                                                            [12;27H[13;18H[14;25H[13;18H[12;27H[?25l[0m[39;1H1 change; before #2  14 seconds ago[12;27H and exit.[12;37H[K[19;20H[1m[7m[+][12;27H[34h[?25h[?25l[0m[39;11Hafter #2  15 seconds ago[39;35H[K[12;27H1 and exit.[19;20H[1m[7m   [12;27H[34h[?25h[?25l[0m and exit.[12;37H[K[19;20H[1m[7m[+][12;27H[34h[?25h[?25l[0m2 and exit.[12;28H[34h[?25h[13;18H[14;25H[?25l -ne 0 ]; then[14;25H[K[14;11H[34h[?25h[?25l2 -ne 0 ]; then[14;12H[34h[?25h[?25l[14;18r[14;1H[L[1;39r[14;1HA[39;1H[K[14;2H[34h[?25h[?25l[14;18r[14;1H[L[1;39r[14;1HA[34h[?25h[?25l[[34h[?25h[?25l[34h[?25h[?25l[14;2H[K[14;1H[34h[?25h[?25l[14;18r[18;1H
[1;39r[18;5Hfi[14;1H[34h[?25h[?25l[14;18r[18;1H
[1;39r[18;1H}[14;5H[34h[?25h[13;5H[12;5H [ $[?25l -ne 0 ], print $2 and exit.[12;37H[K[12;9H[34h[?25h[?25l2 -ne 0 ], print $2 and exit.[12;10H[34h[?25h[?25l[39;1H:[34h[?25hwq=[?25l[39;4H[K[39;4H[34h[?25h[?25l"func_collection.sh" 23 lines, 898964 characters written[1;5H[K[2;1HExit_if_failed $UID "Does not have enough permission, please run as root"[2;74H[K[3;1H#if [ $UID -ne 0 ]; then
#    echo "Does not have enough permission, please run as root"
#    exit 1
#fi[7;1H[K[8;1H# Install docker-ce using distro's software manager
if grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[13;1H[K[14;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[16;9H[K[17;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    Exit_if_failed $(test $? -ne 1) "Failed to verify the fingerprint"[19;71H[K[20;1H    #if [ $? -eq 1 ]; then[20;27H[K[21;1H    #    echo "Failed to verify the fingerprint"
    #    exit 1
    #fi[24;1H[K[25;1H    echo -e "\nAdding docker-ce apt source"[25;44H[K[26;5Hadd-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    Exit_if_failed $? "Failed to add the docker debian source"
    #if [ $? -ne 0 ]; then[28;27H[K[29;5H#    echo "Failed to add the docker debian source"
    #    exit 1[30;16H[K[31;5H#fi[31;8H[K[33;16HInstalling docker-ce"[33;37H[K[34;8H update && apt install docker-ce docker-ce-cli containerd.io[34;68H[K[35;21H? "Failed to install docker-ce"[35;52H[K[36;5H[K[37;5Hecho -e "\nInstall completed"[37;34H[K[38;1Helse[38;5H[K[7;1H[34h[?25h[?25l[39;1H[K[39;1H:[34h[?25hjjjj[?25l[39;5H[K[39;5H[34h[?25h[?25l[39;4H[K[39;4H[34h[?25h[?25l[39;3H[K[39;3H[34h[?25h[?25l[39;2H[K[39;2H[34h[?25h [7;1H[?25l[39;1H:[34h[?25hsp func_collection.sh[?25l"func_collection.sh" [39;22H[K[39;22H23 lines, 898964 characters[1;1Hverify_docker_install() {
    echo -e "\nVerifing docker install"[2;40H[K[3;1H    docker run --rm hello-world
    exit_status=$?[4;19H[K[5;1H    docker rmi hello-world
    if [ $exit_status -ne 0 ]; then[7;9Hecho -e "\nDocker is not installed properly, something went wrong"
        exit 1[8;15H[K[9;1H    fi[9;7H[K[10;1H}[10;5H[K[11;5H[K[12;1Hrestart_docker() {[12;20H[K[13;5Hecho -e "\nRestarting docker"
    /etc/init.d/docker restart[14;31H[K[15;1H}[15;5H[K[17;1H# If [ $2 -ne 0 ], print $2 and exit.[17;38H[K[18;1HExit_if_failed() {[18;19H[K[19;1H[1m[7mfunc_collection.sh                                                                                                         [0m[20;1H#    echo "Does not have enough permission, please run as root"
#    exit 1[21;12H[K[22;1H#fi[22;5H[K[23;5H[K[24;1H# Install docker-ce using distro's software manager
if grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"[26;89H[K[27;5Hapt update && \[27;20H[K[28;5Hapt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[29;5H[K[30;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[33;16HVerifing fingerprint of the key"[34;8H-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"[35;21H(test $? -ne 1) "Failed to verify the fingerprint"
    #if [ $? -eq 1 ]; then
    #    echo "Failed to verify the fingerprint"
[7minstall-and-configure-docker.sh                                                                                            [1;1H[34h[?25h



[?25l[1;18r[0m[1;1H[5M[1;39r[14;5Hif [ $2 -ne 0 ]; then[15;9Hecho -e "$2"[16;9Hexit 1
    fi
}[39;1H[K[18;1H[34h[?25h[?25l[1;18r[18;1H
[1;39r[19;20H[1m[7m[+][18;1H[34h[?25h[?25l[1;18r[0m[18;1H
[1;39r[18;1H[34h[?25h[?25lE[34h[?25h[?25lv[34h[?25h[?25la[34h[?25h[?25ll[34h[?25h[?25l_[34h[?25h[?25la[34h[?25h[?25ln[34h[?25h[?25ld[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25la[34h[?25h[?25ln[34h[?25h[?25ld[34h[?25h[?25l_[34h[?25h[?25lE[34h[?25h[?25lx[34h[?25h[?25li[34h[?25h[?25lt[34h[?25h[?25l_[34h[?25h[?25li[34h[?25h[?25lf[34h[?25h[?25l_[34h[?25h[?25lf[34h[?25h[?25la[34h[?25h[?25li[34h[?25h[?25ll[34h[?25h[?25le[34h[?25h[?25ld[34h[?25h[?25l([34h[?25h[?25l)[34h[?25h[?25l [34h[?25h[?25l{[34h[?25h[?25l[1;18r[18;1H
[1;39r[18;1H[34h[?25h[?25l}[34h[?25h[?25lA[34h[?25h[?25lA[34h[?25h[?25l[1;18r[18;1H
[1;39r[18;1HA[34h[?25h[?25l[1;18r[18;1H
[1;39r[18;1H}[34h[?25h[17;1H[16;1H[15;1H[?25l[15;18r[18;1H
[1;39r[18;1H[1m[34m~                                                                                                                          [15;1H[34h[?25h[?25l[0m[39;1H1 more line; before #16  1 second ago[15;18r[15;1H[L[1;39r[15;1HEval_and_Exit_if_failed() {[39;1H[K[39;1H1 more line; before #16  1 second ago[15;1H[34h[?25h
[?25l
}
[1m[34m~                                                                                                                          [16;1H[34h[?25h[?25l[0m}
[1m[34m~                                                                                                                          [16;1H[34h[?25h[15;1H[?25l[15;18r[0m[15;1H[L[1;39r[39;1H[K[15;1H[34h[?25h[?25l#[34h[?25h[?25l [34h[?25h[?25lE[34h[?25h[?25lv[34h[?25h[?25la[34h[?25h[?25ll[34h[?25h[?25lu[34h[?25h[?25la[34h[?25h[?25ll[34h[?25h[?25lt[34h[?25h[?25le[34h[?25h[?25l [34h[?25h[?25la[34h[?25h[?25ln[34h[?25h[?25l [34h[?25h[?25le[34h[?25h[?25lx[34h[?25h[?25lp[34h[?25h[?25lr[34h[?25h[?25le[34h[?25h[?25ls[34h[?25h[?25ls[34h[?25h[?25li[34h[?25h[?25lo[34h[?25h[?25ln[34h[?25h[?25l.[34h[?25h[?25l [34h[?25h[?25lI[34h[?25h[?25lf[34h[?25h[?25l [34h[?25h[?25li[34h[?25h[?25lt[34h[?25h[?25l [34h[?25h[?25lf[34h[?25h[?25la[34h[?25h[?25li[34h[?25h[?25ll[34h[?25h[?25le[34h[?25h[?25ld[34h[?25h[?25l,[34h[?25h[?25l [34h[?25h[?25lp[34h[?25h[?25lr[34h[?25h[?25li[34h[?25h[?25ln[34h[?25h[?25lt[34h[?25h[?25l [34h[?25h[?25l[15;18r[15;1H[L[1;39r[15;1HD[34h[?25h[?25l[15;18r[15;1H[L[1;39r[15;1HD[34h[?25h
[15;1H[?25l[15;18r[18;1H
[1;39r[18;1H}[15;1H[34h[?25h[?25l[15;18r[18;1H
[1;39r[18;1H[1m[34m~                                                                                                                          [15;1H[34h[?25h[0m# [10C# [?25l[34h[?25h[?25l[7mEvalualte [34h[?25h[?25lan [34h[?25h[?25lexpression[34h[?25h[?25l[0mn[34h[?25h[?25l# . If it failed, print [15;25H[K[15;3H[34h[?25h[?25le. If it failed, print# e[34h[?25h[?25lv. If it failed, print# ev[34h[?25h[?25la. If it failed, print# eva[34h[?25h[?25ll. If it failed, print[15;7H[34h[?25h[?25l . If it failed, print[15;8H[34h[?25h[?25l$. If it failed, print[15;9H[34h[?25h[?25l[34h[?25h[?25l"[34h[?25h[?25l$. If it failed, print[15;10H[34h[?25h[?25l1. If it failed, print[15;11H[34h[?25h[?25l". If it failed, print[15;12H[34h[?25h[?25l[39;1H:[34h[?25hw[?25l"func_collection.sh" 27 lines, 898964 characters written[19;20H[1m[7m   [15;11H[34h[?25h[16;11H
[16;11H[15;11H[16;11H
[16;11H[15;11H[23C[?25l[0m$[19;20H[1m[7m[+][15;35H[34h[?25h[?25l[0m@[34h[?25h[?25l[34h[?25h[?25l2[34h[?25h[?25l [34h[?25h[?25la[34h[?25h[?25ln[34h[?25h[?25ld[34h[?25h[?25l [34h[?25h[?25le[34h[?25h[?25lx[34h[?25h[?25li[34h[?25h[?25lr[34h[?25h[?25l[34h[?25h[?25lt[34h[?25h[?25l.[34h[?25h[?25l[15;18r[15;1H[L[1;39r[15;1HB[39;1H[K[15;2H[34h[?25h
[15;1H[?25l[15;18r[18;1H
[1;39r[18;1H[1m[34m~                                                                                                                          [15;1H[34h[?25h
[?25l[0m[17;1H[K[18;1H}[18;2H[K[17;1H[34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25le[34h[?25h[?25lv[34h[?25h[?25la[34h[?25h[?25ll[34h[?25h[?25l [34h[?25h[?25l"[34h[?25h[?25l$[34h[?25h[?25l![34h[?25h[?25l[34h[?25h[?25l1[34h[?25h[?25l"[34h[?25h[?25l[18;1H[K[18;1H[34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25le[34h[?25h[?25lx[34h[?25h[?25li[34h[?25h[?25lt[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25lE[34h[?25h[?25lx[34h[?25h[?25li[34h[?25h[?25lt[34h[?25h[?25l_[34h[?25h[?25li[34h[?25h[?25lf[34h[?25h[?25l_[34h[?25h[?25lf[34h[?25h[?25la[34h[?25h[?25li[34h[?25h[?25ll[34h[?25h[?25le[34h[?25h[?25ld[34h[?25h[?25l [34h[?25h[?25l$[34h[?25h[?25l?[34h[?25h[?25l [34h[?25h[?25l$[34h[?25h[?25l[34h[?25h[?25l"[34h[?25h[?25l$[34h[?25h[?25l2[34h[?25h[?25l"[34h[?25h[17;13H[16;26H[15;26H[14;1H[13;1H[12;6H[11;14H[10;20H[9;25H[8;18H[7;26H[?25l -ne 0 ], print $2 and exit.[7;37H[K[7;9H[34h[?25h[?25l1 -ne 0 ], print $2 and exit.[7;10H[34h[?25h[?25l[7;18r[7;1H[L[1;39r[7;1HB[34h[?25h[?25l[7;18r[7;1H[L[1;39r[7;1HB[34h[?25h
[7;1H[?25l[7;18r[18;1H
[1;39r[18;5Heval "$1"[7;1H[34h[?25h[?25l[7;18r[18;1H
[1;39r[18;5HExit_if_failed $? "$2"[7;1H[34h[?25h

    if [ $[?25l -ne 0 ]; then[9;25H[K[9;11H[34h[?25h[?25l1 -ne 0 ]; then[9;12H[34h[?25h[?25l[39;1H:[34h[?25hw[?25l"func_collection.sh" 29 lines, 898964 characters written[19;20H[1m[7m   [9;11H[34h[?25h[?25l[1;18r[0m[18;1H
[1;39r[18;1H}[39;1H[K[17;5H[34h[?25h[?25l
[34h[?25h[?25l[39;1H:[34h[?25hq[?25l[1;1H[K[2;1HExit_if_failed $UID "Does not have enough permission, please run as root"
#if [ $UID -ne 0 ]; then[3;25H[K[4;1H#    echo "Does not have enough permission, please run as root"
#    exit 1
#fi[6;4H[K[7;1H[K[8;1H# Install docker-ce using distro's software manager
if grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common

    echo -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[16;5H[K[17;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    Exit_if_failed $(test $? -ne 1) "Failed to verify the fingerprint"[19;71H[K[20;1H    #if [ $? -eq 1 ]; then[20;27H[K[21;1H    #    echo "Failed to verify the fingerprint"
    #    exit 1
    #fi[24;1H[K[25;1H    echo -e "\nAdding docker-ce apt source"[25;44H[K[26;5Hadd-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    Exit_if_failed $? "Failed to add the docker debian source"
    #if [ $? -ne 0 ]; then[28;27H[K[29;5H#    echo "Failed to add the docker debian source"
    #    exit 1[30;16H[K[31;5H#fi[31;8H[K[33;16HInstalling docker-ce"[33;37H[K[34;8H update && apt install docker-ce docker-ce-cli containerd.io[34;68H[K[35;21H? "Failed to install docker-ce"[35;52H[K[36;5H[K[37;5Hecho -e "\nInstall completed"[37;34H[K[38;1Helse[38;5H[K[7;1H[34h[?25h











    [15C$([?25l(test $? -ne 1) "Failed to verify the fingerprint"[19;70H[K[19;20H[34h[?25h[?25ltest $? -ne 1) "Failed to verify the fingerprint"[19;69H[K[19;20H[34h[?25h[?25l"test $? -ne 1) "Failed to verify the fingerprint"[19;21H[34h[?25h[?25l[39;1H[K[39;1H:[34h[?25hw[?25l"install-and-configure-docker.sh" 82 lines, 898964 characters written[19;20H[34h[?25h"test $? -ne 1[?25l "Failed to verify the fingerprint"[19;69H[K[19;34H[34h[?25h[?25l" "Failed to verify the fingerprint"[19;35H[34h[?25h[?25l[39;1H[K[39;1H:[34h[?25hw[?25l"install-and-configure-docker.sh" 82 lines, 898964 characters written[19;34H[34h[?25h[?25l " "Failed to verify the fingerprint"[19;35H[34h[?25h[?25l]" "Failed to verify the fingerprint"[19;36H[34h[?25h[?25l[34h[?25h[?25l[7mes[34h[?25h[?25l[0mt $? -ne 1 ]" "Failed to verify the fingerprint"[19;69H[K[19;21H[34h[?25h[?25l $? -ne 1 ]" "Failed to verify the fingerprint"[19;68H[K[19;21H[34h[?25h[?25l[ $? -ne 1 ]" "Failed to verify the fingerprint"[19;22H[34h[?25h[?25l[39;1H[K[39;1H:[34h[?25hw[?25l"install-and-configure-docker.sh" 82 lines, 898964 characters written[19;21H[34h[?25h[20;21H[21;21H[22;15H[23;7H
[23;7H[22;15H[21;21H[20;21H[21;21H[22;15H[23;7H
[25;21H[26;21H[27;21H[28;21H[29;21H[30;15H[31;7H
[33;21H[34;21H[35;21H
[37;21H
els[?25l[1;38r[38;1H
[1;39r[38;5Hecho "Distribution not supported"[39;1H[K[38;21H[34h[?25h[?25l[1;38r[38;1H
[1;39r[38;5Hexit 1[34h[?25h[?25l[1;38r[38;1H
[1;39r[38;1Hfi[34h[?25h[37;10H[36;21H[35;4H[34;21H[33;1H[32;21H
[34;21H
els[36;21H[37;10H[?25l[1;38r[1;1H[19M[1;39r[21;1Hverify_docker_install

echo -e "\nStart to configure docker\nEnable usernamespace first"
sysctl >/dev/null 2>&1

Exit_if_failed [ $? -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"

#if [ $? -eq 127 ]; then
#    echo -e "\nCommand 'sysctl' not found and thus cannot enable user namespace"
#    exit 1
#fi

sysctl -w kernel.unprivileged_userns_clone=1

echo -e "\nEnabling user remap feature in docker using user namespace"
echo -e '{\n    "userns-remap": "default"\n}'>/etc/docker/daemon.json

restart_docker[37;1H[34h[?25h[36;1H[35;1H[34;1H[33;1H[32;1H[31;1H[30;1H[29;1H[28;1H[27;1H[26;1H[?25lEExit_if_failed [ $? -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"E[34h[?25h[?25lvExit_if_failed [ $? -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"Ev[34h[?25h[?25laExit_if_failed [ $? -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"Eva[34h[?25h[?25llExit_if_failed [ $? -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"Eval[34h[?25h[?25luExit_if_failed [ $? -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"Evalu[34h[?25h[?25llExit_if_failed [ $? -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[26;7H[34h[?25h[?25laExit_if_failed [ $? -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[26;8H[34h[?25h[?25ltExit_if_failed [ $? -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[26;9H[34h[?25h[?25leExit_if_failed [ $? -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[26;10H[34h[?25h[?25l_Exit_if_failed [ $? -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[26;11H[34h[?25h[?25laExit_if_failed [ $? -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[26;12H[34h[?25h[?25lnExit_if_failed [ $? -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[26;13H[34h[?25h[?25ldExit_if_failed [ $? -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[26;14H[34h[?25h[?25l_Exit_if_failed [ $? -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[26;15H[34h[?25h[?25leExit_if_failed [ $? -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[26;16H[34h[?25h[?25l[26;38r[26;1H[L[1;39r[26;1HC[34h[?25h
[30C[ [?25lxit_if_failed [ $? -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[27;113H[K[27;16H[34h[?25h[26;1H[?25l[26;38r[38;1H
[1;39r[38;1Hrestart_docker[26;1H[34h[?25h[?25l[39;1H:[34h[?25hw[?25l"install-and-configure-docker.sh" 82 lines, 898964 characters written[26;1H[34h[?25h[?25l[39;1H[K[39;1H:[34h[?25hsp func_collection.sh[?25l"func_collection.sh" [39;22H[K[39;22H29 lines, 898964 characters[1;1Hverify_docker_install() {
    echo -e "\nVerifing docker install"
    docker run --rm hello-world[3;33H[K[4;5Hexit_status=$?[4;19H[K[5;5Hdocker rmi hello-world[5;27H[K[6;5Hif [ $exit_status -ne 0 ]; then
        echo -e "\nDocker is not installed properly, something went wrong"
        exit 1[8;15H[K[9;5Hfi[9;7H[K[10;1H}[11;5H[K[12;1Hrestart_docker() {[12;19H[K[13;5Hecho -e "\nRestarting docker"[13;34H[K[14;5H/etc/init.d/docker restart
}[15;5H[K[16;1H[K[17;1H# If [ $1 -ne 0 ], print $2 and exit.
Exit_if_failed() {
[1m[7mfunc_collection.sh                                                                                                         [0m[21;1H    echo -e "\nInstall completed"
else
    echo "Distribution not supported"[23;38H[K[24;1H    exit 1[24;11H[K[25;1Hfi[26;1H[K[27;1Hverify_docker_install[28;1H[K[29;1Hecho -e "\nStart to configure docker\nEnable usernamespace first"[29;67H[K[30;1Hsysctl >/dev/null 2>&1[31;1H[K[32;1HEvalulate_and_exit_if_failed [ $? -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[33;1H[K[34;1H#if [ $? -eq 127 ]; then
#    echo -e "\nCommand 'sysctl' not found and thus cannot enable user namespace"
#    exit 1[36;12H[K[37;1H#fi
[7minstall-and-configure-docker.sh                                                                                            [1;1H[34h[?25h[?25l[1;18r[0m[1;1H[9M[1;39r[10;5Hif [ $1 -ne 0 ]; then[11;9Hecho -e "$2"[12;9Hexit 1
    fi
}

# eval "$1". If it failed, print $2 and exit.
Eval_and_Exit_if_failed() {
    eval "$1"[39;1H[K[1;1H[34h[?25h[?25l[1;18r[1;1H[2M[1;39r[17;5HExit_if_failed $? "$2"
}[8;5H[34h[?25h[?25l[17;5H[34h[?25h[16;5H[15;5H[?25l[39;1H:[34h[?25hq[?25l[1;1H    #fi[1;8H[K[2;5H[K[3;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    Exit_if_failed $? "Failed to add the docker debian source"
    #if [ $? -ne 0 ]; then[6;27H[K[7;1H    #    echo "Failed to add the docker debian source"
    #    exit 1[8;17H[K[9;5H#fi[9;9H[K[10;9H[K[11;5Hecho -e "\nInstalling docker-ce"
    apt update && apt install docker-ce docker-ce-cli containerd.io
    Exit_if_failed $? "Failed to install docker-ce"[14;1H[K[15;1H    echo -e "\nInstall completed"
else[16;5H[K[17;5Hecho "Distribution not supported"
    exit 1
fi[19;3H[K[21;1Hverify_docker_instal[21;22H[K[22;1H[K[23;1Hecho -e "\nStart to configure docker\nEnable usernamespace first"
sysctl >/dev/null 2>&1[25;1H[K[26;1HEvalulate_and_exit_if_failed [ $? -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[27;1H[K[28;1H#if [ $? -eq 127 ]; then
#    echo -e "\nCommand 'sysctl' not found and thus cannot enable user namespace"
#    exit 1[30;12H[K[31;1H#fi[32;1H[K[33;1Hsysctl -w kernel.unprivileged_userns_clone=1[34;1H[K[35;1Hecho -e "\nEnabling user remap feature in docker using user namespace"[35;72H[K[36;1Hecho -e '{\n    "userns-remap": "default"\n}'>/etc/docker/daemon.json[37;1H[K[38;1Hrestart_docker[38;15H[K[26;1H[34h[?25hEval[?25llate_and_exit_if_failed [ $? -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[26;112H[K[26;5H[34h[?25h[?25late_and_exit_if_failed [ $? -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[26;111H[K[26;5H[34h[?25h[?25lte_and_exit_if_failed [ $? -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[26;110H[K[26;5H[34h[?25h[?25le_and_exit_if_failed [ $? -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[26;109H[K[26;5H[34h[?25h[?25l_and_exit_if_failed [ $? -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[26;108H[K[26;5H[34h[?25h_and_[?25lxit_if_failed [ $? -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[26;107H[K[26;10H[34h[?25h[?25lExit_if_failed [ $? -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[26;11H[34h[?25h[?25l[39;1H[K[39;1H:[34h[?25hw[?25l"install-and-configure-docker.sh" 82 lines, 898964 characters written[26;10H[34h[?25h[15C[ [?25l"[ $? -ne 127 ] "\nCommand 'sysctl' not found and thus cannot enable user namespace"[26;26H[34h[?25h"[ $? -ne 127 ][?25l" "\nCommand 'sysctl' not found and thus cannot enable user namespace"[26;41H[34h[?25h[?25l[39;1H[K[39;1H:[34h[?25hw[?25l"install-and-configure-docker.sh" 82 lines, 898964 characters written[26;40H[34h[?25h
[28;24H[29;40H[30;11H
#f
[33;40H
[35;40H[36;40H
[38;14H[?25l[1;38r[38;1H
[1;39r[39;1H[K[38;1H[34h[?25h[?25l[1;38r[38;1H
[1;39r[38;1Hecho -e "Verifing the user remap feature"[34h[?25h[?25l[1;38r[38;1H
[1;39r[38;1Hid dockremap[34h[?25h[?25l[1;38r[38;1H
[1;39r[38;1HExit_if_failed $? "\nDockerd failed to create dockremap user"[38;40H[34h[?25h[?25l[1;38r[38;1H
[1;39r[38;1H[34h[?25h[?25l[1;38r[38;1H
[1;39r[38;1H#if [ $? -ne 0 ]; then[34h[?25h[?25l[1;38r[38;1H
[1;39r[38;1H#    echo -e "\nDockerd failed to create dockremap user"[38;40H[34h[?25h[?25l[1;38r[38;1H
[1;39r[38;1H#    exit 1[34h[?25h[?25l[1;38r[38;1H
[1;39r[38;1H#fi[34h[?25h[?25l[1;38r[38;1H
[1;39r[38;1H[34h[?25h[?25l[1;38r[38;1H
[1;39r[38;1Hgrep dockremap /etc/subuid && grep dockremap /etc/subgid[38;40H[34h[?25h[?25l[1;38r[38;1H
[1;39r[38;1HExit_if_failed $? "\nDockerd failed to setup user remap feature properly"[38;40H[34h[?25h[?25l[1;38r[38;1H
[1;39r[38;1H[34h[?25h[?25l[1;38r[38;1H
[1;39r[38;1H#if [ $? -ne 0 ]; then[34h[?25h[?25l[1;38r[38;1H
[1;39r[38;1H#    echo -e "\nDockerd failed to setup user remap feature properly"[38;40H[34h[?25h[?25l[1;38r[38;1H
[1;39r[38;1H#    exit 1[34h[?25h[?25l[1;38r[38;1H
[1;39r[38;1H#fi[34h[?25h[37;11H[36;40H[35;22H[34;1H[33;40H[32;40H[31;1H[30;3H[29;11H[28;40H[27;22H[26;1H[25;40H
[27;22H[28;40H[29;11H
#f
[32;40H[33;40H
[35;22H[36;40H[37;11H
#f[?25l[1;38r[38;1H
[1;39r[38;1H[34h[?25h[?25l[1;38r[38;1H
[1;39r[38;1Hverify_docker_install[34h[?25h[?25l
:[34h[?25hq[?25l[39;1H[K[39;1H[?1l>[34h[?25h[?1049l[01;32mpi@raspberrypi[00m:[01;34m~/docker_images $[00m s[K./int[Kstall-and-configure-docker.sh 
Does not have enough permission, please run as root
[01;32mpi@raspberrypi[00m:[01;34m~/docker_images $[00m sudo ./install-and-configure-docker.sh 

Install necessary softwares for adding docker-ce apt source with gpg key
[33m0% [Working][0m[33m0% [Connecting to raspbian.raspberrypi.org (2a00:1098:0:80:1000:75:0:3)] [Waiting for headers][0m                                                                                              Hit:1 http://archive.raspberrypi.org/debian buster InRelease
[33m                                                                                              0% [Waiting for headers][0m                        Hit:2 http://raspbian.raspberrypi.org/raspbian buster InRelease
[33m                        0% [Working][0m[33m0% [Working][0m[33m20% [Working][0m             Reading package lists... 0%Reading package lists... 0%Reading package lists... 0%Reading package lists... 40%Reading package lists... 67%Reading package lists... 96%Reading package lists... 97%Reading package lists... 97%Reading package lists... 97%Reading package lists... 97%Reading package lists... 98%Reading package lists... 98%Reading package lists... 98%Reading package lists... 98%Reading package lists... 99%Reading package lists... 99%Reading package lists... Done
Building dependency tree... 0%Building dependency tree... 0%Building dependency tree... 0%Building dependency tree... 50%Building dependency tree... 50%Building dependency tree       
Reading state information... 0%Reading state information... 0%Reading state information... Done
All packages are up to date.
Reading package lists... 0%Reading package lists... 100%Reading package lists... Done
Building dependency tree... 0%Building dependency tree... 0%Building dependency tree... 50%Building dependency tree... 50%Building dependency tree       
Reading state information... 0%Reading state information... 0%Reading state information... Done
apt-transport-https is already the newest version (1.8.2).
ca-certificates is already the newest version (20190110).
curl is already the newest version (7.64.0-4).
gnupg2 is already the newest version (2.2.12-1+rpi1).
software-properties-common is already the newest version (0.96.20.2-2).
0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.

Installing fingerprint for docker-ce source
OK

Verifing fingerprint of the key
./func_collection.sh: line 19: [: too many arguments

Adding docker-ce apt source
Traceback (most recent call last):
  File "/usr/bin/add-apt-repository", line 95, in <module>
    sp = SoftwareProperties(options=options)
  File "/usr/lib/python3/dist-packages/softwareproperties/SoftwareProperties.py", line 109, in __init__
    self.reload_sourceslist()
  File "/usr/lib/python3/dist-packages/softwareproperties/SoftwareProperties.py", line 599, in reload_sourceslist
    self.distro.get_sources(self.sourceslist)    
  File "/usr/lib/python3/dist-packages/aptsources/distro.py", line 93, in get_sources
    (self.id, self.codename))
aptsources.distro.NoDistroTemplateException: Error: could not find a distribution template for Raspbian/buster
Failed to add the docker debian source
[01;32mpi@raspberrypi[00m:[01;34m~/docker_images $[00m vi install-and-configure-docker.sh 
[?1049h[?1h=[1;39r[23m[24m[0m[H[J[?25l[39;1H"install-and-configure-docker.sh" 82 lines, 898964 characters[1;1H#!/usr/bin/env bash

source ./func_collection.sh

Exit_if_failed $UID "Does not have enough permission, please run as root"
#if [ $UID -ne 0 ]; then
#    echo "Does not have enough permission, please run as root"
#    exit 1
#fi

# Install docker-ce using distro's software manager
if grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[17;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[20;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    Exit_if_failed "[ $? -ne 1 ]" "Failed to verify the fingerprint"
    #if [ $? -eq 1 ]; then
    #    echo "Failed to verify the fingerprint"
    #    exit 1
    #fi[28;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    Exit_if_failed $? "Failed to add the docker debian source"
    #if [ $? -ne 0 ]; then
    #    echo "Failed to add the docker debian source"
    #    exit 1
    #fi[36;5Hecho -e "\nInstalling docker-ce"
    apt update && apt install docker-ce docker-ce-cli containerd.io
    Exit_if_failed $? "Failed to install docker-ce"[1;1H[34h[?25h




















    [?25lEExit_if_failed "[ $? -ne 1 ]" "Failed to verify the fingerprint"    E[34h[?25h[?25lvExit_if_failed "[ $? -ne 1 ]" "Failed to verify the fingerprint"[22;7H[34h[?25h[?25laExit_if_failed "[ $? -ne 1 ]" "Failed to verify the fingerprint"[22;8H[34h[?25h[?25llExit_if_failed "[ $? -ne 1 ]" "Failed to verify the fingerprint"[22;9H[34h[?25h[?25l_Exit_if_failed "[ $? -ne 1 ]" "Failed to verify the fingerprint"[22;10H[34h[?25h[?25laExit_if_failed "[ $? -ne 1 ]" "Failed to verify the fingerprint"[22;11H[34h[?25h[?25lnExit_if_failed "[ $? -ne 1 ]" "Failed to verify the fingerprint"[22;12H[34h[?25h[?25ldExit_if_failed "[ $? -ne 1 ]" "Failed to verify the fingerprint"[22;13H[34h[?25h[?25l_Exit_if_failed "[ $? -ne 1 ]" "Failed to verify the fingerprint"[22;14H[34h[?25h[?25l[39;1H[K[39;1H:[34h[?25hwq[?25l"install-and-configure-docker.sh" 82 lines, 898964 characters written
[?1l>[34h[?25h[?1049l[01;32mpi@raspberrypi[00m:[01;34m~/docker_images $[00m sudvi install-and-configure-docker.sh [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[4@sudo ./[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C

Install necessary softwares for adding docker-ce apt source with gpg key
[33m0% [Working][0m[33m0% [Waiting for headers] [Waiting for headers][0m                                              Hit:1 http://raspbian.raspberrypi.org/raspbian buster InRelease
[33m                                              0% [Waiting for headers][0m                        Hit:2 http://archive.raspberrypi.org/debian buster InRelease
[33m                        0% [Working][0m[33m0% [Working][0m[33m20% [Working][0m             Reading package lists... 0%Reading package lists... 0%Reading package lists... 0%Reading package lists... 19%Reading package lists... 48%Reading package lists... 75%Reading package lists... 97%Reading package lists... 97%Reading package lists... 97%Reading package lists... 97%Reading package lists... 98%Reading package lists... 98%Reading package lists... 98%Reading package lists... 98%Reading package lists... 99%Reading package lists... 99%Reading package lists... Done
Building dependency tree... 0%Building dependency tree... 0%Building dependency tree... 0%Building dependency tree... 50%Building dependency tree... 50%Building dependency tree       
Reading state information... 0%Reading state information... 0%Reading state information... Done
All packages are up to date.
Reading package lists... 0%Reading package lists... 100%Reading package lists... Done
Building dependency tree... 0%Building dependency tree... 0%Building dependency tree... 50%Building dependency tree... 50%Building dependency tree       
Reading state information... 0%Reading state information... 0%Reading state information... Done
apt-transport-https is already the newest version (1.8.2).
ca-certificates is already the newest version (20190110).
curl is already the newest version (7.64.0-4).
gnupg2 is already the newest version (2.2.12-1+rpi1).
software-properties-common is already the newest version (0.96.20.2-2).
0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.

Installing fingerprint for docker-ce source
OK

Verifing fingerprint of the key

Adding docker-ce apt source
Traceback (most recent call last):
  File "/usr/bin/add-apt-repository", line 95, in <module>
    sp = SoftwareProperties(options=options)
  File "/usr/lib/python3/dist-packages/softwareproperties/SoftwareProperties.py", line 109, in __init__
    self.reload_sourceslist()
  File "/usr/lib/python3/dist-packages/softwareproperties/SoftwareProperties.py", line 599, in reload_sourceslist
    self.distro.get_sources(self.sourceslist)    
  File "/usr/lib/python3/dist-packages/aptsources/distro.py", line 93, in get_sources
    (self.id, self.codename))
aptsources.distro.NoDistroTemplateException: Error: could not find a distribution template for Raspbian/buster
Failed to add the docker debian source
[01;32mpi@raspberrypi[00m:[01;34m~/docker_images $[00m s[Kvi func_collection.sh 
[?1049h[?1h=[1;39r[23m[24m[0m[H[J[?25l[39;1H"func_collection.sh" 29 lines, 898964 characters[1;1Hverify_docker_install() {
    echo -e "\nVerifing docker install"
    docker run --rm hello-world
    exit_status=$?
    docker rmi hello-world
    if [ $exit_status -ne 0 ]; then[7;9Hecho -e "\nDocker is not installed properly, something went wrong"[8;9Hexit 1
    fi
}

restart_docker() {
    echo -e "\nRestarting docker"
    /etc/init.d/docker restart
}

# If [ $1 -ne 0 ], print $2 and exit.
Exit_if_failed() {
    if [ $1 -ne 0 ]; then[20;9Hecho -e "$2"[21;9Hexit 1
    fi
}

# eval "$1". If it failed, print $2 and exit.
Eval_and_Exit_if_failed() {
    eval "$1"
    Exit_if_failed $? "$2"
}
[1m[34m~                                                                                                                          [31;1H~                                                                                                                          [32;1H~                                                                                                                          [33;1H~                                                                                                                          [34;1H~                                                                                                                          [35;1H~                                                                                                                          [36;1H~                                                                                                                          [37;1H~                                                                                                                          [38;1H~                                                                                                                          [1;1H[34h[?25h





[6;1H[5;1H[?25l[6;38r[0m[6;1H[L[1;39r[39;1H[K[6;1H[34h[?25h[?25lE[34h[?25h[?25l[34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25lE[34h[?25h[?25lx[34h[?25h[?25li[34h[?25h[?25lr[34h[?25h[?25l[34h[?25h[?25lt[34h[?25h[?25l_[34h[?25h[?25lf[34h[?25h[?25l[34h[?25h[?25li[34h[?25h[?25lf[34h[?25h[?25l_[34h[?25h[?25lf[34h[?25h[?25la[34h[?25h[?25li[34h[?25h[?25ll[34h[?25h[?25le[34h[?25h[?25ld[34h[?25h[?25l [34h[?25h[?25l$[34h[?25h[?25l?[34h[?25h[?25l [34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25le[34h[?25h[?25lx[34h[?25h[?25li[34h[?25h[?25lt[34h[?25h[?25l_[34h[?25h[?25ls[34h[?25h[?25lt[34h[?25h[?25la[34h[?25h[?25lt[34h[?25h[?25lu[34h[?25h[?25ls[34h[?25h[?25l [34h[?25h[7;32H[8;32H[8;19H[?25l[34h[?25h[?25l[7m"\[34h[?25h[?25lnDocker [34h[?25h[?25lis [34h[?25h[?25lnot [34h[?25h[?25linstalled [34h[?25h[?25lproperly[34h[?25h[?25l, [34h[?25h[?25lsomething [34h[?25h[?25lwent [34h[?25h[?25lwrong[34h[?25h[?25l[0m[8;17H"\nDocker is not installed properly, something went wrong[8;17H[34h[?25h[7;17H[6;17H[16C[?25l "\nDocker is not installed properly, something went wrong"[34h[?25h[?25l[7;38r[7;1H[L[1;39r[7;1H[34h[?25h[6;1H[5;1H[?25l[6;38r[6;1H[L[1;39r[6;1H[34h[?25h[?25l[39;1H:[34h[?25hw[?25l"func_collection.sh" 32 lines, 898964 characters written[6;1H[34h[?25h[5;1H[4;1H[3;1H[2;1H[?25l[3;38r[3;1H[L[1;39r[39;1H[K[3;1H[34h[?25h[?25l[39;1H:[34h[?25hW[?25l[1m[37m[41mE492: Not an editor command: W[3;1H[34h[?25h

[4;1H[?25l[5;38r[0m[5;1H[L[1;39r[39;1H[K[5;1H[34h[?25h[?25l[39;1H:[34h[?25hw[?25l"func_collection.sh" 34 lines, 898964 characters written[5;1H[34h[?25h
[5;1H[?25l[5;38r[38;1H
[1;39r[38;1H[1m[34m~                                                                                                                          [0m[39;1H[K[5;5H[34h[?25h[?25l[6;38r[6;1H[L[1;39r[6;1H[34h[?25h[?25l[39;1H:[34h[?25hw[?25l"func_collection.sh" 34 lines, 898964 characters written[6;1H[34h[?25h


[8;1H[7;1H[6;1H




     [?25l[34h[?25h[?25l[7mi
[0m    [34h[?25h[?25l[7m 
[0m    [34h[?25h[?25l[7m 
[0m    [34h[?25h[?25l[11;5Hi
     
     [11;5H[34h[?25h[?25l#if [ $exit_status -ne 0 ]; then    #[34h[?25h[?25l
    #    echo -e "\nDocker is not installed properly, something went wrong"
    #    exit 1
    #fi[11;5H[34h[?25h[?25l[39;1H[K[39;1H:[34h[?25hwq[?25l"func_collection.sh" 34 lines, 898964 characters written
[?1l>[34h[?25h[?1049l[01;32mpi@raspberrypi[00m:[01;34m~/docker_images $[00m a[Kgit addd[K func_collection.sh 
[01;32mpi@raspberrypi[00m:[01;34m~/docker_images $[00m git add install-and-configure-docker.sh 
[01;32mpi@raspberrypi[00m:[01;34m~/docker_images $[00m git commit
hint: Waiting for your editor to close the file... (B)0[?1049h[1;39r[m[4l[39;49m[?1h=[?1h=[?1h=[?25l[39;49m[m[H[J[37;54H[0;7m[ Reading File ][m[37;60H[0;7m 14 lines ][m[H[0;7m  GNU nano 3.2                            /home/pi/docker_images/.git/COMMIT_EDITMSG                                       [1;122H[m[38d[0;7m^G[m Get Help    [0;7m^O[m Write Out   [0;7m^W[m Where Is    [0;7m^K[m Cut Text    [0;7m^J[m Justify     [0;7m^C[m Cur Pos     [0;7mM-U[m Undo[106G[0;7mM-A[m Mark Text[39d[0;7m^X[m Exit[39;16H[0;7m^R[m Read File   [0;7m^\[m Replace     [0;7m^U[m Uncut Text  [0;7m^T[m To Spell    [0;7m^_[m Go To Line  [0;7mM-E[m Redo[106G[0;7mM-6[m Copy TextMM[4d[39;49m[36m# Please enter the commit message for your changes. Lines starting[5d# with '#' will be ignored, and an empty message aborts the commit.[6d#[7d# On branch master[8d# Your branch is up to date with 'origin/master'.[9d#[10d# Changes to be committed:[11d#       modified:   func_collection.sh[12d#       modified:   install-and-configure-docker.sh[13d#[14d# Untracked files:[15d#       typescript[16d#[3d[39m[m[34h[?25h[?25l[1;114H[0;7mModified[m[3dA[34h[?25h[?25ld[34h[?25h[?25ld[34h[?25h[?25ln[34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25ln[34h[?25h[?25le[34h[?25h[?25lw[34h[?25h[?25l [34h[?25h[?25lf[34h[?25h[?25lu[34h[?25h[?25ln[34h[?25h[?25lc[34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25lc[34h[?25h[?25lo[34h[?25h[?25ln[34h[?25h[?25lv[34h[?25h[?25le[34h[?25h[?25li[34h[?25h[?25l [34h[?25h[?25ln[37d[K[3;15H[34h[?25h[?25li[34h[?25h[?25le[34h[?25h[?25ln[34h[?25h[?25lt[34h[?25h[?25l [34h[?25h[?25lf[34h[?25h[?25lu[34h[?25h[?25ln[34h[?25h[?25lc[34h[?25h[?25lt[34h[?25h[?25li[34h[?25h[?25lo[34h[?25h[?25ln[34h[?25h[?25l [34h[?25h[?25lE[34h[?25h[?25lx[34h[?25h[?25li[34h[?25h[?25lt[34h[?25h[?25l_[34h[?25h[?25li[34h[?25h[?25lf[34h[?25h[?25l_[34h[?25h[?25lf[34h[?25h[?25la[34h[?25h[?25li[34h[?25h[?25ll[34h[?25h[?25le[34h[?25h[?25ld[34h[?25h[?25l [34h[?25h[?25la[34h[?25h[?25ln[34h[?25h[?25ld[34h[?25h[?25l [34h[?25h[?25lE[34h[?25h[?25lv[34h[?25h[?25la[34h[?25h[?25ll[34h[?25h[?25l_[34h[?25h[?25la[34h[?25h[?25ln[34h[?25h[?25ld[34h[?25h[?25l_[34h[?25h[?25le[34h[?25h[?25li[34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25lE[34h[?25h[?25lx[34h[?25h[?25li[34h[?25h[?25lt[34h[?25h[?25l_[34h[?25h[?25li[34h[?25h[?25lf[34h[?25h[?25l_[34h[?25h[?25lf[34h[?25h[?25la[34h[?25h[?25li[34h[?25h[?25ll[34h[?25h[?25le[34h[?25h[?25ld[34h[?25h[?25l [34h[?25h[?25lt[34h[?25h[?25lo[34h[?25h[?25l [34h[?25h[?25lf[34h[?25h[?25lu[34h[?25h[?25ln[34h[?25h[?25lc[34h[?25h[?25l_[34h[?25h[?25lc[34h[?25h[?25lo[34h[?25h[?25ll[34h[?25h[?25ll[34h[?25h[?25le[34h[?25h[?25lc[34h[?25h[?25lt[34h[?25h[?25li[34h[?25h[?25lo[34h[?25h[?25ln[34h[?25h[?25l.[34h[?25h[?25ls[34h[?25h[?25lh[34h[?25h[?25l7[4;37r8[4dM[1;39r[4;1H[34h[?25h[?25l[4;37r[37;1H
[1;39r[3;93H[34h[?25h[?25l.[34h[?25h[?25l7[4;37r8[4dM[1;39r[4;1H[34h[?25h[?25lU[34h[?25h[?25ls[34h[?25h[?25le[34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l[K[34h[?25h[?25l7[4;37r8M[1;39r[5;1H[34h[?25h[?25lU[34h[?25h[?25lS[34h[?25h[?25le[34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25ls[34h[?25h[?25le[34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l[K[34h[?25h[?25l[4;37r[37;1H
[1;39r[4;1H[34h[?25h[?25l[4;37r[37;1H
[1;39r[3;94H[34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25la[34h[?25h[?25ln[34h[?25h[?25ld[34h[?25h[?25l7[4;37r8[4dM[1;39r[4;1H[34h[?25h[?25lu[34h[?25h[?25ls[34h[?25h[?25le[34h[?25h[?25l [34h[?25h[?25lt[34h[?25h[?25lh[34h[?25h[?25le[34h[?25h[?25ls[34h[?25h[?25le[34h[?25h[?25l [34h[?25h[?25lf[34h[?25h[?25lu[34h[?25h[?25ln[34h[?25h[?25lc[34h[?25h[?25lt[34h[?25h[?25li[34h[?25h[?25lo[34h[?25h[?25ln[34h[?25h[?25ls[34h[?25h[?25l [34h[?25h[?25li[34h[?25h[?25ln[34h[?25h[?25l [34h[?25h[?25lf[34h[?25h[?25lu[34h[?25h[?25lc[34h[?25h[?25l [34h[?25h[?25ln[34h[?25h[?25lc[34h[?25h[?25l_[34h[?25h[?25lc[34h[?25h[?25lo[34h[?25h[?25ll[34h[?25h[?25ll[34h[?25h[?25le[34h[?25h[?25lc[34h[?25h[?25lt[34h[?25h[?25li[34h[?25h[?25lo[34h[?25h[?25ln[34h[?25h[?25l.[34h[?25h[?25ls[34h[?25h[?25lh[34h[?25h[?25l [34h[?25h[?25la[34h[?25h[?25ln[34h[?25h[?25ld[34h[?25h[?25l [34h[?25h[?25li[34h[?25h[?25ln[34h[?25h[?25ls[34h[?25h[?25lt[34h[?25h[?25la[34h[?25h[?25ll[34h[?25h[?25ll[34h[?25h[?25l_[34h[?25h[?25l [34h[?25h[?25l-[34h[?25h[?25la[34h[?25h[?25ln[34h[?25h[?25ld[34h[?25h[?25l-[34h[?25h[?25lc[34h[?25h[?25lo[34h[?25h[?25ln[34h[?25h[?25lf[34h[?25h[?25li[34h[?25h[?25lg[34h[?25h[?25lu[34h[?25h[?25lr[34h[?25h[?25le[34h[?25h[?25l-[34h[?25h[?25ld[34h[?25h[?25lo[34h[?25h[?25lc[34h[?25h[?25le[34h[?25h[?25lr[34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25lk[34h[?25h[?25le[34h[?25h[?25lr[34h[?25h[?25l.[34h[?25h[?25ls[34h[?25h[?25lh[34h[?25h[?25l.[34h[?25h[?25l7[5;37r8[5dM[1;39r[5;1H[34h[?25h[?25l7[5;37r8M[1;39r[6;1H[34h[?25h[?25lA[34h[?25h[?25l[K[34h[?25h[?25l[5;37r[37;1H
[1;39r[5;1H[34h[?25h[?25l7[5;37r8M[1;39r[6;1H[34h[?25h[?25l[37d[0;7mSave modified buffer?  (Answering "No" will DISCARD changes.)                                                              [38;1H Y[m Yes[K[39d[0;7m N[m No  [39;16H [0;7m^C[m Cancel[K[37;63H[34h[?25h[?25l[J[39;123H[34h[?25h[39;1H[?1049l[?1l>[KAborting commit due to empty commit message.
[01;32mpi@raspberrypi[00m:[01;34m~/docker_images $[00m vi install-and-configure-docker.sh 
[?1049h[?1h=[1;39r[23m[24m[0m[H[J[?25l[39;1H"install-and-configure-docker.sh" 82 lines, 898964 characters[1;1H#!/usr/bin/env bash

source ./func_collection.sh

Exit_if_failed $UID "Does not have enough permission, please run as root"
#if [ $UID -ne 0 ]; then
#    echo "Does not have enough permission, please run as root"
#    exit 1
#fi

# Install docker-ce using distro's software manager
if grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && \
    apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[17;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[20;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    Eval_and_Exit_if_failed "[ $? -ne 1 ]" "Failed to verify the fingerprint"
    #if [ $? -eq 1 ]; then
    #    echo "Failed to verify the fingerprint"
    #    exit 1
    #fi[28;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    Exit_if_failed $? "Failed to add the docker debian source"
    #if [ $? -ne 0 ]; then
    #    echo "Failed to add the docker debian source"
    #    exit 1
    #fi[36;5Hecho -e "\nInstalling docker-ce"
    apt update && apt install docker-ce docker-ce-cli containerd.io
    Exit_if_failed $? "Failed to install docker-ce"[1;1H[34h[?25h














[15;1H[14;1H
[14;19H[?25l[34h[?25h[?25l[7m\ 
    apt install -y[34h[?25h[?25l[0my[34h[?25h[?25l-[34h[?25h[?25l[15;9Hinstall [15;9H[34h[?25h[?25lapt [34h[?25h[?25l[14;19H\[14;20H[K[15;1H    [14;19H[34h[?25h[?25l[7m\[34h[?25h[?25l 
    [34h[?25h[?25l[0m [34h[?25h[?25l[14;38r[38;1H
[1;39r[14;1H    apt update && apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[39;1H[K[14;19H[34h[?25h[13;19H[14;19H[?25l[15;38r[15;1H[L[1;39r[15;1H[34h[?25h[?25lE[34h[?25h[?25l[34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25lE[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l【[34h[?25h[?25ld[34h[?25h[?25ld d[34h[?25h[?25ld[34h[?25h[?25ld[34h[?25h[?25l[34h[?25h[?25l[15;8H[K[15;7H[34h[?25h
[15;7H[?25l[15;38r[38;1H
[1;39r[15;1H[34h[?25h









[?25l[39;1H:[34h[?25hw[?25l"install-and-configure-docker.sh" 81 lines, 898964 characters written[25;1H[34h[?25h









    
    apt [7C&& [?25l&& apt install docker-ce docker-ce-cli containerd.io[36;67H[K[36;15H[34h[?25h[?25l& apt install docker-ce docker-ce-cli containerd.io[36;66H[K[36;15H[34h[?25h[?25l apt install docker-ce docker-ce-cli containerd.io[36;65H[K[36;15H[34h[?25h[?25lapt install docker-ce docker-ce-cli containerd.io[36;64H[K[36;15H[34h[?25h[?25l[36;15H[K[37;1Hapt install docker-ce docker-ce-cli containerd.io[37;50H[K[38;5HExit_if_failed $? "Failed to install docker-ce"[37;1H[34h[?25h[?25l apt install docker-ce docker-ce-cli containerd.io [34h[?25h[?25l apt install docker-ce docker-ce-cli containerd.io  [34h[?25h[?25l apt install docker-ce docker-ce-cli containerd.io   [34h[?25h[?25l apt install docker-ce docker-ce-cli containerd.io    [34h[?25h
   [?25l[38;5H[K[38;1H[34h[?25h[?25l[39;1H[K[39;1H:[34h[?25hw[?25l"install-and-configure-docker.sh" 81 lines, 898964 characters written[38;1H[34h[?25h[?25l[1;38r[38;1H
[1;39r[38;5Hecho -e "\nInstall completed"[39;1H[K[38;1H[34h[?25h[?25l[1;38r[38;1H
[1;39r[38;1Helse[34h[?25h[?25l[1;38r[38;1H
[1;39r[38;5Hecho "Distribution not supported"[34h[?25h[?25l[1;38r[38;1H
[1;39r[38;5Hexit 1[34h[?25h[?25l[1;38r[38;1H
[1;39r[38;1Hfi[34h[?25h[?25l
:[34h[?25hwq[?25l"install-and-configure-docker.sh" 81 lines, 898964 characters written
[?1l>[34h[?25h[?1049l[01;32mpi@raspberrypi[00m:[01;34m~/docker_images $[00m git add install-and-configure-docker.sh 
[01;32mpi@raspberrypi[00m:[01;34m~/docker_images $[00m git commit
hint: Waiting for your editor to close the file... (B)0[?1049h[1;39r[m[4l[39;49m[?1h=[?1h=[?1h=[?25l[39;49m[m[H[J[37;54H[0;7m[ Reading File ][m[37;60H[0;7m 14 lines ][m[H[0;7m  GNU nano 3.2                            /home/pi/docker_images/.git/COMMIT_EDITMSG                                       [1;122H[m[38d[0;7m^G[m Get Help    [0;7m^O[m Write Out   [0;7m^W[m Where Is    [0;7m^K[m Cut Text    [0;7m^J[m Justify     [0;7m^C[m Cur Pos     [0;7mM-U[m Undo[106G[0;7mM-A[m Mark Text[39d[0;7m^X[m Exit[39;16H[0;7m^R[m Read File   [0;7m^\[m Replace     [0;7m^U[m Uncut Text  [0;7m^T[m To Spell    [0;7m^_[m Go To Line  [0;7mM-E[m Redo[106G[0;7mM-6[m Copy TextMM[4d[39;49m[36m# Please enter the commit message for your changes. Lines starting[5d# with '#' will be ignored, and an empty message aborts the commit.[6d#[7d# On branch master[8d# Your branch is up to date with 'origin/master'.[9d#[10d# Changes to be committed:[11d#       modified:   func_collection.sh[12d#       modified:   install-and-configure-docker.sh[13d#[14d# Untracked files:[15d#       typescript[16d#[3d[39m[m[34h[?25h[?25l[1;114H[0;7mModified[m[3dA[34h[?25h[?25ld[34h[?25h[?25ld[34h[?25h[?25l [34h[?25h[?25lf[34h[?25h[?25lu[34h[?25h[?25ln[34h[?25h[?25lc[34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25lf[34h[?25h[?25lu[34h[?25h[?25ln[34h[?25h[?25lc[34h[?25h[?25lt[34h[?25h[?25li[34h[?25h[?25lo[34h[?25h[?25ln[34h[?25h[?25l [34h[?25h[?25lE[34h[?25h[?25lx[34h[?25h[?25li[34h[?25h[?25lt[34h[?25h[?25l_[37d[K[3;19H[34h[?25h[?25la[34h[?25h[?25ln[34h[?25h[?25ld[34h[?25h[?25l_[34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25li[34h[?25h[?25lf[34h[?25h[?25l_[34h[?25h[?25lf[34h[?25h[?25li[34h[?25h[?25ll[34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25la[34h[?25h[?25li[34h[?25h[?25ll[34h[?25h[?25le[34h[?25h[?25ld[34h[?25h[?25l [34h[?25h[?25la[34h[?25h[?25ln[34h[?25h[?25ld[34h[?25h[?25l [34h[?25h[?25lE[34h[?25h[?25lv[34h[?25h[?25la[34h[?25h[?25ll[34h[?25h[?25l_[34h[?25h[?25la[34h[?25h[?25ln[34h[?25h[?25ld[34h[?25h[?25l_[34h[?25h[?25lE[34h[?25h[?25lx[34h[?25h[?25li[34h[?25h[?25lt[34h[?25h[?25l_[34h[?25h[?25li[34h[?25h[?25lf[34h[?25h[?25l [34h[?25h[?25l+[34h[?25h[?25l [34h[?25h[?25l[34h[?25h[?25l_[34h[?25h[?25lf[34h[?25h[?25la[34h[?25h[?25li[34h[?25h[?25ll[34h[?25h[?25le[34h[?25h[?25ld[34h[?25h[?25l [34h[?25h[?25li[34h[?25h[?25ln[34h[?25h[?25l [34h[?25h[?25lf[34h[?25h[?25lu[34h[?25h[?25ln[34h[?25h[?25lc[34h[?25h[?25l_[34h[?25h[?25le[34h[?25h[?25l [34h[?25h[?25lc[34h[?25h[?25lo[34h[?25h[?25ll[34h[?25h[?25ll[34h[?25h[?25le[34h[?25h[?25lc[34h[?25h[?25lt[34h[?25h[?25li[34h[?25h[?25lo[34h[?25h[?25ln[34h[?25h[?25l.[34h[?25h[?25ls[34h[?25h[?25lh[34h[?25h[?25l [34h[?25h[?25lt[34h[?25h[?25lo[34h[?25h[?25l [34h[?25h[?25lr[34h[?25h[?25le[34h[?25h[?25lp[34h[?25h[?25ll[34h[?25h[?25la[34h[?25h[?25lc[34h[?25h[?25le[34h[?25h[?25l [34h[?25h[?25la[34h[?25h[?25ll[34h[?25h[?25ll[34h[?25h[?25l [34h[?25h[?25l'[34h[?25h[?25li[34h[?25h[?25lf[34h[?25h[?25l'[34h[?25h[?25l [34h[?25h[?25l,[34h[?25h[?25l [34h[?25h[?25l'[34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25le[34h[?25h[?25ll[34h[?25h[?25ls[34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l[34h[?25h[?25l [34h[?25h[?25l;[34h[?25h[?25lt[34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25lt[34h[?25h[?25lh[34h[?25h[?25le[34h[?25h[?25ln[34h[?25h[?25l'[34h[?25h[?25l [34h[?25h[?25lb[34h[?25h[?25ll[34h[?25h[?25lo[34h[?25h[?25lc[34h[?25h[?25lk[34h[?25h[?25l [34h[?25h[?25lu[34h[?25h[?25ls[34h[?25h[?25le[34h[?25h[?25ld[34h[?25h[?25l [34h[?25h[?25li[34h[?25h[?25ln[34h[?25h[?25l [34h[?25h[?25l7[4;37r8[4dM[1;39r[4;1H[34h[?25h[?25lf[34h[?25h[?25lu[34h[?25h[?25ln[34h[?25h[?25lc[34h[?25h[?25l_[34h[?25h[?25lc[34h[?25h[?25ll[34h[?25h[?25l [34h[?25h[?25lo[34h[?25h[?25ll[34h[?25h[?25ll[34h[?25h[?25le[34h[?25h[?25lc[34h[?25h[?25lt[34h[?25h[?25li[34h[?25h[?25lo[34h[?25h[?25ln[34h[?25h[?25l.[34h[?25h[?25ls[34h[?25h[?25lh[34h[?25h[?25la[34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25la[34h[?25h[?25ln[34h[?25h[?25ld[34h[?25h[?25l [34h[?25h[?25li[34h[?25h[?25ln[34h[?25h[?25ls[34h[?25h[?25lt[34h[?25h[?25la[34h[?25h[?25l;[34h[?25h[?25ll[34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25ll[34h[?25h[?25ll[34h[?25h[?25l-[34h[?25h[?25la[34h[?25h[?25ln[34h[?25h[?25ld[34h[?25h[?25l-[34h[?25h[?25lc[34h[?25h[?25lo[34h[?25h[?25ln[34h[?25h[?25lf[34h[?25h[?25li[34h[?25h[?25lg[34h[?25h[?25lu[34h[?25h[?25lr[34h[?25h[?25le[34h[?25h[?25l-[34h[?25h[?25ld[34h[?25h[?25lo[34h[?25h[?25lc[34h[?25h[?25lk[34h[?25h[?25le[34h[?25h[?25lr[34h[?25h[?25l.[34h[?25h[?25ls[34h[?25h[?25lh[34h[?25h[?25l.[34h[?25h[?25l[38;16H               [0;7mM-D[m DOS Format                [0;7mM-A[m Append               [93G[0;7mB[m Backup File[K[39;2H[0;7mC[m Cancel[16G               [0;7mM-M[m Mac Format                [0;7mM-P[m Prepend                   [0;7m^T[m To Files[KMM[0;7mFile Name to Write: /home/pi/docker_images/.git/COMMIT_EDITMSG                                                             [37;1H[m[37;63H[34h[?25h[?25l[K[1;122H[1;114H[0;7m        [m[37;53H[0;7m[ Wrote 15 lines ][m[38;16H[0;7m^O[m Write Out   [0;7m^W[m Where Is    [0;7m^K[m Cut Text    [0;7m^J[m Justify     [0;7m^C[m Cur Pos[93G[0;7mU[m Undo       [0;7mM-A[m Mark Text[39;2H[0;7mX[m Exit  [16G[0;7m^R[m Read File   [0;7m^\[m Replace     [0;7m^U[m Uncut Text  [0;7m^T[m To Spell    [0;7m^_[m Go To Line  [0;7mM-E[m Redo       [0;7mM-6[m Copy TextMM[4;56H[34h[?25h[?25l[38;16H               [0;7mM-D[m DOS Format                [0;7mM-A[m Append               [93G[0;7mB[m Backup File[K[39;2H[0;7mC[m Cancel[16G               [0;7mM-M[m Mac Format                [0;7mM-P[m Prepend                   [0;7m^T[m To Files[KMM[0;7mFile Name to Write: /home/pi/docker_images/.git/COMMIT_EDITMSG                                                             [37;1H[m[37;63H[34h[?25h[?25l[K[1;122H[37;53H[0;7m[ Wrote 15 lines ][m[38;16H[0;7m^O[m Write Out   [0;7m^W[m Where Is    [0;7m^K[m Cut Text    [0;7m^J[m Justify     [0;7m^C[m Cur Pos[93G[0;7mU[m Undo       [0;7mM-A[m Mark Text[39;2H[0;7mX[m Exit  [16G[0;7m^R[m Read File   [0;7m^\[m Replace     [0;7m^U[m Uncut Text  [0;7m^T[m To Spell    [0;7m^_[m Go To Line  [0;7mM-E[m Redo       [0;7mM-6[m Copy TextMM[4;56H[34h[?25h[?25l[37d[J[39;123H[34h[?25h[39;1H[?1049l[?1l>[K[master 46dd77f] Add function Exit_if_failed and Eval_and_Exit_if_failed in func_collection.sh to replace all 'if ; then' block used in func_collection.sh and install-and-configure-docker.sh.
 2 files changed, 59 insertions(+), 26 deletions(-)
[01;32mpi@raspberrypi[00m:[01;34m~/docker_images $[00m vi install-and-configure-docker.sh 
[?1049h[?1h=[1;39r[23m[24m[0m[H[J[?25l[39;1H"install-and-configure-docker.sh" 81 lines, 898964 characters[1;1H#!/usr/bin/env bash

source ./func_collection.sh

Exit_if_failed $UID "Does not have enough permission, please run as root"
#if [ $UID -ne 0 ]; then
#    echo "Does not have enough permission, please run as root"
#    exit 1
#fi

# Install docker-ce using distro's software manager
if grep -q -e "Debian" -e "debian" /etc/*-release; then
    echo -e "\nInstall necessary softwares for adding docker-ce apt source with gpg key"
    apt update && apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common[16;5Hecho -e "\nInstalling fingerprint for docker-ce source"
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -[19;5Hecho -e "\nVerifing fingerprint of the key"
    apt-key fingerprint 0EBFCD88 2>/dev/null | grep -q "9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88"
    Eval_and_Exit_if_failed "[ $? -ne 1 ]" "Failed to verify the fingerprint"
    #if [ $? -eq 1 ]; then
    #    echo "Failed to verify the fingerprint"
    #    exit 1
    #fi[27;5Hecho -e "\nAdding docker-ce apt source"
    add-apt-repository "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    Exit_if_failed $? "Failed to add the docker debian source"
    #if [ $? -ne 0 ]; then
    #    echo "Failed to add the docker debian source"
    #    exit 1
    #fi[35;5Hecho -e "\nInstalling docker-ce"
    apt update
    apt install docker-ce docker-ce-cli containerd.io[1;1H[34h[?25h












[?25l[15;38r[15;1H[L[1;39r[39;1H[K[15;1H[34h[?25h[?25l[8C[34h[?25h[?25l[34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25l [34h[?25h[?25li[34h[?25h[?25lf[34h[?25h[?25l [34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l [34h[?25h[?25lE[34h[?25h[?25lx[34h[?25h[?25li[34h[?25h[?25lt[34h[?25h[?25l_[34h[?25h[?25li[34h[?25h[?25lf[34h[?25h[?25l_[34h[?25h[?25lf[34h[?25h[?25la[34h[?25h[?25li[34h[?25h[?25ll[34h[?25h[?25le[34h[?25h[?25ld[34h[?25h[?25l [34h[?25h[?25l$[34h[?25h[?25l?[34h[?25h[?25l [34h[?25h[?25l"[34h[?25h[?25lF[34h[?25h[?25la[34h[?25h[?25li[34h[?25h[?25ll[34h[?25h[?25le[34h[?25h[?25ld[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l[34h[?25h[?25l\[34h[?25h[?25ln[34h[?25h[?25lF[34h[?25h[?25la[34h[?25h[?25li[34h[?25h[?25ll[34h[?25h[?25le[34h[?25h[?25ld[34h[?25h[?25l [34h